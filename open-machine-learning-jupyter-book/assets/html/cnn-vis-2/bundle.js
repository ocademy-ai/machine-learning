var app = function () { "use strict"; function t() { } function e(t) { return t() } function a() { return Object.create(null) } function l(t) { t.forEach(e) } function n(t) { return "function" == typeof t } function s(t, e) { return t != t ? e == e : t !== e || t && "object" == typeof t || "function" == typeof t } function r(t, e) { t.appendChild(e) } function i(t, e, a) { t.insertBefore(e, a || null) } function o(t) { t.parentNode && t.parentNode.removeChild(t) } function d(t) { return document.createElement(t) } function c(t) { return document.createTextNode(t) } function g() { return c(" ") } function u() { return c("") } function p(t, e, a, l) { return t.addEventListener(e, a, l), () => t.removeEventListener(e, a, l) } function h(t, e, a) { null == a ? t.removeAttribute(e) : t.getAttribute(e) !== a && t.setAttribute(e, a) } function y(t) { return "" === t ? null : +t } function m(t, e) { e = "" + e, t.data !== e && (t.data = e) } function f(t, e) { t.value = null == e ? "" : e } function x(t, e, a, l) { null == a ? t.style.removeProperty(e) : t.style.setProperty(e, a, l ? "important" : "") } function v(t, e, a) { t.classList[a ? "add" : "remove"](e) } let b; function $(t) { b = t } function w() { if (!b) throw new Error("Function called outside component initialization"); return b } function k(t) { w().$$.on_mount.push(t) } function I(t) { w().$$.after_update.push(t) } function L() { const t = w(); return (e, a, { cancelable: l = !1 } = {}) => { const n = t.$$.callbacks[e]; if (n) { const s = function (t, e, { bubbles: a = !1, cancelable: l = !1 } = {}) { const n = document.createEvent("CustomEvent"); return n.initCustomEvent(t, a, l, e), n }(e, a, { cancelable: l }); return n.slice().forEach(e => { e.call(t, s) }), !s.defaultPrevented } return !0 } } const M = [], A = []; let E = []; const R = [], S = Promise.resolve(); let C = !1; function N(t) { E.push(t) } const H = new Set; let _ = 0; function P() { if (0 !== _) return; const t = b; do { try { for (; _ < M.length;) { const t = M[_]; _++, $(t), O(t.$$) } } catch (t) { throw M.length = 0, _ = 0, t } for ($(null), M.length = 0, _ = 0; A.length;)A.pop()(); for (let t = 0; t < E.length; t += 1) { const e = E[t]; H.has(e) || (H.add(e), e()) } E.length = 0 } while (M.length); for (; R.length;)R.pop()(); C = !1, H.clear(), $(t) } function O(t) { if (null !== t.fragment) { t.update(), l(t.before_update); const e = t.dirty; t.dirty = [-1], t.fragment && t.fragment.p(t.ctx, e), t.after_update.forEach(N) } } const B = new Set; let X; function z() { X = { r: 0, c: [], p: X } } function F() { X.r || l(X.c), X = X.p } function G(t, e) { t && t.i && (B.delete(t), t.i(e)) } function T(t, e, a, l) { if (t && t.o) { if (B.has(t)) return; B.add(t), X.c.push(() => { B.delete(t), l && (a && t.d(1), l()) }), t.o(e) } else l && l() } function V(t) { t && t.c() } function q(t, a, s, r) { const { fragment: i, after_update: o } = t.$$; i && i.m(a, s), r || N(() => { const a = t.$$.on_mount.map(e).filter(n); t.$$.on_destroy ? t.$$.on_destroy.push(...a) : l(a), t.$$.on_mount = [] }), o.forEach(N) } function j(t, e) { const a = t.$$; null !== a.fragment && (!function (t) { const e = [], a = []; E.forEach(l => -1 === t.indexOf(l) ? e.push(l) : a.push(l)), a.forEach(t => t()), E = e }(a.after_update), l(a.on_destroy), a.fragment && a.fragment.d(e), a.on_destroy = a.fragment = null, a.ctx = []) } function D(t, e) { -1 === t.$$.dirty[0] && (M.push(t), C || (C = !0, S.then(P)), t.$$.dirty.fill(0)), t.$$.dirty[e / 31 | 0] |= 1 << e % 31 } function W(e, n, s, r, i, d, c, g = [-1]) { const u = b; $(e); const p = e.$$ = { fragment: null, ctx: [], props: d, update: t, not_equal: i, bound: a(), on_mount: [], on_destroy: [], on_disconnect: [], before_update: [], after_update: [], context: new Map(n.context || (u ? u.$$.context : [])), callbacks: a(), dirty: g, skip_bound: !1, root: n.target || u.$$.root }; c && c(p.root); let h = !1; if (p.ctx = s ? s(e, n.props || {}, (t, a, ...l) => { const n = l.length ? l[0] : a; return p.ctx && i(p.ctx[t], p.ctx[t] = n) && (!p.skip_bound && p.bound[t] && p.bound[t](n), h && D(e, t)), a }) : [], p.update(), h = !0, l(p.before_update), p.fragment = !!r && r(p.ctx), n.target) { if (n.hydrate) { const t = function (t) { return Array.from(t.childNodes) }(n.target); p.fragment && p.fragment.l(t), t.forEach(o) } else p.fragment && p.fragment.c(); n.intro && G(e.$$.fragment), q(e, n.target, n.anchor, n.customElement), P() } $(u) } class K { $destroy() { j(this, 1), this.$destroy = t } $on(e, a) { if (!n(a)) return t; const l = this.$$.callbacks[e] || (this.$$.callbacks[e] = []); return l.push(a), () => { const t = l.indexOf(a); -1 !== t && l.splice(t, 1) } } $set(t) { var e; this.$$set && (e = t, 0 !== Object.keys(e).length) && (this.$$.skip_bound = !0, this.$$set(t), this.$$.skip_bound = !1) } } const Y = []; function U(e, a = t) { let l; const n = new Set; function r(t) { if (s(e, t) && (e = t, l)) { const t = !Y.length; for (const t of n) t[1](), Y.push(t, e); if (t) { for (let t = 0; t < Y.length; t += 2)Y[t][0](Y[t + 1]); Y.length = 0 } } } return { set: r, update: function (t) { r(t(e)) }, subscribe: function (s, i = t) { const o = [s, i]; return n.add(o), 1 === n.size && (l = a(r) || t), s(e), () => { n.delete(o), 0 === n.size && l && (l(), l = null) } } } } const J = U([]), Q = U(void 0), Z = U(void 0), tt = U(void 0), et = U([]), at = U(void 0), lt = U({}), nt = U([]), st = U([void 0, void 0]), rt = U(!0), it = U(!1), ot = U(!1), dt = U({}), ct = U(!1), gt = U({}), ut = U({}), pt = U({}), ht = (t, e, a) => { let l = []; for (let n = 0; n < t; n++) { let t = new Array(e).fill(a); l.push(t) } return l }, yt = (t, e) => { console.assert(t.length === e.length, "Dimension not matching"), console.assert(t[0].length === e[0].length, "Dimension not matching"); let a = 0; for (let l = 0; l < t.length; l++)for (let n = 0; n < t[0].length; n++)a += t[l][n] * e[l][n]; return a }, mt = (t, e, a, l, n) => t.slice(e, a).map(t => t.slice(l, n)), ft = t => { let e = -1 / 0; for (let a = 0; a < t.length; a++)for (let l = 0; l < t[0].length; l++)t[a][l] > e && (e = t[a][l]); return e }, xt = (t, e, a = 1, l = 0) => { console.assert(t.length === t[0].length, "Conv input is not square"), console.assert(e.length === e[0].length, "Conv kernel is not square"); let n = (t.length - e.length) / a + 1, s = ht(n, n, 0); for (let l = 0; l < n; l++)for (let r = 0; r < n; r++) { let n = mt(t, l * a, l * a + e.length, r * a, r * a + e.length), i = yt(n, e); s[l][r] = i } return s }, vt = (t, e = 2, a = 2, l = "VALID") => { console.assert(2 === e, "Only supports kernen = [2,2]"), console.assert(2 === a, "Only supports stride = 2"), console.assert("VALID" === l, "Only support valid padding"), t.length % 2 == 1 && "VALID" === l && (t = mt(t, 0, t.length - 1, 0, t.length - 1)); let n = (t.length - e) / a + 1, s = ht(n, n, 0); for (let l = 0; l < n; l++)for (let r = 0; r < n; r++) { let n = mt(t, l * a, l * a + e, r * a, r * a + e); s[l][r] = ft(n) } return s }; function bt(t, e) { return Array.from({ length: t }, e ? (t, a) => e(a) : void 0) } function $t(t, e, a) { return Array.from({ length: t }, (t, l) => Array.from({ length: e }, a ? (t, e) => a(l, e) : void 0)) } function wt(t, e, a, l, n) { const s = $t(e.length, e.length, (t, e) => $t(a, a)); for (let r = 0; r < e.length; r++)for (let i = 0; i < e.length; i++)for (let e = 0; e < a; e++)for (let o = 0; o < a; o++) { const a = r * t + e * n, d = i * t + o * n; s[r][i][e][o] = a * l + d } return s } function kt(t, e, a, l, n, s) { const r = bt(a * a); for (let a = 0; a < s; a++)for (let l = 0; l < s; l++) { const s = n[t][e][a][l]; void 0 !== s && (r[s] = [a, l]) } return r } function It(t, e, a) { var l = e.reduce((t, e, a) => (null != e && t.push(a), t), []); return mt(t, Math.floor(l[0] / t.length), Math.floor(l[0] / t.length) + a, l[0] % t.length, l[0] % t.length + a) } function Lt(t, e) { var a = e.reduce((t, e, a) => (0 != e && t.push(a), t), []); return mt(t, Math.floor(a[0] / t.length), Math.floor(a[0] / t.length) + 1, a[0] % t.length, a[0] % t.length + 1) } function Mt(t) { return 150 / t > 20 ? 20 : 150 / t } function At(t) { let e = t.map((function (t) { return Math.max.apply(Math, t) })), a = Math.max.apply(null, e), l = t.map((function (t) { return Math.min.apply(Math, t) })), n = Math.min.apply(null, l); return { range: 2 * Math.max(Math.abs(n), Math.abs(a)), min: n, max: a } } function Et(t, e = Mt(t.length)) { for (var a = new Array, l = 1, n = 1, s = e, r = e, i = 0; i < t.length; i++) { a.push(new Array); for (var o = 0; o < t[0].length; o++)a[i].push({ text: Math.round(100 * t[i][o]) / 100, row: i, col: o, x: l, y: n, width: s, height: r }), l += s; l = 1, n += r } return a } function Rt(e) { let a; return { c() { a = d("div"), a.innerHTML = '<svg id="grid" width="100%" height="100%"></svg>', x(a, "display", "inline-block"), x(a, "vertical-align", "middle"), h(a, "class", "grid") }, m(t, l) { i(t, a, l), e[10](a) }, p: t, i: t, o: t, d(t) { t && o(a), e[10](null) } } } function St(t, e, a) { let l, { data: n } = e, { highlights: s } = e, { isKernelMath: r } = e, { constraint: i } = e, { dataRange: o } = e, { outputLength: d } = e, { stride: c } = e, { colorScale: g = d3.interpolateRdBu } = e, { isInputLayer: u = !1 } = e; const p = L(); let h = s, y = n; const m = () => { d3.select(l).selectAll("#grid > *").remove(); const t = n.length * i + 2; var e = d3.select(l).select("#grid").attr("width", t + "px").attr("height", t + "px").append("svg").attr("width", t + "px").attr("height", t + "px").selectAll(".row").data(n).enter().append("g").attr("class", "row"); e.selectAll(".square").data((function (t) { return t })).enter().append("rect").attr("class", "square").attr("x", (function (t) { return t.x })).attr("y", (function (t) { return t.y })).attr("width", (function (t) { return t.width })).attr("height", (function (t) { return t.height })).style("opacity", .8).style("fill", (function (t) { let e = t.text; return e = u ? 1 - t.text : (t.text + o / 2) / o, g(e) })).on("mouseover", (function (t) { n.length != d ? p("message", { hoverH: Math.min(Math.floor(t.row / c), d - 1), hoverW: Math.min(Math.floor(t.col / c), d - 1) }) : p("message", { hoverH: Math.min(Math.floor(t.row / 1), d - 1), hoverW: Math.min(Math.floor(t.col / 1), d - 1) }) })); if (r) e.selectAll(".text").data((function (t) { return t })).enter().append("text").attr("class", "text").style("font-size", Math.floor(i / 2.6) + "px").attr("x", (function (t) { return t.x + t.width / 2 })).attr("y", (function (t) { return t.y + t.height / 2 })).style("fill", (function (t) { let e = t.text; return e = u ? 1 - t.text : (t.text + o / 2) / o, e < .2 || e > .8 ? "white" : "black" })).style("text-anchor", "middle").style("dominant-baseline", "middle").text((function (t) { return t.text.toString().replace("-", "－") })) }; return I(() => { (n != y && (m(), y = n), s != h) && (d3.select(l).select("#grid").select("svg").selectAll(".square").style("stroke", t => r || s.length && s[t.row * n.length + t.col] ? "black" : null), h = s) }), k(() => { m() }), t.$$set = t => { "data" in t && a(1, n = t.data), "highlights" in t && a(2, s = t.highlights), "isKernelMath" in t && a(3, r = t.isKernelMath), "constraint" in t && a(4, i = t.constraint), "dataRange" in t && a(5, o = t.dataRange), "outputLength" in t && a(6, d = t.outputLength), "stride" in t && a(7, c = t.stride), "colorScale" in t && a(8, g = t.colorScale), "isInputLayer" in t && a(9, u = t.isInputLayer) }, [l, n, s, r, i, o, d, c, g, u, function (t) { A[t ? "unshift" : "push"](() => { l = t, a(0, l) }) }] } class Ct extends K { constructor(t) { super(), W(this, t, St, Rt, s, { data: 1, highlights: 2, isKernelMath: 3, constraint: 4, dataRange: 5, outputLength: 6, stride: 7, colorScale: 8, isInputLayer: 9 }) } } function Nt(e) { let a, l, n; return { c() { a = d("div"), l = g(), n = d("div"), n.innerHTML = '<svg id="grid" width="100%" height="100%"></svg>', h(a, "class", "legend"), h(n, "class", "grid") }, m(t, s) { i(t, a, s), e[10](a), i(t, l, s), i(t, n, s), e[11](n) }, p: t, i: t, o: t, d(t) { t && o(a), e[10](null), t && o(l), t && o(n), e[11](null) } } } function Ht(t, e, a) { let l, n, { data: s } = e, { kernel: r } = e, { constraint: i } = e, { dataRange: o } = e, { kernelRange: d } = e, { colorScale: c = d3.interpolateRdBu } = e, { kernelColorScale: g = d3.interpolateBrBG } = e, { isInputLayer: u = !1 } = e; const p = Math.floor(i / 3); let h = s; const y = () => { d3.select(l).selectAll("#grid > *").remove(); const t = r ? s.length * i * 2 + 2 : s.length * i + 2; var e = d3.select(l).select("#grid").attr("width", t + "px").attr("height", t + "px").append("svg").attr("width", t + "px").attr("height", t + "px").selectAll(".row").data(s).enter().append("g").attr("class", "row"), a = e.selectAll(".square").data((function (t) { return t })).enter(); a.append("rect").attr("class", "square").attr("x", (function (t) { return 1 === t.x ? t.x + p : 2 * t.x + p })).attr("y", (function (t) { return 1 === t.y ? t.y : 2 * t.y })).attr("width", (function (t) { return t.width })).attr("height", (function (t) { return t.height })).style("opacity", .5).style("fill", (function (t) { let e = t.text; return e = u ? 1 - t.text : (t.text + o / 2) / o, c(e) })).style("stroke", "black"), a.append("rect").attr("class", "square").attr("x", (function (t) { return 1 === t.x ? t.x + p : 2 * t.x + p })).attr("y", (function (t) { return 1 === t.y ? t.y + t.height : 2 * t.y + t.height })).attr("width", (function (t) { return t.width })).attr("height", (function (t) { return t.height / 2 })).style("opacity", .5).style("fill", (function (t) { let e = (r[t.row][t.col].text + d.range / 2) / d.range; return g(.6 * e + .2) })); var n = e.selectAll(".text").data((function (t) { return t })).enter(); n.append("text").attr("class", "text").style("font-size", Math.floor(i / 2.6) + "px").attr("x", (function (t) { return 1 === t.x ? t.x + t.width / 2 + p : 2 * t.x + t.width / 2 + p })).attr("y", (function (t) { return 1 === t.y ? t.y + t.height / 2 : 2 * t.y + t.height / 2 })).style("fill", (function (t) { let e = t.text; return e = u ? 1 - t.text : (t.text + o / 2) / o, e < .2 || e > .8 ? u && e < .2 ? "black" : "white" : "black" })).style("text-anchor", "middle").style("dominant-baseline", "middle").text((function (t) { return t.text })), n.append("text").attr("class", "text").style("font-size", Math.floor(i / 2.6) + "px").attr("font-weight", 600).attr("x", (function (t) { return 1 === t.x ? t.x + p / 2 : 2 * t.x + p / 2 })).attr("y", (function (t) { return 1 === t.y ? t.y + t.height + t.height / 4 : 2 * t.y + t.height + t.height / 4 })).style("fill", "black").style("text-anchor", "middle").style("dominant-baseline", "middle").text((function (t) { return "×" })), n.append("text").attr("class", "text").style("font-size", Math.floor(i / 2.6) + "px").attr("x", (function (t) { return 1 === t.x ? t.x + t.width / 2 + p : 2 * t.x + t.width / 2 + p })).attr("y", (function (t) { return 1 === t.y ? t.y + t.height + t.height / 4 : 2 * t.y + t.height + t.height / 4 })).style("fill", (function (t) { let e = .6 * ((r[t.row][t.col].text + d.range / 2) / d.range) + .2; return e < .2 || e > .8 ? "white" : "black" })).style("text-anchor", "middle").style("dominant-baseline", "middle").text((function (t) { return r[t.row][t.col].text })), n.append("text").attr("class", "text").style("font-size", Math.floor(i / 1.6) + "px").attr("x", (function (t) { return 1 === t.x ? t.x + t.width + t.width / 2 + p : 2 * t.x + t.width + t.width / 2 + p })).attr("y", (function (t) { return 1 === t.y ? t.y + t.height / 2 : 2 * t.y + t.height / 2 })).style("text-anchor", "middle").style("dominant-baseline", "middle").text((function (t) { return t.row == r.length - 1 && t.col == r.length - 1 ? "=" : "+" })) }; return I(() => { s != h && (y(), h = s) }), k(() => { y() }), t.$$set = t => { "data" in t && a(2, s = t.data), "kernel" in t && a(3, r = t.kernel), "constraint" in t && a(4, i = t.constraint), "dataRange" in t && a(5, o = t.dataRange), "kernelRange" in t && a(6, d = t.kernelRange), "colorScale" in t && a(7, c = t.colorScale), "kernelColorScale" in t && a(8, g = t.kernelColorScale), "isInputLayer" in t && a(9, u = t.isInputLayer) }, [l, n, s, r, i, o, d, c, g, u, function (t) { A[t ? "unshift" : "push"](() => { n = t, a(1, n) }) }, function (t) { A[t ? "unshift" : "push"](() => { l = t, a(0, l) }) }] } class _t extends K { constructor(t) { super(), W(this, t, Ht, Nt, s, { data: 2, kernel: 3, constraint: 4, dataRange: 5, kernelRange: 6, colorScale: 7, kernelColorScale: 8, isInputLayer: 9 }) } } function Pt(t) { let e, a, l, n, s, u, p, y, f, x, v, b, $, w, k, I, L, M, A, E, R, S, C, N, H, _ = t[2].length + "", P = t[2][0].length + "", O = t[3].length + "", B = t[3][0].length + ""; return f = new Ct({ props: { data: t[11], highlights: t[7], outputLength: t[3].length, isKernelMath: !1, constraint: Mt(t[2].length), dataRange: t[4], stride: t[0], colorScale: t[5], isInputLayer: t[6] } }), f.$on("message", t[14]), b = new _t({ props: { data: t[9], kernel: t[13], constraint: Mt(t[1].length), dataRange: t[4], kernelRange: At(t[1]), colorScale: t[5], isInputLayer: t[6] } }), w = new Ct({ props: { data: t[10], highlights: t[8], isKernelMath: !0, constraint: Mt(t[1].length), dataRange: t[4] } }), N = new Ct({ props: { data: t[12], highlights: t[8], isKernelMath: !1, outputLength: t[3].length, constraint: Mt(t[3].length), dataRange: t[4], stride: t[0] } }), N.$on("message", t[14]), { c() { e = d("div"), a = d("div"), l = c("Input ("), n = c(_), s = c(", "), u = c(P), p = c(")"), y = g(), V(f.$$.fragment), x = g(), v = d("div"), V(b.$$.fragment), $ = g(), V(w.$$.fragment), k = g(), I = d("div"), L = d("div"), M = c("Output ("), A = c(O), E = c(", "), R = c(B), S = c(")"), C = g(), V(N.$$.fragment), h(a, "class", "header-text"), h(e, "class", "column has-text-centered svelte-gz7a6i"), h(v, "class", "column has-text-centered svelte-gz7a6i"), h(L, "class", "header-text"), h(I, "class", "column has-text-centered svelte-gz7a6i") }, m(t, o) { i(t, e, o), r(e, a), r(a, l), r(a, n), r(a, s), r(a, u), r(a, p), r(e, y), q(f, e, null), i(t, x, o), i(t, v, o), q(b, v, null), r(v, $), q(w, v, null), i(t, k, o), i(t, I, o), r(I, L), r(L, M), r(L, A), r(L, E), r(L, R), r(L, S), r(I, C), q(N, I, null), H = !0 }, p(t, [e]) { (!H || 4 & e) && _ !== (_ = t[2].length + "") && m(n, _), (!H || 4 & e) && P !== (P = t[2][0].length + "") && m(u, P); const a = {}; 2048 & e && (a.data = t[11]), 128 & e && (a.highlights = t[7]), 8 & e && (a.outputLength = t[3].length), 4 & e && (a.constraint = Mt(t[2].length)), 16 & e && (a.dataRange = t[4]), 1 & e && (a.stride = t[0]), 32 & e && (a.colorScale = t[5]), 64 & e && (a.isInputLayer = t[6]), f.$set(a); const l = {}; 512 & e && (l.data = t[9]), 8192 & e && (l.kernel = t[13]), 2 & e && (l.constraint = Mt(t[1].length)), 16 & e && (l.dataRange = t[4]), 2 & e && (l.kernelRange = At(t[1])), 32 & e && (l.colorScale = t[5]), 64 & e && (l.isInputLayer = t[6]), b.$set(l); const s = {}; 1024 & e && (s.data = t[10]), 256 & e && (s.highlights = t[8]), 2 & e && (s.constraint = Mt(t[1].length)), 16 & e && (s.dataRange = t[4]), w.$set(s), (!H || 8 & e) && O !== (O = t[3].length + "") && m(A, O), (!H || 8 & e) && B !== (B = t[3][0].length + "") && m(R, B); const r = {}; 4096 & e && (r.data = t[12]), 256 & e && (r.highlights = t[8]), 8 & e && (r.outputLength = t[3].length), 8 & e && (r.constraint = Mt(t[3].length)), 16 & e && (r.dataRange = t[4]), 1 & e && (r.stride = t[0]), N.$set(r) }, i(t) { H || (G(f.$$.fragment, t), G(b.$$.fragment, t), G(w.$$.fragment, t), G(N.$$.fragment, t), H = !0) }, o(t) { T(f.$$.fragment, t), T(b.$$.fragment, t), T(w.$$.fragment, t), T(N.$$.fragment, t), H = !1 }, d(t) { t && o(e), j(f), t && o(x), t && o(v), j(b), j(w), t && o(k), t && o(I), j(N) } } } function Ot(t, e, a) { let { stride: l } = e, { dilation: n } = e, { kernel: s } = e, { image: r } = e, { output: i } = e, { isPaused: o } = e, { dataRange: d } = e, { colorScale: c } = e, { isInputInputLayer: g = !1 } = e; const u = L(); let p = r.length + 0, h = []; for (let t = 0; t < s.length; t++) { h.push([]); for (let e = 0; e < s.length; e++)h[t].push(0) } h = Et(h); let y, m, f = Et([0]), x = [], v = bt(i.length * i.length, t => !0); function b(t) { m = 0; let e = wt(t, i, s.length, p, n); t <= 0 || (y && clearInterval(y), a(17, y = setInterval(() => { if (o) return; const t = m % (i.length * i.length); a(8, v = bt(i.length * i.length, t => !1)); const l = Math.floor(t / i.length), n = t % i.length; a(8, v[l * i.length + n] = !0, v), a(7, x = kt(l, n, p, s.length, e, s.length)); const d = It(r, x, s.length); a(9, h = Et(d)); const c = Lt(i, v); a(10, f = Et(c)), m++ }, 250))) } b(l); let $ = Et(r), w = Et(i), k = Et(s); return t.$$set = t => { "stride" in t && a(0, l = t.stride), "dilation" in t && a(16, n = t.dilation), "kernel" in t && a(1, s = t.kernel), "image" in t && a(2, r = t.image), "output" in t && a(3, i = t.output), "isPaused" in t && a(15, o = t.isPaused), "dataRange" in t && a(4, d = t.dataRange), "colorScale" in t && a(5, c = t.colorScale), "isInputInputLayer" in t && a(6, g = t.isInputInputLayer) }, t.$$.update = () => { if (4 & t.$$.dirty && (p = r.length + 0), 8 & t.$$.dirty) { bt(i.length * i.length, t => !0) } 15 & t.$$.dirty && (b(l), a(11, $ = Et(r)), a(12, w = Et(i)), a(13, k = Et(s))) }, [l, s, r, i, d, c, g, x, v, h, f, $, w, k, function (t) { let e = wt(l, i, s.length, p, n); a(8, v = bt(i.length * i.length, t => !1)); const d = t.detail.hoverH, c = t.detail.hoverW; a(8, v[d * i.length + c] = !0, v), a(7, x = kt(d, c, p, s.length, e, s.length)); const g = It(r, x, s.length); a(9, h = Et(g)); const y = Lt(i, v); a(10, f = Et(y)), a(15, o = !0), u("message", { text: o }) }, o, n, y] } class Bt extends K { constructor(t) { super(), W(this, t, Ot, Pt, s, { stride: 0, dilation: 16, kernel: 1, image: 2, output: 3, isPaused: 15, dataRange: 4, colorScale: 5, isInputInputLayer: 6 }) } } function Xt(t) { let e, a, n, s, c, u, y, m, f, x, v, b, $, w, k, I, L, M, A, E = t[6] ? '<i class="fas fa-play-circle play-icon"></i>' : '<i class="fas fa-pause-circle"></i>'; return w = new Bt({ props: { kernel: t[2], image: t[1], output: t[7], stride: Ft, dilation: Gt, isPaused: t[6], dataRange: t[3], colorScale: t[4], isInputInputLayer: t[5] } }), w.$on("message", t[9]), { c() { e = d("div"), a = d("div"), n = d("div"), s = d("div"), s.textContent = "Convolution", c = g(), u = d("div"), y = d("div"), y.innerHTML = '<i class="fas fa-info-circle"></i>', m = g(), f = d("div"), x = g(), v = d("div"), v.innerHTML = '<i class="fas control-icon fa-times-circle"></i>', b = g(), $ = d("div"), V(w.$$.fragment), k = g(), I = d("div"), I.innerHTML = '<img src="./pointer.svg" alt="pointer icon" class="svelte-1j8mhv0"/> \n        <div class="annotation-text"><span style="font-weight:600">Hover over</span> the matrices to change kernel position.</div>', h(s, "class", "title-text svelte-1j8mhv0"), h(y, "class", "control-button svelte-1j8mhv0"), h(y, "title", "Jump to article section"), h(f, "class", "play-button control-button svelte-1j8mhv0"), h(f, "title", "Play animation"), h(v, "class", "delete-button control-button svelte-1j8mhv0"), h(v, "title", "Close"), h(u, "class", "buttons svelte-1j8mhv0"), h(n, "class", "control-pannel svelte-1j8mhv0"), h($, "class", "container is-centered svelte-1j8mhv0"), h(I, "class", "annotation svelte-1j8mhv0"), h(a, "class", "box svelte-1j8mhv0"), h(e, "class", "container svelte-1j8mhv0"), h(e, "id", "detailview-container") }, m(l, o) { i(l, e, o), r(e, a), r(a, n), r(n, s), r(n, c), r(n, u), r(u, y), r(u, m), r(u, f), f.innerHTML = E, r(u, x), r(u, v), r(a, b), r(a, $), q(w, $, null), r(a, k), r(a, I), L = !0, M || (A = [p(y, "click", Tt), p(f, "click", t[8]), p(v, "click", t[10])], M = !0) }, p(t, e) { (!L || 64 & e) && E !== (E = t[6] ? '<i class="fas fa-play-circle play-icon"></i>' : '<i class="fas fa-pause-circle"></i>') && (f.innerHTML = E); const a = {}; 4 & e && (a.kernel = t[2]), 2 & e && (a.image = t[1]), 128 & e && (a.output = t[7]), 64 & e && (a.isPaused = t[6]), 8 & e && (a.dataRange = t[3]), 16 & e && (a.colorScale = t[4]), 32 & e && (a.isInputInputLayer = t[5]), w.$set(a) }, i(t) { L || (G(w.$$.fragment, t), L = !0) }, o(t) { T(w.$$.fragment, t), L = !1 }, d(t) { t && o(e), j(w), M = !1, l(A) } } } function zt(t) { let e, a, l = !t[0] && Xt(t); return { c() { l && l.c(), e = u() }, m(t, n) { l && l.m(t, n), i(t, e, n), a = !0 }, p(t, [a]) { t[0] ? l && (z(), T(l, 1, 1, () => { l = null }), F()) : l ? (l.p(t, a), 1 & a && G(l, 1)) : (l = Xt(t), l.c(), G(l, 1), l.m(e.parentNode, e)) }, i(t) { a || (G(l), a = !0) }, o(t) { T(l), a = !1 }, d(t) { l && l.d(t), t && o(e) } } } let Ft = 1; const Gt = 1; function Tt() { let t = Number(d3.select("#cnn-svg").style("height").replace("px", "")) + 150, e = new SmoothScroll('a[href*="#"]', { offset: -t }), a = document.querySelector("#article-convolution"); e.animateScroll(a) } function Vt(t, e, a) { let { input: l } = e, { kernel: n } = e, { dataRange: s } = e, { colorScale: r = d3.interpolateRdBu } = e, { isInputInputLayer: i = !1 } = e, { isExited: o = !1 } = e; const d = L(); var c = !1, g = xt(l, n, Ft); return t.$$set = t => { "input" in t && a(1, l = t.input), "kernel" in t && a(2, n = t.kernel), "dataRange" in t && a(3, s = t.dataRange), "colorScale" in t && a(4, r = t.colorScale), "isInputInputLayer" in t && a(5, i = t.isInputInputLayer), "isExited" in t && a(0, o = t.isExited) }, t.$$.update = () => { if (6 & t.$$.dirty) try { a(7, g = xt(l, n, Ft)) } catch { console.log("Cannot handle stride of " + Ft) } }, [o, l, n, s, r, i, c, g, function () { a(6, c = !c) }, function (t) { a(6, c = t.detail.text) }, function () { a(0, o = !0), d("message", { text: o }) }] } class qt extends K { constructor(t) { super(), W(this, t, Vt, zt, s, { input: 1, kernel: 2, dataRange: 3, colorScale: 4, isInputInputLayer: 5, isExited: 0 }) } } function jt(t) { let e, a, l, n, s, u, p, y, f, x, v, b, $, w, k, I, L, M, A, E, R, S, C, N, H, _, P, O, B, X = t[0].length + "", z = t[0][0].length + "", F = t[1].length + "", D = t[1][0].length + ""; return f = new Ct({ props: { data: t[7], highlights: t[3], outputLength: t[1].length, isKernelMath: !1, constraint: Mt(t[0].length), dataRange: t[2], stride: 1 } }), f.$on("message", t[9]), w = new Ct({ props: { data: Et([[0]]), highlights: t[4], isKernelMath: !0, constraint: 20, dataRange: t[2] } }), I = new Ct({ props: { data: t[5], highlights: t[4], isKernelMath: !0, constraint: 20, dataRange: t[2] } }), M = new Ct({ props: { data: t[6], highlights: t[4], isKernelMath: !0, constraint: 20, dataRange: t[2] } }), O = new Ct({ props: { data: t[8], highlights: t[4], isKernelMath: !1, outputLength: t[1].length, constraint: Mt(t[1].length), dataRange: t[2], stride: 1 } }), O.$on("message", t[9]), { c() { e = d("div"), a = d("div"), l = c("Input ("), n = c(X), s = c(", "), u = c(z), p = c(")"), y = g(), V(f.$$.fragment), x = g(), v = d("div"), b = d("span"), $ = c("max(\r\n    "), V(w.$$.fragment), k = c("\r\n    ,\r\n    "), V(I.$$.fragment), L = c("\r\n    )\r\n    =\r\n    "), V(M.$$.fragment), A = g(), E = d("div"), R = d("div"), S = c("Output ("), C = c(F), N = c(", "), H = c(D), _ = c(")"), P = g(), V(O.$$.fragment), h(a, "class", "header-text"), h(e, "class", "column has-text-centered svelte-gz7a6i"), h(v, "class", "column has-text-centered svelte-gz7a6i"), h(R, "class", "header-text"), h(E, "class", "column has-text-centered svelte-gz7a6i") }, m(t, o) { i(t, e, o), r(e, a), r(a, l), r(a, n), r(a, s), r(a, u), r(a, p), r(e, y), q(f, e, null), i(t, x, o), i(t, v, o), r(v, b), r(b, $), q(w, b, null), r(b, k), q(I, b, null), r(b, L), q(M, b, null), i(t, A, o), i(t, E, o), r(E, R), r(R, S), r(R, C), r(R, N), r(R, H), r(R, _), r(E, P), q(O, E, null), B = !0 }, p(t, [e]) { (!B || 1 & e) && X !== (X = t[0].length + "") && m(n, X), (!B || 1 & e) && z !== (z = t[0][0].length + "") && m(u, z); const a = {}; 128 & e && (a.data = t[7]), 8 & e && (a.highlights = t[3]), 2 & e && (a.outputLength = t[1].length), 1 & e && (a.constraint = Mt(t[0].length)), 4 & e && (a.dataRange = t[2]), f.$set(a); const l = {}; 16 & e && (l.highlights = t[4]), 4 & e && (l.dataRange = t[2]), w.$set(l); const s = {}; 32 & e && (s.data = t[5]), 16 & e && (s.highlights = t[4]), 4 & e && (s.dataRange = t[2]), I.$set(s); const r = {}; 64 & e && (r.data = t[6]), 16 & e && (r.highlights = t[4]), 4 & e && (r.dataRange = t[2]), M.$set(r), (!B || 2 & e) && F !== (F = t[1].length + "") && m(C, F), (!B || 2 & e) && D !== (D = t[1][0].length + "") && m(H, D); const i = {}; 256 & e && (i.data = t[8]), 16 & e && (i.highlights = t[4]), 2 & e && (i.outputLength = t[1].length), 2 & e && (i.constraint = Mt(t[1].length)), 4 & e && (i.dataRange = t[2]), O.$set(i) }, i(t) { B || (G(f.$$.fragment, t), G(w.$$.fragment, t), G(I.$$.fragment, t), G(M.$$.fragment, t), G(O.$$.fragment, t), B = !0) }, o(t) { T(f.$$.fragment, t), T(w.$$.fragment, t), T(I.$$.fragment, t), T(M.$$.fragment, t), T(O.$$.fragment, t), B = !1 }, d(t) { t && o(e), j(f), t && o(x), t && o(v), j(w), j(I), j(M), t && o(A), t && o(E), j(O) } } } function Dt(t, e, a) { let { image: l } = e, { output: n } = e, { isPaused: s } = e, { dataRange: r } = e; const i = L(); let o, d, c = l.length + 0, g = Et([[0]]), u = Et([[0]]), p = bt(l.length * l.length, t => !0), h = bt(n.length * n.length, t => !0); function y() { d = 0, o && clearInterval(o), a(11, o = setInterval(() => { if (s) return; const t = d % (n.length * n.length); a(4, h = bt(n.length * n.length, t => !1)), a(3, p = bt(l.length * l.length, t => { })); const e = Math.floor(t / n.length), r = t % n.length; a(4, h[e * n.length + r] = !0, h), a(3, p[e * n.length + r] = !0, p); const i = It(l, p, 1); a(5, g = Et(i)); const o = Lt(n, h); a(6, u = Et(o)), d++ }, 250)) } y(); let m = Et(l), f = Et(n); return t.$$set = t => { "image" in t && a(0, l = t.image), "output" in t && a(1, n = t.output), "isPaused" in t && a(10, s = t.isPaused), "dataRange" in t && a(2, r = t.dataRange) }, t.$$.update = () => { if (1 & t.$$.dirty && (c = l.length + 0), 3 & t.$$.dirty) { bt(l.length * l.length, t => !0), bt(n.length * n.length, t => !0) } 3 & t.$$.dirty && (y(), a(7, m = Et(l)), a(8, f = Et(n))) }, [l, n, r, p, h, g, u, m, f, function (t) { a(4, h = bt(n.length * n.length, t => !1)); const e = t.detail.hoverH, r = t.detail.hoverW; a(4, h[e * n.length + r] = !0, h), a(3, p = bt(l.length * l.length, t => { })), a(3, p[e * n.length + r] = !0, p); const o = It(l, p, 1); a(5, g = Et(o)); const d = Lt(n, h); a(6, u = Et(d)), a(10, s = !0), i("message", { text: s }) }, s, o] } class Wt extends K { constructor(t) { super(), W(this, t, Dt, jt, s, { image: 0, output: 1, isPaused: 10, dataRange: 2 }) } } function Kt(t) { let e, a, n, s, c, u, y, m, f, x, v, b, $, w, k, I, L, M, A, E = t[4] ? '<i class="fas fa-play-circle play-icon"></i>' : '<i class="fas fa-pause-circle"></i>'; return w = new Wt({ props: { image: t[0], output: t[1], isPaused: t[4], dataRange: t[2] } }), w.$on("message", t[6]), { c() { e = d("div"), a = d("div"), n = d("div"), s = d("div"), s.textContent = "ReLU Activation", c = g(), u = d("div"), y = d("div"), y.innerHTML = '<i class="fas fa-info-circle"></i>', m = g(), f = d("div"), x = g(), v = d("div"), v.innerHTML = '<i class="fas control-icon fa-times-circle"></i>', b = g(), $ = d("div"), V(w.$$.fragment), k = g(), I = d("div"), I.innerHTML = '<img src="./pointer.svg" alt="pointer icon" class="svelte-1lq7956"/> \n        <div class="annotation-text"><span style="font-weight:600">Hover over</span> the matrices to change pixel.</div>', h(s, "class", "title-text svelte-1lq7956"), h(y, "class", "control-button svelte-1lq7956"), h(y, "title", "Jump to article section"), h(f, "class", "play-button control-button svelte-1lq7956"), h(f, "title", "Play animation"), h(v, "class", "delete-button control-button svelte-1lq7956"), h(v, "title", "Close"), h(u, "class", "buttons svelte-1lq7956"), h(n, "class", "control-pannel svelte-1lq7956"), h($, "class", "container is-centered is-vcentered svelte-1lq7956"), h(I, "class", "annotation svelte-1lq7956"), h(a, "class", "box svelte-1lq7956"), h(e, "class", "container svelte-1lq7956") }, m(l, o) { i(l, e, o), r(e, a), r(a, n), r(n, s), r(n, c), r(n, u), r(u, y), r(u, m), r(u, f), f.innerHTML = E, r(u, x), r(u, v), r(a, b), r(a, $), q(w, $, null), r(a, k), r(a, I), L = !0, M || (A = [p(y, "click", Ut), p(f, "click", t[5]), p(v, "click", t[7])], M = !0) }, p(t, e) { (!L || 16 & e) && E !== (E = t[4] ? '<i class="fas fa-play-circle play-icon"></i>' : '<i class="fas fa-pause-circle"></i>') && (f.innerHTML = E); const a = {}; 1 & e && (a.image = t[0]), 2 & e && (a.output = t[1]), 16 & e && (a.isPaused = t[4]), 4 & e && (a.dataRange = t[2]), w.$set(a) }, i(t) { L || (G(w.$$.fragment, t), L = !0) }, o(t) { T(w.$$.fragment, t), L = !1 }, d(t) { t && o(e), j(w), M = !1, l(A) } } } function Yt(t) { let e, a, l = !t[3] && Kt(t); return { c() { l && l.c(), e = u() }, m(t, n) { l && l.m(t, n), i(t, e, n), a = !0 }, p(t, [a]) { t[3] ? l && (z(), T(l, 1, 1, () => { l = null }), F()) : l ? (l.p(t, a), 8 & a && G(l, 1)) : (l = Kt(t), l.c(), G(l, 1), l.m(e.parentNode, e)) }, i(t) { a || (G(l), a = !0) }, o(t) { T(l), a = !1 }, d(t) { l && l.d(t), t && o(e) } } } function Ut() { let t = Number(d3.select("#cnn-svg").style("height").replace("px", "")) + 150, e = new SmoothScroll('a[href*="#"]', { offset: -t }), a = document.querySelector("#article-relu"); e.animateScroll(a) } function Jt(t, e, a) { let { input: l } = e, { output: n } = e, { dataRange: s } = e, { isExited: r } = e; const i = L(); let o = !1; return t.$$set = t => { "input" in t && a(0, l = t.input), "output" in t && a(1, n = t.output), "dataRange" in t && a(2, s = t.dataRange), "isExited" in t && a(3, r = t.isExited) }, [l, n, s, r, o, function () { a(4, o = !o) }, function (t) { a(4, o = t.detail.text) }, function () { i("message", { text: !0 }) }] } class Qt extends K { constructor(t) { super(), W(this, t, Jt, Yt, s, { input: 0, output: 1, dataRange: 2, isExited: 3 }) } } function Zt(t) { let e, a, l, n, s, u, p, y, f, x, v, b, $, w, k, I, L, M, A, E, R, S, C, N, H, _, P, O = t[9].length + "", B = t[9][0].length + "", X = t[10].length + "", z = t[10][0].length + ""; return f = new Ct({ props: { data: t[9], highlights: t[5], outputLength: t[3].length, isKernelMath: !1, constraint: Mt(t[2].length), dataRange: t[4], stride: t[0] } }), f.$on("message", t[11]), w = new Ct({ props: { data: t[7], highlights: t[6], isKernelMath: !0, constraint: Mt(t[1]), dataRange: t[4] } }), I = new Ct({ props: { data: t[8], highlights: t[6], isKernelMath: !0, constraint: Mt(t[1]), dataRange: t[4] } }), _ = new Ct({ props: { data: t[10], highlights: t[6], isKernelMath: !1, outputLength: t[3].length, constraint: Mt(t[3].length), dataRange: t[4], stride: t[0] } }), _.$on("message", t[11]), { c() { e = d("div"), a = d("div"), l = c("Input ("), n = c(O), s = c(", "), u = c(B), p = c(")"), y = g(), V(f.$$.fragment), x = g(), v = d("div"), b = d("span"), $ = c("max(\r\n    "), V(w.$$.fragment), k = c("\r\n    )\r\n    =\r\n    "), V(I.$$.fragment), L = g(), M = d("div"), A = d("div"), E = c("Output ("), R = c(X), S = c(", "), C = c(z), N = c(")"), H = g(), V(_.$$.fragment), h(a, "class", "header-text"), h(e, "class", "column has-text-centered svelte-gz7a6i"), h(v, "class", "column has-text-centered svelte-gz7a6i"), h(A, "class", "header-text"), h(M, "class", "column has-text-centered svelte-gz7a6i") }, m(t, o) { i(t, e, o), r(e, a), r(a, l), r(a, n), r(a, s), r(a, u), r(a, p), r(e, y), q(f, e, null), i(t, x, o), i(t, v, o), r(v, b), r(b, $), q(w, b, null), r(b, k), q(I, b, null), i(t, L, o), i(t, M, o), r(M, A), r(A, E), r(A, R), r(A, S), r(A, C), r(A, N), r(M, H), q(_, M, null), P = !0 }, p(t, [e]) { (!P || 512 & e) && O !== (O = t[9].length + "") && m(n, O), (!P || 512 & e) && B !== (B = t[9][0].length + "") && m(u, B); const a = {}; 512 & e && (a.data = t[9]), 32 & e && (a.highlights = t[5]), 8 & e && (a.outputLength = t[3].length), 4 & e && (a.constraint = Mt(t[2].length)), 16 & e && (a.dataRange = t[4]), 1 & e && (a.stride = t[0]), f.$set(a); const l = {}; 128 & e && (l.data = t[7]), 64 & e && (l.highlights = t[6]), 2 & e && (l.constraint = Mt(t[1])), 16 & e && (l.dataRange = t[4]), w.$set(l); const s = {}; 256 & e && (s.data = t[8]), 64 & e && (s.highlights = t[6]), 2 & e && (s.constraint = Mt(t[1])), 16 & e && (s.dataRange = t[4]), I.$set(s), (!P || 1024 & e) && X !== (X = t[10].length + "") && m(R, X), (!P || 1024 & e) && z !== (z = t[10][0].length + "") && m(C, z); const r = {}; 1024 & e && (r.data = t[10]), 64 & e && (r.highlights = t[6]), 8 & e && (r.outputLength = t[3].length), 8 & e && (r.constraint = Mt(t[3].length)), 16 & e && (r.dataRange = t[4]), 1 & e && (r.stride = t[0]), _.$set(r) }, i(t) { P || (G(f.$$.fragment, t), G(w.$$.fragment, t), G(I.$$.fragment, t), G(_.$$.fragment, t), P = !0) }, o(t) { T(f.$$.fragment, t), T(w.$$.fragment, t), T(I.$$.fragment, t), T(_.$$.fragment, t), P = !1 }, d(t) { t && o(e), j(f), t && o(x), t && o(v), j(w), j(I), t && o(L), t && o(M), j(_) } } } function te(t, e, a) { let { stride: l } = e, { dilation: n } = e, { kernelLength: s } = e, { image: r } = e, { output: i } = e, { isPaused: o } = e, { dataRange: d } = e; const c = L(); let g = r.length + 0, u = []; for (let t = 0; t < s; t++) { u.push([]); for (let e = 0; e < s; e++)u[t].push(0) } u = Et(u); let p, h, y = Et([[0]]), m = [], f = bt(i.length * i.length, t => !0); function x(t) { h = 0; let e = wt(t, i, s, g, n); t <= 0 || (p && clearInterval(p), a(14, p = setInterval(() => { if (o) return; const t = h % (i.length * i.length); a(6, f = bt(i.length * i.length, t => !1)); const l = Math.floor(t / i.length), n = t % i.length; a(6, f[l * i.length + n] = !0, f), a(5, m = kt(l, n, g, 0, e, s)); const d = It(r, m, s); a(7, u = Et(d)); const c = Lt(i, f); a(8, y = Et(c)), h++ }, 250))) } x(l); let v = Et(r), b = Et(i); return t.$$set = t => { "stride" in t && a(0, l = t.stride), "dilation" in t && a(13, n = t.dilation), "kernelLength" in t && a(1, s = t.kernelLength), "image" in t && a(2, r = t.image), "output" in t && a(3, i = t.output), "isPaused" in t && a(12, o = t.isPaused), "dataRange" in t && a(4, d = t.dataRange) }, t.$$.update = () => { if (4 & t.$$.dirty && (g = r.length + 0), 8 & t.$$.dirty) { bt(i.length * i.length, t => !0) } 13 & t.$$.dirty && (x(l), a(9, v = Et(r)), a(10, b = Et(i))) }, [l, s, r, i, d, m, f, u, y, v, b, function (t) { let e = wt(l, i, s, g, n); a(6, f = bt(i.length * i.length, t => !1)); const d = t.detail.hoverH, p = t.detail.hoverW; a(6, f[d * i.length + p] = !0, f), a(5, m = kt(d, p, g, 0, e, s)); const h = It(r, m, s); a(7, u = Et(h)); const x = Lt(i, f); a(8, y = Et(x)), a(12, o = !0), c("message", { text: o }) }, o, n, p] } class ee extends K { constructor(t) { super(), W(this, t, te, Zt, s, { stride: 0, dilation: 13, kernelLength: 1, image: 2, output: 3, isPaused: 12, dataRange: 4 }) } } function ae(t) { let e, a, n, s, c, u, y, m, f, x, v, b, $, w, k, I, L, M, A, E = t[4] ? '<i class="fas fa-play-circle play-icon"></i>' : '<i class="fas fa-pause-circle"></i>'; return w = new ee({ props: { kernelLength: t[1], image: t[0], output: t[5], stride: ne, dilation: se, isPaused: t[4], dataRange: t[2] } }), w.$on("message", t[7]), { c() { e = d("div"), a = d("div"), n = d("div"), s = d("div"), s.textContent = "Max Pooling", c = g(), u = d("div"), y = d("div"), y.innerHTML = '<i class="fas fa-info-circle"></i>', m = g(), f = d("div"), x = g(), v = d("div"), v.innerHTML = '<i class="fas control-icon fa-times-circle"></i>', b = g(), $ = d("div"), V(w.$$.fragment), k = g(), I = d("div"), I.innerHTML = '<img src="./pointer.svg" alt="pointer icon" class="svelte-kahisg"/> \n          <div class="annotation-text"><span style="font-weight:600">Hover over</span> the matrices to change kernel position.</div>', h(s, "class", "title-text svelte-kahisg"), h(y, "class", "control-button svelte-kahisg"), h(y, "title", "Jump to article section"), h(f, "class", "play-button control-button svelte-kahisg"), h(f, "title", "Play animation"), h(v, "class", "delete-button control-button svelte-kahisg"), h(v, "title", "Close"), h(u, "class", "buttons svelte-kahisg"), h(n, "class", "control-pannel svelte-kahisg"), h($, "class", "container is-centered is-vcentered svelte-kahisg"), h(I, "class", "annotation svelte-kahisg"), h(a, "class", "box svelte-kahisg"), h(e, "class", "container svelte-kahisg") }, m(l, o) { i(l, e, o), r(e, a), r(a, n), r(n, s), r(n, c), r(n, u), r(u, y), r(u, m), r(u, f), f.innerHTML = E, r(u, x), r(u, v), r(a, b), r(a, $), q(w, $, null), r(a, k), r(a, I), L = !0, M || (A = [p(y, "click", re), p(f, "click", t[6]), p(v, "click", t[8])], M = !0) }, p(t, e) { (!L || 16 & e) && E !== (E = t[4] ? '<i class="fas fa-play-circle play-icon"></i>' : '<i class="fas fa-pause-circle"></i>') && (f.innerHTML = E); const a = {}; 2 & e && (a.kernelLength = t[1]), 1 & e && (a.image = t[0]), 32 & e && (a.output = t[5]), 16 & e && (a.isPaused = t[4]), 4 & e && (a.dataRange = t[2]), w.$set(a) }, i(t) { L || (G(w.$$.fragment, t), L = !0) }, o(t) { T(w.$$.fragment, t), L = !1 }, d(t) { t && o(e), j(w), M = !1, l(A) } } } function le(t) { let e, a, l = !t[3] && ae(t); return { c() { l && l.c(), e = u() }, m(t, n) { l && l.m(t, n), i(t, e, n), a = !0 }, p(t, [a]) { t[3] ? l && (z(), T(l, 1, 1, () => { l = null }), F()) : l ? (l.p(t, a), 8 & a && G(l, 1)) : (l = ae(t), l.c(), G(l, 1), l.m(e.parentNode, e)) }, i(t) { a || (G(l), a = !0) }, o(t) { T(l), a = !1 }, d(t) { l && l.d(t), t && o(e) } } } let ne = 2; const se = 1; function re() { let t = Number(d3.select("#cnn-svg").style("height").replace("px", "")) + 150, e = new SmoothScroll('a[href*="#"]', { offset: -t }), a = document.querySelector("#article-pooling"); e.animateScroll(a) } function ie(t, e, a) { let { input: l } = e, { kernelLength: n } = e, { dataRange: s } = e, { isExited: r } = e; const i = L(); var o = !1, d = vt(l); return t.$$set = t => { "input" in t && a(0, l = t.input), "kernelLength" in t && a(1, n = t.kernelLength), "dataRange" in t && a(2, s = t.dataRange), "isExited" in t && a(3, r = t.isExited) }, t.$$.update = () => { if (1 & t.$$.dirty) try { a(5, d = vt(l)) } catch { console.log("Cannot handle stride of " + ne) } }, [l, n, s, r, o, d, function () { a(4, o = !o), console.log(o) }, function (t) { a(4, o = t.detail.text) }, function () { i("message", { text: !0 }) }] } class oe extends K { constructor(t) { super(), W(this, t, ie, le, s, { input: 0, kernelLength: 1, dataRange: 2, isExited: 3 }) } } function de(e) { let a, n, s, u, y, f, x, v, b, $, w, k, I, L, M, A, E, R, S; return { c() { var t; a = d("div"), n = d("div"), s = d("div"), u = d("div"), u.innerHTML = '<i class="fas fa-info-circle"></i>', y = g(), f = d("div"), f.innerHTML = '<i class="fas control-icon fa-times-circle"></i>', x = g(), v = d("div"), b = c("Softmax Score for "), $ = d("i"), w = c('"'), k = c(e[0]), I = c('"'), L = g(), t = "svg", M = document.createElementNS("http://www.w3.org/2000/svg", t), A = g(), E = d("div"), E.innerHTML = '<img src="./pointer.svg" alt="pointer icon" class="svelte-1uac4ng"/> \n      <div class="annotation-text"><span style="font-weight:600">Hover over</span> the numbers to highlight logit circles.</div>', h(u, "class", "control-button svelte-1uac4ng"), h(u, "title", "Jump to article section"), h(f, "class", "delete-button control-button svelte-1uac4ng"), h(f, "title", "Close"), h(s, "class", "buttons svelte-1uac4ng"), h(v, "class", "title-text svelte-1uac4ng"), h(M, "id", "softmax-svg"), h(M, "width", "470"), h(M, "height", "105"), h(M, "class", "svelte-1uac4ng"), h(E, "class", "annotation svelte-1uac4ng"), h(n, "class", "box svelte-1uac4ng"), h(a, "class", "container") }, m(t, l) { i(t, a, l), r(a, n), r(n, s), r(s, u), r(s, y), r(s, f), r(n, x), r(n, v), r(v, b), r(v, $), r($, w), r($, k), r($, I), r(n, L), r(n, M), r(n, A), r(n, E), e[10](a), R || (S = [p(u, "click", ce), p(f, "click", e[2])], R = !0) }, p(t, [e]) { 1 & e && m(k, t[0]) }, i: t, o: t, d(t) { t && o(a), e[10](null), R = !1, l(S) } } } function ce() { let t = Number(d3.select("#cnn-svg").style("height").replace("px", "")) + 150, e = new SmoothScroll('a[href*="#"]', { offset: -t }), a = document.querySelector("#article-softmax"); e.animateScroll(a) } function ge(t, e, a) { let l, { logits: n } = e, { logitColors: s } = e, { selectedI: r } = e, { highlightI: i = -1 } = e, { outputName: o } = e, { outputValue: d } = e, { startAnimation: c } = e, g = null; const u = L(), p = (t, e) => void 0 === e ? d3.format(".2f")(t) : d3.format(`.${e}f`)(t), h = (t, e, l, n) => { a(3, i = n), u("mouseOver", { curI: n }) }, y = (t, e, l, n) => { a(3, i = -1), u("mouseLeave", { curI: n }) }; return k(() => { a(9, g = d3.select(l).select("#softmax-svg")); let t = g.append("g").attr("class", "formula-right").attr("transform", "translate(10, 0)").style("font-size", "15px"), e = t.append("g").attr("class", "denominator").attr("transform", "translate(0, 58)"); e.append("text").attr("x", 0).attr("y", 0).style("fill", "gray").text("("); let i = 8; n.forEach((t, a) => { a / 4 >= 1 && a % 4 == 0 && (i = 8); let l = e.append("text").attr("x", i).attr("y", 20 * Math.floor(a / 4)).style("cursor", "crosshair").style("pointer-events", "all").on("mouseover", (t, e, l) => h(0, 0, 0, a)).on("mouseleave", (t, e, l) => y(0, 0, 0, a)).text("exp("); l.append("tspan").attr("class", `formula-term-${a} formula-term`).attr("dx", "1").style("fill", s[a]).style("fill-opacity", a === r || c.hasInitialized ? 1 : 0).text(p(t)), l.append("tspan").attr("dx", "1").text(")"); let o = l.node().getBBox(); i += o.width + 4, a !== n.length - 1 ? (e.append("text").attr("x", i).attr("y", 20 * Math.floor(a / 4)).text("+"), i += 14) : e.append("text").attr("x", i - 2).attr("y", 20 * Math.floor(a / 4)).style("fill", "gray").text(")") }), e.selectAll("text").data(n).enter().append("text").attr("x", (t, e) => 40 * e).attr("y", 0).text(t => p(t)); let o = e.node().getBBox(); t.append("line").attr("class", "separation-line").attr("x1", -5).attr("x2", o.width + 5).attr("y1", 32).attr("y2", 32).style("stroke-width", 1.2).style("stroke", "gray"); let u = t.append("g").attr("class", "numerator-group").attr("transform", "translate(0, 20)").append("text").attr("x", o.x + o.width / 2).attr("y", 0).on("mouseover", (t, e, a) => h(0, 0, 0, r)).on("mouseleave", (t, e, a) => y(0, 0, 0, r)).style("pointer-events", "all").style("cursor", "crosshair").style("text-anchor", "middle").text("exp("); u.append("tspan").attr("class", `formula-term-${r} formula-term`).attr("dx", 1).style("fill", s[r]).text("" + p(n[r])), u.append("tspan").attr("dx", 1).text(")"); let m = g.append("g").attr("class", "formula-left").attr("transform", "translate(395, 32)"); m.append("text").attr("x", 20).attr("dominant-baseline", "middle").text("" + p(d, 4)).node().getBBox(); m.append("text").attr("dominant-baseline", "middle").attr("x", 0).attr("y", 0).style("fill", "gray").style("font-weight", "bold").text("=") }), t.$$set = t => { "logits" in t && a(4, n = t.logits), "logitColors" in t && a(5, s = t.logitColors), "selectedI" in t && a(6, r = t.selectedI), "highlightI" in t && a(3, i = t.highlightI), "outputName" in t && a(0, o = t.outputName), "outputValue" in t && a(7, d = t.outputValue), "startAnimation" in t && a(8, c = t.startAnimation) }, t.$$.update = () => { 520 & t.$$.dirty && null !== g && (g.selectAll(".formula-term").style("text-decoration", "none").style("font-weight", "normal"), g.selectAll(".formula-term-" + i).style("font-weight", "bold").style("text-decoration", "underline")), 768 & t.$$.dirty && null !== g && g.select(".formula-term-" + c.i).transition("softmax-edge").duration(c.duration).style("fill-opacity", 1) }, [o, l, () => { u("xClicked", {}) }, i, n, s, r, d, c, g, function (t) { A[t ? "unshift" : "push"](() => { l = t, a(1, l) }) }] } class ue extends K { constructor(t) { super(), W(this, t, ge, de, s, { logits: 4, logitColors: 5, selectedI: 6, highlightI: 3, outputName: 0, outputValue: 7, startAnimation: 8 }) } } function pe(e) { let a, n, s, u, y, b, $, w, k, I, L, M, A, E, R, S, C, N, H, _, P, O, B, X, z, F, G, T, V, q, j, D, W, K, Y, U, J, Q = e[5].error + ""; return { c() { a = d("div"), n = d("div"), s = d("div"), u = g(), y = d("div"), b = d("header"), $ = d("p"), $.textContent = "Add Input Image", w = g(), k = d("button"), I = g(), L = d("section"), M = d("div"), A = d("div"), E = d("input"), R = g(), S = d("span"), S.innerHTML = '<i class="fas fa-link"></i>', C = g(), N = d("div"), N.textContent = "or", H = g(), _ = d("div"), P = d("label"), O = d("input"), B = g(), X = d("span"), X.innerHTML = '<span class="file-icon"><i class="fas fa-upload"></i></span> \n                <span class="file-label">Upload</span>', z = g(), F = d("footer"), G = d("div"), T = c(Q), V = g(), q = d("div"), j = d("button"), j.textContent = "Cancel", D = g(), W = d("button"), W.textContent = "Add", K = g(), Y = d("img"), h(s, "class", "modal-background"), h($, "class", "modal-card-title svelte-1o5lxfe"), h(k, "class", "delete"), h(k, "aria-label", "close"), h(b, "class", "modal-card-head svelte-1o5lxfe"), h(E, "class", "input small-font svelte-1o5lxfe"), h(E, "type", "url"), h(E, "placeholder", "Paste URL of image..."), h(S, "class", "icon small-font is-left svelte-1o5lxfe"), h(A, "class", "control has-icons-left svelte-1o5lxfe"), v(A, "is-loading", e[3]), h(N, "class", "or-label svelte-1o5lxfe"), h(O, "class", "file-input"), h(O, "type", "file"), h(O, "name", "image"), h(O, "accept", ".png,.jpeg,.tiff,.jpg,.png"), h(X, "class", "file-cta small-font svelte-1o5lxfe"), h(P, "class", "file-label"), h(_, "class", "file"), h(M, "class", "field svelte-1o5lxfe"), h(L, "class", "modal-card-body"), h(G, "class", "error-message svelte-1o5lxfe"), v(G, "hidden", !e[5].show), h(j, "class", "button is-smaller svelte-1o5lxfe"), h(W, "class", "button is-success is-smaller svelte-1o5lxfe"), h(q, "class", "button-container"), h(F, "class", "modal-card-foot svelte-1o5lxfe"), h(y, "class", "modal-card svelte-1o5lxfe"), h(n, "class", "modal"), h(n, "id", "input-modal"), v(n, "is-active", e[6].show), x(Y, "display", "none"), h(Y, "id", "vali-image"), h(Y, "alt", "hidden image"), h(a, "class", "modal-component") }, m(t, l) { i(t, a, l), r(a, n), r(n, s), r(n, u), r(n, y), r(y, b), r(b, $), r(b, w), r(b, k), r(y, I), r(y, L), r(L, M), r(M, A), r(A, E), f(E, e[2]), r(A, R), r(A, S), r(M, C), r(M, N), r(M, H), r(M, _), r(_, P), r(P, O), r(P, B), r(P, X), r(y, z), r(y, F), r(F, G), r(G, T), r(F, V), r(F, q), r(q, j), r(q, D), r(q, W), r(a, K), r(a, Y), e[14](Y), e[15](a), U || (J = [p(s, "click", e[10]), p(k, "click", e[10]), p(E, "input", e[12]), p(O, "change", e[13]), p(O, "change", e[9]), p(j, "click", e[10]), p(W, "click", e[11]), p(Y, "error", e[7]), p(Y, "load", e[8])], U = !0) }, p(t, [e]) { 4 & e && E.value !== t[2] && f(E, t[2]), 8 & e && v(A, "is-loading", t[3]), 32 & e && Q !== (Q = t[5].error + "") && m(T, Q), 32 & e && v(G, "hidden", !t[5].show), 64 & e && v(n, "is-active", t[6].show) }, i: t, o: t, d(t) { t && o(a), e[14](null), e[15](null), U = !1, l(J) } } } function he(t, e, a) { let l, n, s, r = "", i = !1, o = !0, d = { show: !1, error: "" }; const c = L(); let g = { show: !1 }; ut.set(g), ut.subscribe(t => { a(6, g = t) }); return k(() => { d3.select(l).select("#input-modal") }), [l, n, r, i, s, d, g, () => { a(3, i = !1), a(5, d.show = !0, d), a(5, d.error = o ? "We can't find the image at that URL." : "Not a valid image file.", d) }, () => { let t = document.createElement("canvas"), e = t.getContext("2d"); t.width = n.width, t.height = n.height, e.drawImage(n, 0, 0); try { e.getImageData(0, 0, n.width, n.height), a(3, i = !1), a(6, g.show = !1, g), ut.set(g), c("urlTyped", { url: n.src }), a(2, r = null) } catch (t) { a(3, i = !1), a(5, d.show = !0, d), a(5, d.error = "No permission to load this image.", d) } }, () => { o = !1; let t = new FileReader; t.onload = t => { a(1, n.src = t.target.result, n) }, t.readAsDataURL(s[0]) }, () => { a(6, g.show = !1, g), ut.set(g), c("xClicked", { preImage: g.preImage }) }, () => { a(3, i = !0), a(5, d.show = !1, d), a(1, n.crossOrigin = "Anonymous", n), a(1, n.src = r, n) }, function () { r = this.value, a(2, r) }, function () { s = this.files, a(4, s) }, function (t) { A[t ? "unshift" : "push"](() => { n = t, a(1, n) }) }, function (t) { A[t ? "unshift" : "push"](() => { l = t, a(0, l) }) }] } class ye extends K { constructor(t) { super(), W(this, t, he, pe, s, {}) } } function me(e) { let a; return { c() { a = d("div"), a.innerHTML = '<svg id="grid" width="100%" height="100%"></svg>', x(a, "display", "inline-block"), x(a, "vertical-align", "middle"), h(a, "class", "grid") }, m(t, l) { i(t, a, l), e[8](a) }, p: t, i: t, o: t, d(t) { t && o(a), e[8](null) } } } function fe(t, e, a) { let l, { data: n } = e, { highlights: s } = e, { outputLength: r } = e, { stride: i } = e, { padding: o } = e, { isOutput: d = !1 } = e, { isStrideValid: c } = e; const g = L(); let u = s, p = n; const h = () => { d3.select(l).selectAll("#grid > *").remove(); d3.select(l).select("#grid").attr("width", 200).attr("height", 200).append("svg").attr("width", 200).attr("height", 200).selectAll(".row").data(n).enter().append("g").attr("class", "row").selectAll(".square").data((function (t) { return t })).enter().append("rect").attr("class", "square").attr("x", (function (t) { return t.x })).attr("y", (function (t) { return t.y })).attr("width", (function (t) { return t.width })).attr("height", (function (t) { return t.height })).style("opacity", .5).style("stroke", "black").style("fill", (function (t) { return !d && (t.row < o || t.row > n.length - o - 1 || t.col < o || t.col > n.length - o - 1) ? "#aaa" : "#ddd" })).on("mouseover", (function (t) { c && (n.length != r ? g("message", { hoverH: Math.min(Math.floor(t.row / i), r - 1), hoverW: Math.min(Math.floor(t.col / i), r - 1) }) : g("message", { hoverH: Math.min(Math.floor(t.row / 1), r - 1), hoverW: Math.min(Math.floor(t.col / 1), r - 1) })) })) }; return I(() => { (n != p && (h(), p = n), s != u) && (d3.select(l).select("#grid").select("svg").selectAll(".square").style("fill", (function (t) { return s.length && s[t.row * n.length + t.col] ? "#FF2738" : !d && (t.row < o || t.row > n.length - o - 1 || t.col < o || t.col > n.length - o - 1) ? "#aaa" : "#ddd" })), u = s) }), k(() => { h() }), t.$$set = t => { "data" in t && a(1, n = t.data), "highlights" in t && a(2, s = t.highlights), "outputLength" in t && a(3, r = t.outputLength), "stride" in t && a(4, i = t.stride), "padding" in t && a(5, o = t.padding), "isOutput" in t && a(6, d = t.isOutput), "isStrideValid" in t && a(7, c = t.isStrideValid) }, [l, n, s, r, i, o, d, c, function (t) { A[t ? "unshift" : "push"](() => { l = t, a(0, l) }) }] } class xe extends K { constructor(t) { super(), W(this, t, fe, me, s, { data: 1, highlights: 2, outputLength: 3, stride: 4, padding: 5, isOutput: 6, isStrideValid: 7 }) } } function ve(t) { let e, a, l, n, s, u, p, y, f, v, b, $, w, k, I, L, M, A, E, R, S, C, N, H, _, P, O, B, X, z, F, D = t[1].length - 2 * t[3] + "", W = t[1].length - 2 * t[3] + "", K = t[1].length + "", Y = t[1].length + "", U = t[2].length + "", J = t[2].length + ""; return A = new xe({ props: { data: t[7], highlights: t[5], outputLength: t[2].length, stride: t[0], padding: t[3], isStrideValid: t[4] } }), A.$on("message", t[9]), z = new xe({ props: { data: t[8], highlights: t[6], outputLength: t[2].length, stride: t[0], padding: t[3], isOutput: !0, isStrideValid: t[4] } }), z.$on("message", t[9]), { c() { e = d("div"), a = d("div"), l = d("div"), n = c("Input ("), s = c(D), u = c(", "), p = c(W), y = c(") "), f = d("br"), v = g(), b = d("div"), $ = c("After-padding ("), w = c(K), k = c(", "), I = c(Y), L = c(")"), M = g(), V(A.$$.fragment), E = g(), R = d("div"), S = d("div"), C = c("Output ("), N = c(U), H = c(", "), _ = c(J), P = c(")"), O = g(), B = d("div"), B.textContent = " ", X = g(), V(z.$$.fragment), h(l, "class", "header-text svelte-w25jpk"), h(b, "class", "header-sub-text svelte-w25jpk"), h(a, "class", "column has-text-centered svelte-w25jpk"), h(S, "class", "header-text svelte-w25jpk"), x(S, "padding-top", "27px"), h(B, "class", "header-sub-text svelte-w25jpk"), h(R, "class", "column has-text-centered svelte-w25jpk"), h(e, "class", "wrapper svelte-w25jpk") }, m(t, o) { i(t, e, o), r(e, a), r(a, l), r(l, n), r(l, s), r(l, u), r(l, p), r(l, y), r(l, f), r(a, v), r(a, b), r(b, $), r(b, w), r(b, k), r(b, I), r(b, L), r(a, M), q(A, a, null), r(e, E), r(e, R), r(R, S), r(S, C), r(S, N), r(S, H), r(S, _), r(S, P), r(R, O), r(R, B), r(R, X), q(z, R, null), F = !0 }, p(t, [e]) { (!F || 10 & e) && D !== (D = t[1].length - 2 * t[3] + "") && m(s, D), (!F || 10 & e) && W !== (W = t[1].length - 2 * t[3] + "") && m(p, W), (!F || 2 & e) && K !== (K = t[1].length + "") && m(w, K), (!F || 2 & e) && Y !== (Y = t[1].length + "") && m(I, Y); const a = {}; 128 & e && (a.data = t[7]), 32 & e && (a.highlights = t[5]), 4 & e && (a.outputLength = t[2].length), 1 & e && (a.stride = t[0]), 8 & e && (a.padding = t[3]), 16 & e && (a.isStrideValid = t[4]), A.$set(a), (!F || 4 & e) && U !== (U = t[2].length + "") && m(N, U), (!F || 4 & e) && J !== (J = t[2].length + "") && m(_, J); const l = {}; 256 & e && (l.data = t[8]), 64 & e && (l.highlights = t[6]), 4 & e && (l.outputLength = t[2].length), 1 & e && (l.stride = t[0]), 8 & e && (l.padding = t[3]), 16 & e && (l.isStrideValid = t[4]), z.$set(l) }, i(t) { F || (G(A.$$.fragment, t), G(z.$$.fragment, t), F = !0) }, o(t) { T(A.$$.fragment, t), T(z.$$.fragment, t), F = !1 }, d(t) { t && o(e), j(A), j(z) } } } function be(t, e, a) { let { stride: l } = e, { dilation: n } = e, { kernel: s } = e, { image: r } = e, { output: i } = e, { isPaused: o } = e, { padding: d } = e, { isStrideValid: c } = e; const g = L(); let u, p, h = [], y = bt(i.length * i.length, t => !0); function m(t) { p = 0, a(10, o = !1), g("message", { text: o }); let e = wt(t, i, s.length, r.length, n); t <= 0 || (u && clearInterval(u), a(13, u = setInterval(() => { if (o || !c) return; const t = p % (i.length * i.length); a(6, y = bt(i.length * i.length, t => !1)); const l = Math.floor(t / i.length), n = t % i.length; a(6, y[l * i.length + n] = !0, y), a(5, h = kt(l, n, r.length, s.length, e, s.length)), p++ }, 1e3))) } m(l); let f = Et(r, 198 / r.length), x = Et(i, 198 / i.length), v = Et(s, 198 / s.length); return t.$$set = t => { "stride" in t && a(0, l = t.stride), "dilation" in t && a(11, n = t.dilation), "kernel" in t && a(12, s = t.kernel), "image" in t && a(1, r = t.image), "output" in t && a(2, i = t.output), "isPaused" in t && a(10, o = t.isPaused), "padding" in t && a(3, d = t.padding), "isStrideValid" in t && a(4, c = t.isStrideValid) }, t.$$.update = () => { if (4 & t.$$.dirty) { bt(i.length * i.length, t => !0) } 4103 & t.$$.dirty && (m(l), a(7, f = Et(r, 198 / r.length)), a(8, x = Et(i, 198 / i.length)), v = Et(s, 198 / s.length)) }, [l, r, i, d, c, h, y, f, x, function (t) { let e = wt(l, i, s.length, r.length, n); a(6, y = bt(i.length * i.length, t => !1)); const d = t.detail.hoverH, c = t.detail.hoverW; a(6, y[d * i.length + c] = !0, y), a(5, h = kt(d, c, r.length, s.length, e, s.length)), a(10, o = !0), g("message", { text: o }) }, o, n, s, u] } class $e extends K { constructor(t) { super(), W(this, t, be, ve, s, { stride: 0, dilation: 11, kernel: 12, image: 1, output: 2, isPaused: 10, padding: 3, isStrideValid: 4 }) } } function we(t) { let e, a, n, s, c, u, m, x, v, b, $, w, k, I, L, M, A, E, R, S, C, N, H, _, P, O, B, X, z, F, D, W, K, Y, U, J, Q, Z, tt, et, at, lt, nt, st, rt, it, ot, dt, ct, gt, ut, pt, ht, yt, mt, ft = t[7] ? '<i class="fas fa-play-circle play-icon"></i>' : '<i class="fas fa-pause-circle"></i>'; return gt = new $e({ props: { kernel: t[5], image: t[4], output: t[9], isStrideValid: t[8], stride: t[3], dilation: ke, padding: t[2], isPaused: t[7] } }), gt.$on("message", t[11]), { c() { e = d("div"), a = d("div"), n = d("div"), s = g(), c = d("div"), u = d("div"), m = d("div"), x = d("div"), v = d("div"), v.innerHTML = '<label class="label svelte-159efdy">Input Size:</label>', b = g(), $ = d("input"), k = g(), I = d("input"), M = g(), A = d("div"), E = d("div"), R = d("div"), R.innerHTML = '<label class="label svelte-159efdy">Padding:</label>', S = g(), C = d("input"), _ = g(), P = d("input"), X = g(), z = d("div"), F = d("div"), D = d("div"), D.innerHTML = '<label class="label svelte-159efdy">Kernel Size:</label>', W = g(), K = d("input"), U = g(), J = d("input"), Z = g(), tt = d("div"), et = d("div"), at = d("div"), at.innerHTML = '<label class="label svelte-159efdy">Stride:</label>', lt = g(), nt = d("input"), rt = g(), it = d("input"), dt = g(), ct = d("div"), V(gt.$$.fragment), ut = g(), pt = d("div"), pt.innerHTML = '<img src="./pointer.svg" alt="pointer icon" width="25px" class="svelte-159efdy"/> \n            <div class="annotation-text-hyper svelte-159efdy"><span style="font-weight:600">Hover over</span> the matrices to change kernel position.</div>', h(n, "class", "control-button svelte-159efdy"), h(v, "class", "field-label is-normal svelte-159efdy"), h($, "class", "input is-very-small svelte-159efdy"), h($, "type", "number"), h($, "min", t[1]), h($, "max", w = 7), h(x, "class", "field is-horizontal svelte-159efdy"), h(I, "type", "range"), h(I, "min", t[1]), h(I, "max", L = 7), h(I, "class", "svelte-159efdy"), h(m, "class", "input-row"), h(R, "class", "field-label is-normal svelte-159efdy"), h(C, "class", "input is-very-small svelte-159efdy"), h(C, "type", "number"), h(C, "min", N = 0), h(C, "max", H = t[1] - 1), h(E, "class", "field is-horizontal svelte-159efdy"), h(P, "type", "range"), h(P, "min", O = 0), h(P, "max", B = t[1] - 1), h(P, "class", "svelte-159efdy"), h(A, "class", "input-row"), h(D, "class", "field-label is-normal svelte-159efdy"), h(K, "class", "input is-very-small svelte-159efdy"), h(K, "type", "number"), h(K, "min", Y = t[2] + 1), h(K, "max", t[6]), h(F, "class", "field is-horizontal svelte-159efdy"), h(J, "type", "range"), h(J, "min", Q = t[2] + 1), h(J, "max", t[6]), h(J, "class", "svelte-159efdy"), h(z, "class", "input-row"), h(at, "class", "field-label is-normal svelte-159efdy"), h(nt, "class", "input is-very-small svelte-159efdy"), h(nt, "type", "number"), h(nt, "id", "strideNumber"), h(nt, "min", "1"), h(nt, "max", st = Math.max(t[6] - t[1] + 1, 2)), h(et, "class", "field is-horizontal svelte-159efdy"), h(it, "type", "range"), h(it, "min", "1"), h(it, "max", ot = Math.max(t[6] - t[1] + 1, 2)), h(it, "class", "svelte-159efdy"), h(tt, "class", "input-row"), h(u, "class", "left-part svelte-159efdy"), h(pt, "class", "annotation svelte-159efdy"), h(ct, "class", "right-part svelte-159efdy"), h(c, "class", "content-container svelte-159efdy"), h(a, "class", "box svelte-159efdy"), h(e, "class", "container has-text-centered"), h(e, "id", "detailview-container") }, m(l, o) { i(l, e, o), r(e, a), r(a, n), n.innerHTML = ft, r(a, s), r(a, c), r(c, u), r(u, m), r(m, x), r(x, v), r(x, b), r(x, $), f($, t[0]), r(m, k), r(m, I), f(I, t[0]), r(u, M), r(u, A), r(A, E), r(E, R), r(E, S), r(E, C), f(C, t[2]), r(A, _), r(A, P), f(P, t[2]), r(u, X), r(u, z), r(z, F), r(F, D), r(F, W), r(F, K), f(K, t[1]), r(z, U), r(z, J), f(J, t[1]), r(u, Z), r(u, tt), r(tt, et), r(et, at), r(et, lt), r(et, nt), f(nt, t[3]), r(tt, rt), r(tt, it), f(it, t[3]), r(c, dt), r(c, ct), q(gt, ct, null), r(ct, ut), r(ct, pt), ht = !0, yt || (mt = [p(n, "click", t[10]), p($, "input", t[12]), p(I, "change", t[13]), p(I, "input", t[13]), p(C, "input", t[14]), p(P, "change", t[15]), p(P, "input", t[15]), p(K, "input", t[16]), p(J, "change", t[17]), p(J, "input", t[17]), p(nt, "input", t[18]), p(it, "change", t[19]), p(it, "input", t[19])], yt = !0) }, p(t, [e]) { (!ht || 128 & e) && ft !== (ft = t[7] ? '<i class="fas fa-play-circle play-icon"></i>' : '<i class="fas fa-pause-circle"></i>') && (n.innerHTML = ft), (!ht || 2 & e) && h($, "min", t[1]), 1 & e && y($.value) !== t[0] && f($, t[0]), (!ht || 2 & e) && h(I, "min", t[1]), 1 & e && f(I, t[0]), (!ht || 2 & e && H !== (H = t[1] - 1)) && h(C, "max", H), 4 & e && y(C.value) !== t[2] && f(C, t[2]), (!ht || 2 & e && B !== (B = t[1] - 1)) && h(P, "max", B), 4 & e && f(P, t[2]), (!ht || 4 & e && Y !== (Y = t[2] + 1)) && h(K, "min", Y), (!ht || 64 & e) && h(K, "max", t[6]), 2 & e && y(K.value) !== t[1] && f(K, t[1]), (!ht || 4 & e && Q !== (Q = t[2] + 1)) && h(J, "min", Q), (!ht || 64 & e) && h(J, "max", t[6]), 2 & e && f(J, t[1]), (!ht || 66 & e && st !== (st = Math.max(t[6] - t[1] + 1, 2))) && h(nt, "max", st), 8 & e && y(nt.value) !== t[3] && f(nt, t[3]), (!ht || 66 & e && ot !== (ot = Math.max(t[6] - t[1] + 1, 2))) && h(it, "max", ot), 8 & e && f(it, t[3]); const a = {}; 32 & e && (a.kernel = t[5]), 16 & e && (a.image = t[4]), 512 & e && (a.output = t[9]), 256 & e && (a.isStrideValid = t[8]), 8 & e && (a.stride = t[3]), 4 & e && (a.padding = t[2]), 128 & e && (a.isPaused = t[7]), gt.$set(a) }, i(t) { ht || (G(gt.$$.fragment, t), ht = !0) }, o(t) { T(gt.$$.fragment, t), ht = !1 }, d(t) { t && o(e), j(gt), yt = !1, l(mt) } } } const ke = 1; function Ie(t) { let e = []; for (let a = 0; a < t; a++) { e.push([]); for (let l = 0; l < t; l++)e[a].push(0) } return e } function Le(t, e, a) { let l, n = 5, s = 2, r = 0, i = 1, o = !1, d = !0; let c = Ie(n + 2 * r), g = Ie(s), u = xt(c, g, i); return t.$$.update = () => { if (5 & t.$$.dirty && a(6, l = n + 2 * r), 5 & t.$$.dirty && a(4, c = Ie(n + 2 * r)), 2 & t.$$.dirty && a(5, g = Ie(s)), 122 & t.$$.dirty && i > 0) { const t = (l - s) / i + 1; let e = document.getElementById("strideNumber"); Number.isInteger(t) ? (a(9, u = xt(c, g, i)), null != e && (e.className = e.className.replace("is-danger", "")), a(8, d = !0)) : (e.className.includes("is-danger") || (e.className += " is-danger"), a(8, d = !1), console.log("Cannot handle stride of " + i)) } }, [n, s, r, i, c, g, l, o, d, u, function () { a(7, o = !o) }, function (t) { a(7, o = t.detail.text) }, function () { n = y(this.value), a(0, n) }, function () { n = y(this.value), a(0, n) }, function () { r = y(this.value), a(2, r) }, function () { r = y(this.value), a(2, r) }, function () { s = y(this.value), a(1, s) }, function () { s = y(this.value), a(1, s) }, function () { i = y(this.value), a(3, i) }, function () { i = y(this.value), a(3, i) }] } class Me extends K { constructor(t) { super(), W(this, t, Le, we, s, {}) } } var Ae = document.createElement("script"); Ae.src = "https://www.youtube.com/iframe_api"; var Ee = document.getElementsByTagName("script")[0]; function Re(e) { let a, l, n, s, c; return s = new Me({}), { c() { a = d("body"), l = d("div"), n = d("p"), V(s.$$.fragment), h(n, "class", "svelte-ixpg0w"), h(l, "id", "description"), h(l, "class", "svelte-ixpg0w") }, m(t, e) { i(t, a, e), r(a, l), r(l, n), q(s, n, null), c = !0 }, p: t, i(t) { c || (G(s.$$.fragment, t), c = !0) }, o(t) { T(s.$$.fragment, t), c = !1 }, d(t) { t && o(a), j(s) } } } function Se(t) { return [] } Ee.parentNode.insertBefore(Ae, Ee), window.onYouTubeIframeAPIReady = () => window.dispatchEvent(new Event("iframeApiReady")); class Ce extends K { constructor(t) { super(), W(this, t, Se, Re, s, {}) } } const Ne = "input", He = "conv", _e = "pool", Pe = "relu", Oe = "fc", Be = "flatten"; class Xe { constructor(t, e, a, l, n) { this.layerName = t, this.index = e, this.type = a, this.bias = l, this.output = n, this.inputLinks = [], this.outputLinks = [] } } class ze { constructor(t, e, a) { this.source = t, this.dest = e, this.weight = a } } const Fe = async (t, e) => { let a = await Te(t, !0), l = tf.stack([a]), n = []; for (let t = 0; t < e.layers.length; t++) { let a = e.layers[t].apply(l), s = a.squeeze(); 3 === s.shape.length && (s = s.transpose([2, 0, 1])), n.push(s), l = a } return ((t, e, a) => { let l = [], n = [], s = e.layers[0].batchInputShape.slice(1), r = a.transpose([2, 0, 1]).arraySync(); for (let t = 0; t < s[2]; t++) { let e = new Xe("input", t, Ne, 0, r[t]); n.push(e) } l.push(n); let i = 1; for (let a = 0; a < e.layers.length; a++) { let n = e.layers[a], s = t[a].squeeze(); s = s.arraySync(); let r, o = []; switch (n.name.includes("conv") ? r = He : n.name.includes("pool") ? r = _e : n.name.includes("relu") ? r = Pe : n.name.includes("output") ? r = Oe : n.name.includes("flatten") ? r = Be : console.log("Find unknown type"), r) { case He: { let t = n.bias.val.arraySync(), e = n.kernel.val.transpose([3, 2, 0, 1]).arraySync(); for (let a = 0; a < s.length; a++) { let d = new Xe(n.name, a, r, t[a], s[a]); for (let t = 0; t < l[i - 1].length; t++) { let n = l[i - 1][t], s = new ze(n, d, e[a][t]); n.outputLinks.push(s), d.inputLinks.push(s) } o.push(d) } break } case Oe: { let t = n.bias.val.arraySync(), e = n.kernel.val.transpose([1, 0]).arraySync(); for (let a = 0; a < s.length; a++) { let d = new Xe(n.name, a, r, t[a], s[a]), c = 0; for (let t = 0; t < l[i - 1].length; t++) { let n = l[i - 1][t], s = new ze(n, d, e[a][t]); n.outputLinks.push(s), d.inputLinks.push(s), c += n.output * e[a][t] } c += t[a], d.logit = c, o.push(d) } l[i - 1].sort((t, e) => t.realIndex - e.realIndex); break } case Pe: case _e: { let t = 0, e = null; for (let a = 0; a < s.length; a++) { let d = new Xe(n.name, a, r, t, s[a]), c = l[i - 1][a], g = new ze(c, d, e); c.outputLinks.push(g), d.inputLinks.push(g), o.push(d) } break } case Be: { let t = 0; for (let e = 0; e < s.length; e++) { let a = l[i - 1][0].output.length, d = l[i - 1].length, c = e % d, g = Math.floor(Math.floor(e / d) / a), u = Math.floor(e / d) % a, p = c * (a * a) + g * a + u, h = new Xe(n.name, e, r, t, s[e]); h.realIndex = p; let y = new ze(l[i - 1][c], h, [g, u]); l[i - 1][c].outputLinks.push(y), h.inputLinks.push(y), o.push(h) } o.sort((t, e) => t.index - e.index); break } default: console.error("Encounter unknown layer type") }l.push(o), i++ } return l })(n, e, a) }, Ge = (t, e, a, l = !0) => { let n = tf.fill([e, a, 3], 0).arraySync(); for (let s = 0; s < t.length; s++) { let r = Math.floor(s / 4), i = s % 4, o = e === a ? Math.floor(r / e) : r % e, d = e === a ? r % e : Math.floor(r / e); if (i < 3) { let e = t[s]; l && (e /= 255), n[o][d][i] = e } } return 64 != e && 64 != a && (n = (t => { let e, a = t.length, l = t[0].length; if (a < 64 || l < 64) { let e = Math.min(a, l), n = Math.floor(a / 2) - e / 2, s = Math.floor(l / 2) - e / 2; t.slice(n, n + e).map(t => t.slice(s, s + e)) } else { let n = Math.floor(a / 2) - Math.floor(32), s = Math.floor(l / 2) - Math.floor(32); e = t.slice(n, n + 64).map(t => t.slice(s, s + 64)) } return e })(n)), tf.tensor3d(n) }, Te = (t, e = !0) => { let a = document.createElement("canvas"); a.style.cssText = "display:none;", document.getElementsByTagName("body")[0].appendChild(a); let l = a.getContext("2d"); return new Promise((n, s) => { let r, i = new Image; i.crossOrigin = "Anonymous", i.src = t, i.onload = () => { if (a.width = i.width, a.height = i.height, i.width > 64 || i.height > 64) { let t = document.createElement("canvas"), e = t.getContext("2d"); const a = 65 / Math.min(i.width, i.height); t.width = i.width * a, t.height = i.height * a, e.drawImage(i, 0, 0, t.width, t.height), i.width != i.height && (l.translate(t.width, 0), l.scale(-1, 1), l.translate(t.width / 2, t.height / 2), l.rotate(90 * Math.PI / 180)), i.width != i.height ? l.drawImage(t, -t.width / 2, -t.height / 2) : l.drawImage(t, 0, 0), r = l.getImageData(0, 0, t.width, t.height) } else l.drawImage(i, 0, 0), r = l.getImageData(0, 0, i.width, i.height); let t = r.data, s = r.width, o = r.height; a.parentNode.removeChild(a), n(Ge(t, s, o, e)) }, i.onerror = s }) }; const Ve = { nodeLength: 40, plusSymbolRadius: 8, numLayers: 12, edgeOpacity: .8, edgeInitColor: "rgb(230, 230, 230)", edgeHoverColor: "rgb(130, 130, 130)", edgeHoverOuting: !1, edgeStrokeWidth: .7, intermediateColor: "gray", layerColorScales: { input: [d3.interpolateGreys, d3.interpolateGreys, d3.interpolateGreys], conv: d3.interpolateRdBu, relu: d3.interpolateRdBu, pool: d3.interpolateRdBu, fc: d3.interpolateGreys, weight: d3.interpolateBrBG, logit: d3.interpolateOranges }, svgPaddings: { top: 25, bottom: 25, left: 50, right: 50 }, kernelRectLength: 8 / 3, gapRatio: 4, overlayRectOffset: 12, classLists: ["lifeboat", "ladybug", "pizza", "bell pepper", "school bus", "koala", "espresso", "red panda", "orange", "sport car"] }, qe = Ve.nodeLength, je = t => { let e = 1 / 0, a = -1 / 0; if (void 0 === t.length) return [t, t]; if (void 0 === t[0].length) { for (let l = 0; l < t[0].length; l++)t[l] < e ? e = t[l] : t[l] > a && (a = t[l]); return [e, a] } for (let l = 0; l < t.length; l++)for (let n = 0; n < t[0].length; n++)t[l][n] < e ? e = t[l][n] : t[l][n] > a && (a = t[l][n]); return [e, a] }, De = t => ({ x: t.x + qe, y: t.y + qe / 2 }), We = t => ({ x: t.x, y: t.y + qe / 2 }), Ke = (t, e, a, l) => (void 0 === l && (l = 0), t((a + e / 2) / e * (1 - 2 * l) + l)), Ye = Ve.layerColorScales, Ue = Ve.nodeLength, Je = Ve.numLayers, Qe = Ve.edgeOpacity, Ze = Ve.edgeInitColor, ta = Ve.edgeStrokeWidth, ea = Ve.svgPaddings, aa = Ve.gapRatio, la = Ve.classLists, na = d3.format(".4f"); let sa = void 0; Q.subscribe(t => { sa = t }); let ra = void 0; Z.subscribe(t => { ra = t }); let ia = void 0; tt.subscribe(t => { ia = t }); let oa = void 0; J.subscribe(t => { oa = t }); let da = void 0; et.subscribe(t => { da = t }); let ca = void 0; at.subscribe(t => { ca = t }); let ga = void 0; lt.subscribe(t => { ga = t }); let ua = void 0; nt.subscribe(t => { ua = t }); let pa = void 0; rt.subscribe(t => { pa = t }); const ha = (t, e, a, l) => { let n = a[e], s = Ye[t.type]; "input" === t.type && (s = s[t.index]); let r = void 0 === t.output.length ? 1 : t.output.length, i = document.createElement("canvas"), o = i.getContext("2d"); i.width = r, i.height = r; let d = o.getImageData(0, 0, r, r), c = d.data; if (1 === r) c[0] = t.output; else for (let e = 0; e < c.length; e += 4) { let a = Math.floor(e / 4), n = Math.floor(a / r), i = a % r, o = void 0; o = "input" === t.type || "fc" === t.type ? d3.rgb(s(1 - t.output[n][i])) : d3.rgb(s((t.output[n][i] + l / 2) / l)), c[e] = o.r, c[e + 1] = o.g, c[e + 2] = o.b, c[e + 3] = 255 } let g = document.createElement("canvas"); g.width = 3 * Ue, g.height = 3 * Ue; let u = g.getContext("2d"); o.putImageData(d, 0, 0), u.drawImage(i, 0, 0, r, r, 0, 0, 3 * Ue, 3 * Ue); let p = g.toDataURL(); d3.select(n).attr("xlink:href", p), i.remove(), g.remove() }, ya = (t, e, a, l) => { d3.select(a[e]).select("rect.output-rect").transition("output").delay(500).duration(800).ease(d3.easeCubicIn).attr("width", l(t.output)) }, ma = (t, e, a, l, n) => { void 0 === l && (l = 0), void 0 === n && (n = 1); let s = t.append("defs").append("svg:linearGradient").attr("id", "" + a).attr("x1", "0%").attr("y1", "100%").attr("x2", "100%").attr("y2", "100%").attr("spreadMethod", "pad"); for (let t = 0; t < 10; t++) { let a = t / 9, r = e(a * (n - l) + l); s.append("stop").attr("offset", 100 * a + "%").attr("stop-color", r).attr("stop-opacity", 1) } }, fa = (t, e, a, l, n, s) => { ia = (t - Ue * Je) / (8 + 5 * aa), tt.set(ia); let r = 0; for (let t = 0; t < oa.length; t++) { let i = oa[t], o = "output" === i[0].layerName; da.push([]), o || "conv" === i[0].type ? r += ia * aa : r += ia; let d = r, c = a.append("g").attr("class", "cnn-layer-group").attr("id", "cnn-layer-group-" + t); ra = (e - Ue * i.length) / (i.length + 1), Z.set(ra); let g = c.selectAll("g.node-group").data(i, t => t.index).enter().append("g").attr("class", "node-group").style("cursor", "pointer").style("pointer-events", "all").on("click", s).on("mouseover", l).on("mouseleave", n).classed("node-output", o).attr("id", (e, a) => { let l = a * Ue + (a + 1) * ra; return l += ea.top, da[t].push({ x: d, y: l }), `layer-${t}-node-${a}` }); c.selectAll("g.node-output").on("mouseover", (t, e, a) => { l(t, e, a), gt.set({ show: !0, text: "Output value: " + na(t.output) }) }).on("mouseleave", (t, e, a) => { n(t, e, a), gt.set({ show: !1, text: "Output value: " + na(t.output) }) }), "output" !== i[0].layerName ? (g.append("image").attr("class", "node-image").attr("width", Ue).attr("height", Ue).attr("x", d).attr("y", (e, a) => da[t][a].y), g.append("rect").attr("class", "bounding").attr("width", Ue).attr("height", Ue).attr("x", d).attr("y", (e, a) => da[t][a].y).style("fill", "none").style("stroke", "gray").style("stroke-width", 1).classed("hidden", !0)) : (g.append("rect").attr("class", "output-rect").attr("x", d).attr("y", (e, a) => da[t][a].y + Ue / 2 + 8).attr("height", Ue / 4).attr("width", 0).style("fill", "gray"), g.append("text").attr("class", "output-text").attr("x", d).attr("y", (e, a) => da[t][a].y + Ue / 2).style("dominant-baseline", "middle").style("font-size", "11px").style("fill", "black").style("opacity", .5).text((t, e) => la[e])), r += Ue } et.set(da); let i = d3.scaleLinear().domain(ga.output).range([0, Ue]); for (let t = 0; t < oa.length; t++) { let e = ga[ca][t]; sa.select("g#cnn-layer-group-" + t).selectAll("image.node-image").each((t, a, l) => ha(t, a, l, e)) } sa.selectAll("g.node-output").each((t, e, a) => ya(t, e, a, i)); let o = oa.map(t => "output" === t[0].layerName ? { name: t[0].layerName, dimension: `(${t.length})` } : { name: t[0].layerName, dimension: `(${t[0].output.length}, ${t[0].output.length}, ${t.length})` }), d = Number(d3.select("#cnn-svg").style("height").replace("px", "")) + 150, c = new SmoothScroll('a[href*="#"]', { offset: -d }), g = sa.selectAll("g.layer-detailed-label").data(o).enter().append("g").attr("class", "layer-detailed-label").attr("id", (t, e) => "layer-detailed-label-" + e).classed("hidden", !pa).attr("transform", (t, e) => `translate(${da[e][0].x + Ue / 2}, ${(ea.top + ra) / 2 - 6})`).style("cursor", t => t.name.includes("output") ? "default" : "help").on("click", t => { let e = ""; t.name.includes("conv") && (e = "convolution"), t.name.includes("relu") && (e = "relu"), t.name.includes("max_pool") && (e = "pooling"), t.name.includes("input") && (e = "input"); let a = document.querySelector("#article-" + e); c.animateScroll(a) }); g.append("title").text("Move to article section"), g.append("text").style("opacity", .7).style("dominant-baseline", "middle").append("tspan").style("font-size", "12px").text(t => t.name).append("tspan").style("font-size", "8px").style("font-weight", "normal").attr("x", 0).attr("dy", "1.5em").text(t => t.dimension); let u = sa.selectAll("g.layer-label").data(o).enter().append("g").attr("class", "layer-label").attr("id", (t, e) => "layer-label-" + e).classed("hidden", pa).attr("transform", (t, e) => `translate(${da[e][0].x + Ue / 2}, ${(ea.top + ra) / 2 + 5})`).style("cursor", t => t.name.includes("output") ? "default" : "help").on("click", t => { let e = ""; t.name.includes("conv") && (e = "convolution"), t.name.includes("relu") && (e = "relu"), t.name.includes("max_pool") && (e = "pooling"), t.name.includes("input") && (e = "input"); let a = document.querySelector("#article-" + e); c.animateScroll(a) }); u.append("title").text("Move to article section"), u.append("text").style("dominant-baseline", "middle").style("opacity", .8).text(t => t.name.includes("conv") ? "conv" : t.name.includes("relu") ? "relu" : t.name.includes("max_pool") ? "max_pool" : t.name), ma(sa, Ye.conv, "convGradient"), ma(sa, Ye.input[0], "inputGradient"); ((t, e) => { for (let a = 0; a < 2; a++) { let l = 1 + 5 * a, n = ga.local[l], s = ga.local[l + 2], r = d3.scaleLinear().range([0, 2 * Ue + ia - 1.2]).domain([-n / 2, n / 2]), i = d3.scaleLinear().range([0, 3 * Ue + 2 * ia - 1.2]).domain([-s / 2, s / 2]), o = d3.axisBottom().scale(r).tickFormat(d3.format(".2f")).tickValues([-n / 2, 0, n / 2]), d = d3.axisBottom().scale(i).tickFormat(d3.format(".2f")).tickValues([-s / 2, 0, s / 2]), c = t.append("g").attr("class", "legend local-legend").attr("id", `local-legend-${a}-1`).classed("hidden", !pa || "local" !== ca).attr("transform", `translate(${da[l][0].x}, 0)`); c.append("g").attr("transform", `translate(0, ${e - 3})`).call(o), c.append("rect").attr("width", 2 * Ue + ia).attr("height", e).style("fill", "url(#convGradient)"); let g = t.append("g").attr("class", "legend local-legend").attr("id", `local-legend-${a}-2`).classed("hidden", !pa || "local" !== ca).attr("transform", `translate(${da[l + 2][0].x}, 0)`); g.append("g").attr("transform", `translate(0, ${e - 3})`).call(d), g.append("rect").attr("width", 3 * Ue + 2 * ia).attr("height", e).style("fill", "url(#convGradient)") } for (let a = 0; a < 2; a++) { let l = 1 + 5 * a, n = ga.module[l], s = d3.scaleLinear().range([0, 5 * Ue + 3 * ia + 1 * ia * aa - 1.2]).domain([-n / 2, n / 2]), r = d3.axisBottom().scale(s).tickFormat(d3.format(".2f")).tickValues([-n / 2, -n / 4, 0, n / 4, n / 2]), i = t.append("g").attr("class", "legend module-legend").attr("id", "module-legend-" + a).classed("hidden", !pa || "module" !== ca).attr("transform", `translate(${da[l][0].x}, 0)`); i.append("g").attr("transform", `translate(0, ${e - 3})`).call(r), i.append("rect").attr("width", 5 * Ue + 3 * ia + 1 * ia * aa).attr("height", e).style("fill", "url(#convGradient)") } let a = ga.global[1], l = d3.scaleLinear().range([0, 10 * Ue + 6 * ia + 3 * ia * aa - 1.2]).domain([-a / 2, a / 2]), n = d3.axisBottom().scale(l).tickFormat(d3.format(".2f")).tickValues([-a / 2, -a / 4, 0, a / 4, a / 2]), s = t.append("g").attr("class", "legend global-legend").attr("id", "global-legend").classed("hidden", !pa || "global" !== ca).attr("transform", `translate(${da[1][0].x}, 0)`); s.append("g").attr("transform", `translate(0, ${e - 3})`).call(n), s.append("rect").attr("width", 10 * Ue + 6 * ia + 3 * ia * aa).attr("height", e).style("fill", "url(#convGradient)"); let r = d3.scaleLinear().domain(ga.output).range([0, Ue - 1.2]), i = d3.axisBottom().scale(r).tickFormat(d3.format(".1f")).tickValues([0, ga.output[1]]), o = t.append("g").attr("class", "legend output-legend").attr("id", "output-legend").classed("hidden", !pa).attr("transform", `translate(${da[11][0].x}, 0)`); o.append("g").attr("transform", `translate(0, ${e - 3})`).call(i), o.append("rect").attr("width", Ue).attr("height", e).style("fill", "gray"); let d = d3.scaleLinear().range([0, Ue - 1.2]).domain([0, 1]), c = d3.axisBottom().scale(d).tickFormat(d3.format(".1f")).tickValues([0, .5, 1]), g = t.append("g").attr("class", "legend input-legend").classed("hidden", !pa).attr("transform", `translate(${da[0][0].x}, 0)`); g.append("g").attr("transform", `translate(0, ${e - 3})`).call(c), g.append("rect").attr("x", .3).attr("width", Ue - .3).attr("height", e).attr("transform", `rotate(180, ${Ue / 2}, ${e / 2})`).style("stroke", "rgb(20, 20, 20)").style("stroke-width", .3).style("fill", "url(#inputGradient)") })(sa.append("g").attr("class", "color-legend").attr("transform", `translate(0, ${ea.top + 10 * ra + ra + 10 * Ue})`), 5); let p = d3.linkHorizontal().x(t => t.x).y(t => t.y), h = ((t, e) => { let a = []; for (let l = 1; l < e.length; l++)for (let n = 0; n < e[l].length; n++) { let s = "output" === e[l][n].layerName, r = We(t[l][n]); for (let i = 0; i < e[l][n].inputLinks.length; i++) { let o = e[l][n].inputLinks[i].source.index; if (s) { let t = e[l - 1][0].output.length * e[l - 1][0].output.length; if (o % t != 0) continue; o = Math.floor(o / t) } let d = De(t[l - 1][o]), c = e[l][n].inputLinks[i].weight; a.push({ source: d, target: r, weight: c, targetLayerIndex: l, targetNodeIndex: n, sourceNodeIndex: o }) } } return a })(da, oa); a.append("g").attr("class", "edge-group").selectAll("path.edge").data(h).enter().append("path").attr("class", t => `edge edge-${t.targetLayerIndex} edge-${t.targetLayerIndex}-${t.targetNodeIndex}`).attr("id", t => `edge-${t.targetLayerIndex}-${t.targetNodeIndex}-${t.sourceNodeIndex}`).attr("d", t => p({ source: t.source, target: t.target })).style("fill", "none").style("stroke-width", ta).style("opacity", Qe).style("stroke", Ze); let y = a.append("g").attr("class", "input-annotation"), m = y.append("text").attr("x", da[0][0].x + Ue / 2).attr("y", da[0][0].y + Ue + 5).attr("class", "annotation-text").style("dominant-baseline", "hanging").style("text-anchor", "middle"); m.append("tspan").style("dominant-baseline", "hanging").style("fill", "#C95E67").text("Red"), m.append("tspan").style("dominant-baseline", "hanging").text(" channel"), y.append("text").attr("x", da[0][1].x + Ue / 2).attr("y", da[0][1].y + Ue + 5).attr("class", "annotation-text").style("dominant-baseline", "hanging").style("text-anchor", "middle").style("fill", "#3DB665").text("Green"), y.append("text").attr("x", da[0][2].x + Ue / 2).attr("y", da[0][2].y + Ue + 5).attr("class", "annotation-text").style("dominant-baseline", "hanging").style("text-anchor", "middle").style("fill", "#3F7FBC").text("Blue") }, xa = () => { let t = d3.scaleLinear().domain(ga.output).range([0, Ue]); for (let e = 0; e < oa.length; e++) { let a = oa[e], l = ga[ca][e], n = sa.select("g#cnn-layer-group-" + e).selectAll("g.node-group").data(a); e < oa.length - 1 ? n.transition("disappear").duration(300).ease(d3.easeCubicOut).style("opacity", 0).on("end", (function () { d3.select(this).select("image.node-image").each((t, e, a) => ha(t, e, a, l)), d3.select(this).transition("appear").duration(700).ease(d3.easeCubicIn).style("opacity", 1) })) : n.each((e, a, l) => ya(e, a, l, t)) } for (let t = 0; t < 2; t++) { let e = 1 + 5 * t, a = ga.local[e], l = ga.local[e + 2], n = d3.scaleLinear().range([0, 2 * Ue + ia]).domain([-a / 2, a / 2]), s = d3.scaleLinear().range([0, 3 * Ue + 2 * ia]).domain([-l / 2, l / 2]), r = d3.axisBottom().scale(n).tickFormat(d3.format(".2f")).tickValues([-a / 2, 0, a / 2]), i = d3.axisBottom().scale(s).tickFormat(d3.format(".2f")).tickValues([-l / 2, 0, l / 2]); sa.select(`g#local-legend-${t}-1`).select("g").call(r), sa.select(`g#local-legend-${t}-2`).select("g").call(i) } for (let t = 0; t < 2; t++) { let e = 1 + 5 * t, a = ga.local[e], l = d3.scaleLinear().range([0, 5 * Ue + 3 * ia + 1 * ia * aa - 1.2]).domain([-a, a]), n = d3.axisBottom().scale(l).tickFormat(d3.format(".2f")).tickValues([-a, -a / 2, 0, a / 2, a]); sa.select("g#module-legend-" + t).select("g").call(n) } let e = ga.global[1], a = d3.scaleLinear().range([0, 10 * Ue + 6 * ia + 3 * ia * aa - 1.2]).domain([-e, e]), l = d3.axisBottom().scale(a).tickFormat(d3.format(".2f")).tickValues([-e, -e / 2, 0, e / 2, e]); sa.select("g#global-legend").select("g").call(l); let n = d3.axisBottom().scale(t).tickFormat(d3.format(".1f")).tickValues([0, ga.output[1]]); sa.select("g#output-legend").select("g").call(n) }, va = () => { let t = [1], e = void 0; ua = []; for (let a = 0; a < oa.length - 1; a++) { let l = oa[a], n = l.map(t => je(t.output)).reduce((t, e) => [Math.min(t[0], e[0]), Math.max(t[1], e[1])]); ua.push({ min: n[0], max: n[1] }), "conv" !== l[0].type && "fc" !== l[0].type || (n = n.map(Math.abs), e = 2 * (.1 + Math.round(1e3 * Math.max(...n)) / 1e3)), void 0 !== e && t.push(e) } t.push(1), ua.push({ min: 0, max: 1 }); let a = [1], l = (Je - 2) / 5; for (let e = 0; e < l; e++) { let l = t.slice(1 + 5 * e, 1 + 5 * e + 5), n = Math.max(...l); for (let t = 0; t < 5; t++)a.push(n) } a.push(1); let n = [1], s = Math.max(...t.slice(1, t.length - 1)); for (let t = 0; t < Je - 2; t++)n.push(s); n.push(1), ga.local = t, ga.module = a, ga.global = n, ga.output = [0, d3.max(oa[oa.length - 1].map(t => t.output))], lt.set(ga), nt.set(ua) }, ba = Ve.layerColorScales, $a = Ve.nodeLength, wa = Ve.intermediateColor, ka = Ve.svgPaddings; let Ia = void 0; Q.subscribe(t => { Ia = t }); let La = void 0; Z.subscribe(t => { La = t }); const Ma = t => { let e = t.layerIndex, a = t.targetX, l = t.disable, n = t.delay, s = t.opacity, r = t.specialIndex, i = t.onEndFunc, o = void 0 === t.transitionName ? "move" : t.transitionName, d = void 0 === t.duration ? 500 : t.duration; Ia.select("g#cnn-layer-group-" + e).selectAll("g.node-group").each((t, e, i) => { d3.select(i[e]).style("cursor", l && e !== r ? "default" : "pointer").style("pointer-events", l && e !== r ? "none" : "all").select("image").transition(o).ease(d3.easeCubicInOut).delay(n).duration(d).attr("x", a), d3.select(i[e]).select("rect.bounding").transition(o).ease(d3.easeCubicInOut).delay(n).duration(d).attr("x", a), void 0 !== s && e !== r && d3.select(i[e]).select("image").style("opacity", s) }), Ia.selectAll("g#layer-label-" + e).transition(o).ease(d3.easeCubicInOut).delay(n).duration(d).attr("transform", () => `translate(${a + $a / 2}, ${(ka.top + La) / 2 + 5})`).on("end", i), Ia.selectAll("g#layer-detailed-label-" + e).transition(o).ease(d3.easeCubicInOut).delay(n).duration(d).attr("transform", () => `translate(${a + $a / 2}, ${(ka.top + La) / 2 - 6})`).on("end", i) }, Aa = (t, e, a) => { void 0 === a && (a = Ia); let l = a.append("defs").attr("class", "overlay-gradient").append("linearGradient").attr("id", t).attr("x1", "0%").attr("x2", "100%").attr("y1", "100%").attr("y2", "100%"); e.forEach(t => { l.append("stop").attr("offset", t.offset).attr("stop-color", t.color).attr("stop-opacity", t.opacity) }) }, Ea = t => { let e = t.legendHeight, a = t.curLayerIndex, l = t.range, n = t.group, s = t.minMax, r = t.width, i = t.x, o = t.y, d = t.isInput, c = t.colorScale, g = t.gradientAppendingName, u = t.gradientGap; void 0 === c && (c = ba.conv), void 0 === u && (u = 0); let p = "url(#inputGradient)", h = t => c(t * (1 - 2 * u) + u); if (!d) { let t = (s.min + l / 2) / l, e = (0 + l / 2) / l, a = (s.max + l / 2) / l, r = s.max - s.min, i = (0 - s.min) / r, o = t + (e - t) / 2, d = e + (a - e) / 2, c = [{ offset: 0, color: h(t), opacity: 1 }, { offset: i / 2, color: h(o), opacity: 1 }, { offset: i, color: h(e), opacity: 1 }, { offset: i + (1 - e) / 2, color: h(d), opacity: 1 }, { offset: 1, color: h(a), opacity: 1 }]; void 0 === g ? (Aa("intermediate-legend-gradient", c, n), p = "url(#intermediate-legend-gradient)") : (Aa("" + g, c, n), p = `url(#${g})`) } let y = d3.scaleLinear().range([0, r - 1.2]).domain(d ? [0, l] : [s.min, s.max]), m = d3.axisBottom().scale(y).tickFormat(d3.format(d ? "d" : ".2f")).tickValues(d ? [0, l] : [s.min, 0, s.max]), f = n.append("g").attr("class", "intermediate-legend-" + (a - 1)).attr("transform", `translate(${i}, ${o})`), x = f.append("g").attr("transform", `translate(0, ${e - 3})`).call(m); x.selectAll("text").style("font-size", "9px").style("fill", wa), x.selectAll("path, line").style("stroke", wa), f.append("rect").attr("width", r).attr("height", e).attr("transform", `rotate(${d ? 180 : 0},\n      ${r / 2}, ${e / 2})`).style("fill", p) }, Ra = t => { let e = t.group, a = t.sx, l = t.sy, n = t.tx, s = t.ty, r = t.dr, i = t.hFlip, o = void 0 === t.marker ? "marker" : t.marker; e.append("g").attr("class", "arrow-group").append("path").attr("d", `M${a},${l}A${r},${r} 0 0,${i ? 0 : 1} ${n},${s}`).attr("marker-end", `url(#${o})`).style("stroke", "gray").style("fill", "none") }, Sa = Ve.layerColorScales, Ca = Ve.nodeLength, Na = Ve.plusSymbolRadius, Ha = Ve.numLayers, _a = Ve.intermediateColor, Pa = Ve.kernelRectLength, Oa = Ve.svgPaddings, Ba = Ve.gapRatio, Xa = Ve.overlayRectOffset, za = d3.format(".4f"); let Fa = !1, Ga = void 0; Q.subscribe(t => { Ga = t }); let Ta = void 0; Z.subscribe(t => { Ta = t }); let Va = void 0; tt.subscribe(t => { Va = t }); let qa = void 0; J.subscribe(t => { qa = t }); let ja = void 0; et.subscribe(t => { ja = t }); let Da = void 0; at.subscribe(t => { Da = t }); let Wa = void 0; lt.subscribe(t => { Wa = t }); let Ka = void 0; nt.subscribe(t => { Ka = t }); let Ya = [void 0, void 0]; st.subscribe(t => { Ya = t }); let Ua = void 0; it.subscribe(t => { Ua = t }); let Ja = void 0; rt.subscribe(t => { Ja = t }); let Qa = void 0; pt.subscribe(t => { Qa = t }); const Za = (t, e, a, l, n) => { const s = () => { let r = +t.attr("data-origin-x"), i = +t.attr("data-origin-y"), o = +t.attr("data-tick"), d = o % e, c = Math.floor(o / e), g = r + d * a, u = i + c * a, p = (o + 1) % (e * e); Ga.selectAll(`rect.mask-${d}-${c}`).transition("window-sliding-mask").delay(l + 100).duration(300).style("opacity", 0), t.attr("data-tick", p).transition("window-sliding-input").delay(l).duration(200).attr("transform", `translate(${g}, ${u})`).on("end", () => { 0 === p && (Fa || el(n)), Ua && s() }) }; s() }, tl = (t, e, a, l) => { const n = () => { let s = +t.attr("data-origin-x"), r = +t.attr("data-origin-y"), i = +e.attr("data-origin-x"), o = +t.attr("data-tick"), d = o % a, c = Math.floor(o / a), g = s + d * l, u = r + c * l, p = i + o % a * l, h = (o + 1) % (a * a); Ga.selectAll(`rect.mask-${d}-${c}`).transition("window-sliding-mask").delay(300).duration(300).style("opacity", 0), t.attr("data-tick", h).transition("window-sliding-input").delay(200).duration(200).attr("transform", `translate(${g}, ${u})`), e.attr("data-tick", h).transition("window-sliding-result").delay(200).duration(200).attr("transform", `translate(${p}, ${u})`).on("end", () => { Ua && n() }) }; n() }, el = t => { null !== d3.event && d3.event.stopPropagation(); let e = Ca / (3 * Pa), a = 3 * Pa; if (Fa) { it.set(!0), Ga.selectAll(".kernel-clone").transition().duration(300).style("opacity", 1), Ga.selectAll("rect.mask-overlay").transition().duration(300).style("opacity", 1); for (let l = 0; l < ja[t - 1].length; l++)tl(d3.select(".kernel-input-" + l), d3.select(".kernel-result-" + l), e, a); Za(d3.select(".kernel-output"), e, a, 200, t), Ga.selectAll("path.flow-edge").attr("stroke-dasharray", "4 2").attr("stroke-dashoffset", 0).each((t, e, a) => al(t, e, a, -1e3)), Ga.select(".animation-control-button").attr("xlink:href", "./assets/img/fast_forward.svg"), Fa = !1 } else { it.set(!1), Ga.selectAll("rect.mask-overlay").transition("skip").duration(600).style("opacity", 0), Ga.selectAll(".kernel-clone").attr("data-tick", 0).transition("skip").duration(300).style("opacity", 0).on("end", (t, e, a) => { let l = d3.select(a[e]), n = +l.attr("data-origin-x"), s = +l.attr("data-origin-y"); l.attr("transform", `translate(${n}, ${s})`) }), Ga.selectAll("path.flow-edge").interrupt().attr("stroke-dasharray", "0 0"), Ga.select(".animation-control-button").attr("xlink:href", "./assets/img/redo.svg"), Fa = !0 } }, al = (t, e, a, l) => { d3.select(a[e]).transition().duration(6e4).ease(d3.easeLinear).attr("stroke-dashoffset", l).on("end", (t, e, a) => { Ua && al(t, e, a, l - 2e3) }) }, ll = (t, e, a, l, n, s, r, i, o, d) => { let c = Ga.append("g").attr("class", "intermediate-layer").style("opacity", 0); Fa = !1; let g = e + Ca + n, u = g + Ca + 1.5 * n, p = Wa[Da][t], h = Sa[s.type], y = [], m = [], f = s.inputLinks.map(t => je(t.weight)).reduce((t, e) => [Math.min(t[0], e[0]), Math.max(t[1], e[1])]), x = Math.round(1e3 * Math.max(...f.map(Math.abs))) / 1e3 * 2, v = 3 * Pa, b = ja[t][r].y, $ = Ga.select(`#layer-${t}-node-${r}`), w = $.append("g").attr("class", "overlay-group").attr("transform", `translate(${a}, ${b})`), k = Math.floor(Ca / v); for (let t = 0; t < k; t++)for (let e = 0; e < k; e++)w.append("rect").attr("class", `mask-overlay mask-${t}-${e}`).attr("width", v).attr("height", v).attr("x", t * v).attr("y", e * v).style("fill", "var(--light-gray)").style("stroke", "var(--light-gray)").style("opacity", 1); $.select("rect.bounding").raise(); let I = c.append("g").attr("class", "kernel kernel-output kernel-clone").attr("transform", `translate(${a}, ${b})`); I.append("rect").attr("x", 0).attr("y", 0).attr("width", 3 * Pa).attr("height", 3 * Pa).attr("fill", "none").attr("stroke", _a), I.attr("data-tick", 0).attr("data-origin-x", a).attr("data-origin-y", b); let L = Ca / (3 * Pa); Za(I, L, v, 200, t), ja[t - 1].forEach((a, l) => { let n = qa[t - 1][l].output, f = qa[t][r].inputLinks[l].weight, b = xt(n, f); y.push(je(b)), ((t, e, a, l, n) => { let s = l, r = document.createElement("canvas"), i = r.getContext("2d"); r.width = s, r.height = s; let o = i.getImageData(0, 0, s, s), d = o.data; for (let t = 0; t < d.length; t += 4) { let l = Math.floor(t / 4), r = Math.floor(l / s), i = l % s, o = d3.rgb(a((n[r][i] + e / 2) / e)); d[t] = o.r, d[t + 1] = o.g, d[t + 2] = o.b, d[t + 3] = 255 } let c = document.createElement("canvas"); c.width = 3 * Ca, c.height = 3 * Ca; let g = c.getContext("2d"); i.putImageData(o, 0, 0), g.drawImage(r, 0, 0, s, s, 0, 0, 3 * Ca, 3 * Ca); let u = c.toDataURL(); t.attr("xlink:href", u), r.remove(), c.remove() })(((t, e, a, l, n, s, r, i, o, d, c) => { let g = a.append("g").datum(qa[t - 1][s]).attr("class", "intermediate-node").attr("cursor", c ? "pointer" : "default").attr("pointer-events", c ? "all" : "none").attr("node-index", s).on("mouseover", i).on("mouseleave", o).on("click", (a, l, n) => d(a, l, n, e, t)); g.append("image").attr("width", Ca).attr("height", Ca).attr("x", l).attr("y", n); let u = Math.floor(Ca / r), p = g.append("g").attr("class", "overlay-group").attr("transform", `translate(${l}, ${n})`); for (let t = 0; t < u; t++)for (let e = 0; e < u; e++)p.append("rect").attr("class", `mask-overlay mask-${t}-${e}`).attr("width", r).attr("height", r).attr("x", t * r).attr("y", e * r).style("fill", "var(--light-gray)").style("stroke", "var(--light-gray)").style("opacity", 1); return g.append("rect").attr("class", "bounding").attr("width", Ca).attr("height", Ca).attr("x", l).attr("y", n).style("fill", "none").style("stroke", _a).style("stroke-width", 1), g })(t, r, c, g, a.y, l, v, i, o, d, !0).select("image"), p, h, s.output.length, b), m.push({ source: De({ x: e, y: a.y }), target: We({ x: g, y: a.y }), name: `input-${l}-inter1-${l}` }), m.push({ source: De({ x: g, y: a.y }), target: We({ x: u, y: ja[t][r].y }), name: `inter1-${l}-inter2-1` }); let $ = e - 3 * Pa * 2, w = c.append("g").attr("class", "kernel kernel-" + l).attr("transform", `translate(${$}, ${a.y})`), k = "Kernel weights: [", I = d3.format(".2f"); for (let t = 0; t < f.length; t++)for (let e = 0; e < f[0].length; e++) { w.append("rect").attr("class", "kernel").attr("x", Pa * e).attr("y", Pa * t).attr("width", Pa).attr("height", Pa).attr("fill", Ke(Sa.weight, x, f[t][e], .2)); let a = ""; a = 0 === e && 0 == t ? "" : 0 === e ? "; " : ", ", k = k.concat(a, "" + I(f[t][e])) } k = k.concat("]"), w.append("rect").attr("x", 0).attr("y", 0).attr("width", 3 * Pa).attr("height", 3 * Pa).attr("fill", "none").attr("stroke", _a), w.style("pointer-events", "all").style("cursor", "crosshair").on("mouseover", () => { gt.set({ show: !0, text: k }) }).on("mouseleave", () => { gt.set({ show: !1, text: k }) }).on("click", () => { d3.event.stopPropagation() }); let M = w.clone(!0).style("pointer-events", "none").style("cursor", "pointer").classed("kernel-clone", !0).classed("kernel-input-" + l, !0); M.style("opacity", .9).selectAll("rect.kernel").style("opacity", .7), M.attr("transform", `translate(${e}, ${a.y})`).attr("data-tick", 0).attr("data-origin-x", e).attr("data-origin-y", a.y); let A = w.clone(!0).style("pointer-events", "none").style("cursor", "pointer").classed("kernel-clone", !0).classed("kernel-result-" + l, !0); A.style("opacity", .9).selectAll("rect.kernel").style("fill", "none"), A.attr("transform", `translate(${g}, ${a.y})`).attr("data-origin-x", g).attr("data-origin-y", a.y), tl(M, A, L, v) }); let M = y.reduce((t, e) => [Math.min(t[0], e[0]), Math.max(t[1], e[1])]), A = { min: M[0], max: M[1] }, E = ja[t][r].y + Ca / 2, R = c.append("g").attr("class", "plus-symbol").attr("transform", `translate(${u + Na}, ${E})`); R.append("rect").attr("x", -Na).attr("y", -Na).attr("width", 2 * Na).attr("height", 2 * Na).attr("rx", 3).attr("ry", 3).style("fill", "none").style("stroke", _a), R.append("rect").attr("x", -(Na - 3)).attr("y", -.5).attr("width", 2 * (Na - 3)).attr("height", 1).style("fill", _a), R.append("rect").attr("x", -.5).attr("y", -(Na - 3)).attr("width", 1).attr("height", 2 * (Na - 3)).style("fill", _a), 0 == r ? (R.append("circle").attr("cx", 0).attr("cy", Ca / 2 + Pa).attr("r", 4).style("stroke", _a).style("cursor", "crosshair").style("fill", Ke(Sa.weight, x, s.bias, .2)).on("mouseover", () => { gt.set({ show: !0, text: "Bias: " + za(s.bias) }) }).on("mouseleave", () => { gt.set({ show: !1, text: "Bias: " + za(s.bias) }) }), m.push({ source: { x: u + Na, y: ja[t][r].y + Ca }, target: { x: u + Na, y: ja[t][r].y + Ca / 2 + Na }, name: "bias-plus" })) : (R.append("circle").attr("cx", 0).attr("cy", -Ca / 2 - Pa).attr("r", 4).style("stroke", _a).style("cursor", "crosshair").style("fill", Ke(Sa.weight, x, s.bias, .2)).on("mouseover", () => { gt.set({ show: !0, text: "Bias: " + za(s.bias) }) }).on("mouseleave", () => { gt.set({ show: !1, text: "Bias: " + za(s.bias) }) }), m.push({ source: { x: u + Na, y: ja[t][r].y }, target: { x: u + Na, y: ja[t][r].y + Ca / 2 - Na }, name: "bias-plus" })), m.push({ source: De({ x: u + 2 * Na - Ca, y: ja[t][r].y }), target: We({ x: a, y: ja[t][r].y }), name: "symbol-output" }), m.push({ source: De({ x: a, y: ja[t][r].y }), target: We({ x: l, y: ja[t][r].y }), name: "output-next" }), c.append("g").attr("class", "layer-intermediate-label layer-label").attr("transform", () => `translate(${g + Ca / 2}, ${(Oa.top + Ta) / 2 + 5})`).classed("hidden", Ja).append("text").style("text-anchor", "middle").style("dominant-baseline", "middle").style("font-weight", 800).style("opacity", "0.8").text("intermediate"), c.append("g").attr("class", "animation-control").attr("transform", () => `translate(${g + Ca / 2}, ${(Oa.top + Ta) / 2 - 4})`).on("click", () => el(t)).append("image").attr("class", "animation-control-button").attr("xlink:href", "./assets/img/fast_forward.svg").attr("x", 50).attr("y", 0).attr("height", 13).attr("width", 13), c.append("g").attr("class", "layer-intermediate-label layer-detailed-label").attr("transform", () => `translate(${g + Ca / 2}, ${(Oa.top + Ta) / 2 - 5})`).classed("hidden", !Ja).append("text").style("text-anchor", "middle").style("dominant-baseline", "middle").style("opacity", "0.7").style("font-weight", 800).append("tspan").text("intermediate").append("tspan").style("font-size", "8px").style("font-weight", "normal").attr("x", 0).attr("dy", "1.5em").text(`(${qa[t][0].output.length},\n      ${qa[t][0].output[0].length},\n      ${qa[t].length})`); let S = d3.linkHorizontal().x(t => t.x).y(t => t.y), C = c.append("g").attr("class", "edge-group").lower(); return C.selectAll("path").data(m).enter().append("path").classed("flow-edge", t => "output-next" !== t.name).attr("id", t => "edge-" + t.name).attr("d", t => S({ source: t.source, target: t.target })).style("fill", "none").style("stroke-width", 1).style("stroke", _a), C.select("#edge-output-next").style("opacity", .1), C.selectAll("path.flow-edge").attr("stroke-dasharray", "4 2").attr("stroke-dashoffset", 0).each((t, e, a) => al(t, e, a, -1e3)), { intermediateLayer: c, intermediateMinMax: A, kernelRange: x, kernelMinMax: { min: f[0], max: f[1] } } }, nl = t => { let e, a, l, n, s, r, i, o, d, c, g, u, p = t.leftX, h = t.curLayerIndex, y = t.group, m = t.intermediateGap, f = t.isFirstConv, x = t.i, v = y.append("g").attr("class", "kernel-annotation"); v.append("text").text("Kernel").attr("class", "annotation-text").attr("x", p - 2.5 * Pa * 3).attr("y", ja[h - 1][0].y + 3 * Pa).style("dominant-baseline", "baseline").style("text-anchor", "end"), f ? (e = p, a = ja[h - 1][0].y + Ca + 3 * Pa, l = p - 5, n = ja[h - 1][0].y + Ca + 3 * Pa + 5, s = 20, r = p, i = ja[h - 1][1].y + Ca + 3 * Pa, o = p - 3 * Pa, d = ja[h - 1][1].y + Ca + 15, g = p - 13, u = ja[h - 1][1].y + 15, c = 35) : (e = p - 3 * Pa * 3, a = ja[h - 1][0].y + Ca / 3, l = p - 2 * Pa * 3 - 5, n = ja[h - 1][0].y + Ca - 10, s = 50, r = p - 3 * Pa * 3, i = ja[h - 1][2].y - 3, g = p - 3 * Pa - 4, u = ja[h - 1][2].y + 3 * Pa + 6, o = p - 3 * Pa - 13, d = ja[h - 1][2].y + 26, c = 20); let b = v.append("text").attr("x", e).attr("y", a).attr("class", "annotation-text").style("dominant-baseline", "hanging").style("text-anchor", f ? "start" : "end"); b.append("tspan").style("dominant-baseline", "hanging").text("Slide kernel over input channel"), b.append("tspan").attr("x", e).attr("dy", "1em").style("dominant-baseline", "hanging").text("to get intermediate result"), b.append("tspan").attr("x", e).attr("dy", "1.2em").style("dominant-baseline", "hanging").style("font-weight", 700).text("Click "), b.append("tspan").style("dominant-baseline", "hanging").style("font-weight", 400).text("to learn more"), Ra({ group: y, tx: p - 7, ty: ja[h - 1][0].y + Ca / 2, sx: l, sy: n, hFlip: !f, dr: s, marker: "marker" }); let $ = v.append("text").attr("x", r).attr("y", i).attr("class", "annotation-text").style("dominant-baseline", "hanging").style("text-anchor", f ? "start" : "end"); $.append("tspan").style("dominant-baseline", "hanging").text("Each input chanel"), $.append("tspan").attr("x", e).attr("dy", "1em").style("dominant-baseline", "hanging").text("gets a different kernel"), $.append("tspan").attr("x", e).attr("dy", "1.3em").style("font-weight", 700).style("dominant-baseline", "hanging").text("Hover over "), $.append("tspan").style("font-weight", 400).style("dominant-baseline", "hanging").text("to see value!"), Ra({ group: y, tx: g, ty: u, sx: o, sy: d, dr: c, hFlip: !f, marker: "marker" }); let w = y.append("g").attr("class", "plus-annotation"), k = p + 2 * Ca + 2.5 * m, I = k, L = ja[h][x].y + Ca + 3 * Pa; 0 === x && (I += 30), 9 === x && (I = k + Na - 10, L -= 2.5 * Ca); let M = w.append("text").attr("x", I).attr("y", L).attr("class", "annotation-text").style("dominant-baseline", "hanging").style("text-anchor", "start"); M.append("tspan").style("dominant-baseline", "hanging").text("Add up all intermediate"), M.append("tspan").attr("x", I).attr("dy", "1em").style("dominant-baseline", "hanging").text("results and then add bias"), Ra(9 === x ? { group: y, sx: k + 50, sy: ja[h][x].y - (Ca / 2 + 2 * Pa), tx: k + 2 * Na + 5, ty: ja[h][x].y + Ca / 2 - Na, dr: 50, hFlip: !1, marker: "marker-alt" } : { group: y, sx: k + 35, sy: ja[h][x].y + Ca + 2 * Pa, tx: k + 2 * Na + 5, ty: ja[h][x].y + Ca / 2 + Na, dr: 30, hFlip: !0, marker: "marker-alt" }); let A = ja[h][x].y; 0 === x ? A += Ca + 3 * Pa : A -= 2 * Pa + 5, w.append("text").attr("class", "annotation-text").attr("x", k + Na).attr("y", A).style("text-anchor", "middle").style("dominant-baseline", 0 === x ? "hanging" : "baseline").text("Bias") }, sl = (t, e, a, l, n, s, r, i) => { let o = Ga.select("g.underneath"); for (let d = 0; d < qa[t - 1].length; d++)o.append("rect").attr("class", "underneath-gateway").attr("id", "underneath-gateway-" + d).attr("x", a - n).attr("y", ja[t - 1][d].y - n).attr("width", 2 * Ca + l + 2 * n).attr("height", Ca + 2 * n).attr("rx", 10).style("fill", "rgba(160, 160, 160, 0.2)").style("opacity", 0), Ga.select(`g#layer-${t - 1}-node-${d}`).style("pointer-events", "all").style("cursor", "pointer").on("mouseover", s).on("mouseleave", r).on("click", (a, l, n) => i(a, l, n, e, t)); o.lower() }, rl = (t, e, a, l, n) => { Ga.select(".intermediate-layer-overlay").empty() && Ga.append("g").attr("class", "intermediate-layer-overlay"), Ga.select(".intermediate-layer-overlay").append("rect").attr("class", "overlay").style("fill", `url(#${t})`).style("stroke", "none").attr("width", l).attr("height", n).attr("x", e).attr("y", a).style("opacity", 0).transition("move").duration(800).ease(d3.easeCubicInOut).style("opacity", 1) }, il = (t, e) => { let a = Wa[Da][t - 1], l = Wa[Da][t], n = Math.max(a, l); a > l ? (Ga.select(`g#layer-${t}-node-${e}`).select("image.node-image").each((t, e, a) => ha(t, e, a, n)), Ya = [t, e], st.set(Ya)) : a < l && (Ga.select("g#cnn-layer-group-" + (t - 1)).selectAll("image.node-image").each((t, e, a) => ha(t, e, a, n)), Ya = [t - 1, void 0], st.set(Ya)); let s = Ka[t - 1].min, r = Ka[t - 1].max, i = qa[t][e]; for (let t = 0; t < i.output.length; t++)for (let e = 0; e < i.output[0].length; e++)i.output[t][e] < s && (s = i.output[t][e]), i.output[t][e] > r && (r = i.output[t][e]); return { range: n, minMax: { min: s, max: r } } }, ol = (t, e, a, l, n, s, r, i) => { let o = ja[t - 1][0].x + 2 * Ca + 2 * Va * Ba + 2 * Na, d = Va * Ba * 2 / 3, c = ja[t - 1][0].x; Qa.conv_1_1 = o + Ca, pt.set(Qa), Ga.select("g.edge-group").style("visibility", "hidden"), Ma({ layerIndex: t, targetX: o, disable: !0, delay: 0, opacity: .15, specialIndex: a }); let g = o + Ca + Va * Ba, u = (l - g - 10 * Ca) / 10; for (let e = t + 1; e < Ha; e++) { Ma({ layerIndex: e, targetX: g + (e - (t + 1)) * (Ca + u), disable: !0, delay: 0 }) } Aa("overlay-gradient", [{ offset: "0%", color: "rgb(250, 250, 250)", opacity: .85 }, { offset: "50%", color: "rgb(250, 250, 250)", opacity: .95 }, { offset: "100%", color: "rgb(250, 250, 250)", opacity: 1 }]), rl("overlay-gradient", g - Xa / 2, 0, l - g + Xa, n + Oa.top + Oa.bottom); let { intermediateLayer: p, intermediateMinMax: h, kernelRange: y, kernelMinMax: m } = ll(t, c, o, g, d, e, a, s, r, i); sl(t, a, c, d, 8, s, r, i); let f = 1 / 0, x = -1 / 0, v = qa[t][a]; for (let t = 0; t < v.output.length; t++)for (let e = 0; e < v.output[0].length; e++)v.output[t][e] < f && (f = v.output[t][e]), v.output[t][e] > x && (x = v.output[t][e]); let b = { min: Math.min(f, h.min), max: Math.max(x, h.max) }, $ = Ga.append("g").attr("class", "intermediate-layer-annotation").style("opacity", 0); nl({ leftX: c, curLayerIndex: t, group: $, intermediateGap: d, isFirstConv: !0, i: a }); let w = Wa.local[t]; Ea({ legendHeight: 5, curLayerIndex: t, range: 1, group: p, width: 2 * Ca + d, isInput: !0, x: c, y: Oa.top + 10 * Ta + Ta + 10 * Ca - 25 }), Ea({ legendHeight: 5, curLayerIndex: t, range: w, minMax: b, group: p, width: 2 * Ca + d, x: ja[t - 1][2].x, y: Oa.top + 10 * Ta + Ta + 10 * Ca }), Ea({ legendHeight: 5, curLayerIndex: t, range: y, minMax: m, group: p, width: 2 * Ca + d, x: o + Ca - (2 * Ca + d), y: Oa.top + 10 * Ta + Ta + 10 * Ca, gradientAppendingName: "kernelColorGradient", colorScale: Sa.weight, gradientGap: .2 }), Ga.selectAll("g.intermediate-layer, g.intermediate-layer-annotation").transition().delay(500).duration(500).ease(d3.easeCubicInOut).style("opacity", 1) }, dl = (t, e, a, l, n, s, r, i) => { let o = ja[t - 1][0].x + 2 * Ca + 2 * Va * Ba + 2 * Na, d = Va * Ba * 2 / 3; Qa.conv_1_2 = o + Ca, pt.set(Qa); let { range: c, minMax: g } = il(t, a); Ga.select("g.edge-group").style("visibility", "hidden"), Ma({ layerIndex: t, targetX: o, disable: !0, delay: 0, opacity: .15, specialIndex: a }); let u = o + Ca + Va * Ba, p = (l - u - 8 * Ca) / 8; for (let e = t + 1; e < Ha; e++) { Ma({ layerIndex: e, targetX: u + (e - (t + 1)) * (Ca + p), disable: !0, delay: 0 }) } let h = [{ offset: "0%", color: "rgb(250, 250, 250)", opacity: .85 }, { offset: "50%", color: "rgb(250, 250, 250)", opacity: .95 }, { offset: "100%", color: "rgb(250, 250, 250)", opacity: 1 }]; Aa("overlay-gradient-right", h), h = [{ offset: "0%", color: "rgb(250, 250, 250)", opacity: .85 + (.95 - .85) * ((2 * Ca + Va * Ba) / (8 * Ca + 7 * d)) }, { offset: "100%", color: "rgb(250, 250, 250)", opacity: .85 }], Aa("overlay-gradient-left", h), rl("overlay-gradient-right", u - Xa / 2, 0, l - u + Xa, n + Oa.top + Oa.bottom), rl("overlay-gradient-left", ja[0][0].x - Xa / 2, 0, 2 * Ca + Va * Ba + Xa, n + Oa.top + Oa.bottom); let y = ja[t - 1][0].x, { intermediateLayer: m, intermediateMinMax: f, kernelRange: x, kernelMinMax: v } = ll(t, y, o, u, d, e, a, s, r, i); sl(t, a, y, d, 5, s, r, i); let b = { min: Math.min(g.min, f.min), max: Math.max(g.max, f.max) }, $ = Ga.append("g").attr("class", "intermediate-layer-annotation").style("opacity", 0); nl({ leftX: y, curLayerIndex: t, group: $, intermediateGap: d, i: a }), Ea({ legendHeight: 5, curLayerIndex: t, range: c, minMax: b, group: m, width: 2 * Ca + d, x: y, y: Oa.top + 10 * Ta + Ta + 10 * Ca }), Ea({ legendHeight: 5, curLayerIndex: t, range: x, minMax: v, group: m, width: 2 * Ca + d, x: o + Ca - (2 * Ca + d), y: Oa.top + 10 * Ta + Ta + 10 * Ca, gradientAppendingName: "kernelColorGradient", colorScale: Sa.weight, gradientGap: .2 }), Ga.selectAll("g.intermediate-layer, g.intermediate-layer-annotation").transition().delay(500).duration(500).ease(d3.easeCubicInOut).style("opacity", 1) }, cl = (t, e, a, l, n, s, r, i) => { let o = ja[t][0].x, d = o - (2 * Ca + 2 * Va * Ba + 2 * Na), c = Va * Ba * 2 / 3; Qa.conv_2_1 = o + Ca, pt.set(Qa), Ga.select("g.edge-group").style("visibility", "hidden"); let { range: g, minMax: u } = il(t, a); Ma({ layerIndex: t - 1, targetX: d, disable: !0, delay: 0 }), Ma({ layerIndex: t, targetX: o, disable: !0, delay: 0, opacity: .15, specialIndex: a }); let p = d - Va, h = (p - ja[0][0].x - 5 * Ca) / 5, y = ja[t][0].x + Ca + Va; for (let e = 0; e < t - 1; e++) { let t = ja[0][0].x + e * (Ca + h); Ma({ layerIndex: e, targetX: t, disable: !0, delay: 0 }) } let m = [{ offset: "0%", color: "rgb(250, 250, 250)", opacity: 1 }, { offset: "50%", color: "rgb(250, 250, 250)", opacity: .9 }, { offset: "100%", color: "rgb(250, 250, 250)", opacity: .85 }]; Aa("overlay-gradient-left", m), m = [{ offset: "0%", color: "rgb(250, 250, 250)", opacity: .85 }, { offset: "50%", color: "rgb(250, 250, 250)", opacity: .95 }, { offset: "100%", color: "rgb(250, 250, 250)", opacity: 1 }], Aa("overlay-gradient-right", m), rl("overlay-gradient-left", ja[0][0].x - Xa / 2, 0, p - ja[0][0].x + Xa, n + Oa.top + Oa.bottom), rl("overlay-gradient-right", y - Xa / 2, 0, l - y + Xa, n + Oa.top + Oa.bottom); let { intermediateLayer: f, intermediateMinMax: x, kernelRange: v, kernelMinMax: b } = ll(t, d, ja[t][0].x, y, c, e, a, s, r, i); sl(t, a, d, c, 5, s, r, i); let $ = { min: Math.min(u.min, x.min), max: Math.max(u.max, x.max) }, w = Ga.append("g").attr("class", "intermediate-layer-annotation").style("opacity", 0); nl({ leftX: d, curLayerIndex: t, group: w, intermediateGap: c, i: a }), Ea({ legendHeight: 5, curLayerIndex: t, range: g, group: f, width: 2 * Ca + c, minMax: $, x: d, y: Oa.top + 10 * Ta + Ta + 10 * Ca }), Ea({ legendHeight: 5, curLayerIndex: t, range: v, minMax: b, group: f, width: 2 * Ca + c, x: o + Ca - (2 * Ca + c), y: Oa.top + 10 * Ta + Ta + 10 * Ca, gradientAppendingName: "kernelColorGradient", colorScale: Sa.weight, gradientGap: .2 }), Ga.selectAll("g.intermediate-layer, g.intermediate-layer-annotation").transition().delay(500).duration(500).ease(d3.easeCubicInOut).style("opacity", 1) }, gl = (t, e, a, l, n, s, r, i) => { let o = ja[t][0].x, d = o - (2 * Ca + 2 * Va * Ba + 2 * Na), c = Va * Ba * 2 / 3; Qa.conv_2_2 = d, pt.set(Qa), Ga.select("g.edge-group").style("visibility", "hidden"); let { range: g, minMax: u } = il(t, a); Ma({ layerIndex: t - 1, targetX: d, disable: !0, delay: 0 }), Ma({ layerIndex: t, targetX: o, disable: !0, delay: 0, opacity: .15, specialIndex: a }); let p = d - Va, h = (p - ja[0][0].x - 7 * Ca) / 7, y = o + Ca + Va; for (let e = 0; e < t - 1; e++) { let t = ja[0][0].x + e * (Ca + h); Ma({ layerIndex: e, targetX: t, disable: !0, delay: 0 }) } let m = [{ offset: "0%", color: "rgb(250, 250, 250)", opacity: 1 }, { offset: "50%", color: "rgb(250, 250, 250)", opacity: .95 }, { offset: "100%", color: "rgb(250, 250, 250)", opacity: .85 }]; Aa("overlay-gradient-left", m), m = [{ offset: "0%", color: "rgb(250, 250, 250)", opacity: .85 }, { offset: "50%", color: "rgb(250, 250, 250)", opacity: .95 }, { offset: "100%", color: "rgb(250, 250, 250)", opacity: 1 }], Aa("overlay-gradient-right", m), rl("overlay-gradient-left", ja[0][0].x - Xa / 2, 0, p - ja[0][0].x + Xa, n + Oa.top + Oa.bottom), rl("overlay-gradient-right", y - Xa / 2, 0, l - y + Xa, n + Oa.top + Oa.bottom); let { intermediateLayer: f, intermediateMinMax: x, kernelRange: v, kernelMinMax: b } = ll(t, d, ja[t][0].x, y, c, e, a, s, r, i); sl(t, a, d, c, 5, s, r, i); let $ = { min: Math.min(u.min, x.min), max: Math.max(u.max, x.max) }, w = Ga.append("g").attr("class", "intermediate-layer-annotation").style("opacity", 0); nl({ leftX: d, curLayerIndex: t, group: w, intermediateGap: c, i: a }), Ea({ legendHeight: 5, curLayerIndex: t, range: g, group: f, minMax: $, width: 2 * Ca + c, x: d, y: Oa.top + 10 * Ta + Ta + 10 * Ca }), Ea({ legendHeight: 5, curLayerIndex: t, range: v, minMax: b, group: f, width: 2 * Ca + c, x: o + Ca - (2 * Ca + c), y: Oa.top + 10 * Ta + Ta + 10 * Ca, gradientAppendingName: "kernelColorGradient", colorScale: Sa.weight, gradientGap: .2 }), Ga.selectAll("g.intermediate-layer, g.intermediate-layer-annotation").transition().delay(500).duration(500).ease(d3.easeCubicInOut).style("opacity", 1) }, ul = Ve.layerColorScales, pl = Ve.nodeLength, hl = Ve.plusSymbolRadius, yl = Ve.intermediateColor, ml = Ve.kernelRectLength, fl = Ve.svgPaddings, xl = Ve.gapRatio, vl = Ve.classLists, bl = d3.format(".4f"); let $l = void 0; Q.subscribe(t => { $l = t }); let wl = void 0; Z.subscribe(t => { wl = t }); let kl = void 0; tt.subscribe(t => { kl = t }); let Il = void 0; J.subscribe(t => { Il = t }); let Ll = void 0; et.subscribe(t => { Ll = t }); let Ml = void 0; at.subscribe(t => { Ml = t }); let Al = void 0; lt.subscribe(t => { Al = t }); let El = void 0; nt.subscribe(t => { El = t }); let Rl = void 0; ot.subscribe(t => { Rl = t }); let Sl = void 0; ct.subscribe(t => { Sl = t }); let Cl = void 0; dt.subscribe(t => { Cl = t }); let Nl = void 0; gt.subscribe(t => { Nl = t }); let Hl = void 0; rt.subscribe(t => { Hl = t }); let _l = 10, Pl = 11, Ol = !1, Bl = [], Xl = {}; const zl = (t, e, a, l, n, s) => { let r = d3.select(a[e]); if (s) { let t = +r.attr("data-preX"), e = +r.attr("data-preY"); r.transition("softmax").duration(n).ease(d3.easeCubicInOut).attr("transform", `translate(${t}, ${e})`) } else { let t = r.attr("transform"), e = +t.replace(/.*\(([\d\.]+),.*/, "$1"), a = +t.replace(/.*,\s([\d\.]+)\)/, "$1"); r.transition("softmax").duration(n).ease(d3.easeCubicInOut).attr("transform", `translate(${e - l}, ${a})`), r.attr("data-preX", e), r.attr("data-preY", a) } }, Fl = t => { gt.set({ show: !0, text: "Logit: " + bl(Bl[t]) }), Cl.highlightI = t, dt.set(Cl); let e = $l.select(".logit-layer"), a = $l.select(".underneath"), l = $l.select(".intermediate-layer"); e.select("#logit-circle-" + t).style("stroke-width", 2), l.select("#plus-symbol-clone-" + t).style("opacity", 1).select("circle").style("fill", t => t.fill), a.select("#logit-lower-" + t).raise(), a.selectAll(".softmax-abstract-edge-" + t).style("stroke-width", .8).style("stroke", "#E0E0E0"), a.selectAll(".softmax-edge-" + t).style("stroke-width", 1).style("stroke", "#E0E0E0"), a.selectAll(".logit-output-edge-" + t).style("stroke-width", 3).style("stroke", "#E0E0E0"), e.selectAll(".logit-output-edge-" + t).style("stroke-width", 3).style("stroke", "#E0E0E0") }, Gl = t => { gt.set({ show: !1, text: "Logit: " + bl(Bl[t]) }), Cl.highlightI = -1, dt.set(Cl); let e = $l.select(".logit-layer"), a = $l.select(".underneath"), l = $l.select(".intermediate-layer"); e.select("#logit-circle-" + t).style("stroke-width", 1), l.select("#plus-symbol-clone-" + t).style("opacity", .2), a.selectAll(".softmax-abstract-edge-" + t).style("stroke-width", .2).style("stroke", "#EDEDED"), a.selectAll(".softmax-edge-" + t).style("stroke-width", .2).style("stroke", "#F1F1F1"), a.selectAll(".logit-output-edge-" + t).style("stroke-width", 1.2).style("stroke", "#E5E5E5"), e.selectAll(".logit-output-edge-" + t).style("stroke-width", 1.2).style("stroke", "#E5E5E5") }, Tl = t => { Fl(t.detail.curI) }, Vl = t => { Gl(t.detail.curI) }, ql = t => { let e = t.curLayerIndex, a = t.moveX, l = t.symbolX, n = t.symbolY, s = t.outputX, r = t.outputY, i = t.softmaxLeftMid, o = t.selectedI, d = t.intermediateX1, c = t.intermediateX2, g = t.pixelWidth, u = t.pixelHeight, p = t.topY, h = t.bottomY, y = t.middleGap, m = t.middleRectHeight, f = t.softmaxX, x = t.softmaxTextY, v = t.softmaxWidth, b = t.symbolGroup, $ = t.flattenRange, w = i - 4 * a / 5; d3.event.stopPropagation(), Rl ? (ct.set(!1), $l.select(".logit-layer").remove(), $l.select(".logit-layer-lower").remove(), $l.selectAll(".plus-symbol-clone").remove(), $l.select(".underneath").selectAll(".logit-lower").style("opacity", 0), dt.set({ show: !1, logits: [] })) : ct.set(!0), $l.select(".intermediate-layer-overlay").select("rect.overlay").transition("softmax").ease(d3.easeCubicInOut).duration(600).attr("transform", `translate(${Rl ? 0 : -a}, 0)`), $l.selectAll(".intermediate-legend-" + (e - 1)).each((t, e, l) => zl(0, e, l, a, 600, Rl)), $l.select(".intermediate-layer").select(".layer-label").each((t, e, l) => zl(0, e, l, a, 600, Rl)), $l.select(".intermediate-layer").select(".layer-detailed-label").each((t, e, l) => zl(0, e, l, a, 600, Rl)); for (let t = e - 1; t >= 0; t--) { let e = +$l.select("g#cnn-layer-group-" + t).select("image").attr("x"); Ma({ layerIndex: t, targetX: Rl ? e + a : e - a, disable: !0, delay: 0, transitionName: "softmax", duration: 600 }) } $l.select(".plus-annotation").transition("softmax").duration(600).style("opacity", Rl ? 1 : 0).style("pointer-events", Rl ? "all" : "none"); let k = $l.select(".softmax-annotation").style("pointer-events", Rl ? "all" : "none"), I = k.selectAll(".softmax-detail-annoataion").data([0]).enter().append("g").attr("class", "softmax-detail-annoataion"); Rl && k.selectAll(".softmax-detail-annoataion").remove(), k.select(".arrow-group").transition("softmax").duration(600).style("opacity", Rl ? 1 : 0), k.select(".annotation-text").style("cursor", "help").style("pointer-events", "all").on("click", () => { d3.event.stopPropagation(), document.querySelector("#article-softmax").scrollIntoView({ behavior: "smooth" }) }).transition("softmax").duration(600).style("opacity", Rl ? 1 : 0).on("end", () => { if (!Rl) { let t = f + v / 2, a = x - 10; 0 === o && (a = x + 70); let l = I.append("text").attr("x", t).attr("y", a).attr("class", "annotation-text softmax-detail-text").style("dominant-baseline", "baseline").style("text-anchor", "middle").text("Normalize "); l.append("tspan").attr("dx", 1).style("fill", "#E56014").text("logits"), l.append("tspan").attr("dx", 1).text(" into"), l.append("tspan").attr("x", t).attr("dy", "1.1em").text("class probabilities"), Ra(0 === o ? { group: I, sx: f + v / 2 - 5, sy: x + 44, tx: f + v / 2, ty: a - 12, dr: 50, hFlip: !0, marker: "marker-alt" } : { group: I, sx: f + v / 2 - 5, sy: x + 4, tx: f + v / 2, ty: n - hl - 4, dr: 50, hFlip: !0, marker: "marker-alt" }), t = w + 45, a = (fl.top + wl) / 2 + 5; let s = w + 20, r = (fl.top + wl) / 2 + 5; I.append("g").attr("class", "layer-detailed-label").attr("transform", () => `translate(${w}, ${(fl.top + wl) / 2 - 5})`).classed("hidden", !Hl).append("text").style("opacity", .7).style("dominant-baseline", "middle").style("font-size", "12px").style("font-weight", "800").append("tspan").attr("x", 0).text("logit").append("tspan").attr("x", 0).style("font-size", "8px").style("font-weight", "normal").attr("dy", "1.5em").text("(10)"), I.append("text").attr("class", "annotation-text").attr("x", t).attr("y", (fl.top + wl) / 2 + 3).style("text-anchor", "start").text("Before").append("tspan").attr("x", t).attr("dy", "1em").text("normalization"), Ra({ group: I, tx: s, ty: r, sx: t - 6, sy: a + 2, dr: 60, hFlip: !1, marker: "marker-alt" }), I.append("text").attr("class", "annotation-text").attr("x", Ll[Pl][0].x - 35).attr("y", (fl.top + wl) / 2 + 3).style("text-anchor", "end").text("After").append("tspan").attr("x", Ll[Pl][0].x - 35).attr("dy", "1em").text("normalization"), Ra({ group: I, tx: Ll[Pl][0].x - 8, ty: r, sx: Ll[Pl][0].x - 27, sy: a + 2, dr: 60, hFlip: !0, marker: "marker-alt" }); for (let t = 0; t < 10; t++)I.append("text").attr("x", w).attr("y", Ll[e - 1][t].y + pl / 2 + 8).attr("class", "annotation-text softmax-detail-text").attr("id", "logit-text-" + t).style("text-anchor", "middle").style("dominant-baseline", "hanging").style("opacity", 0).text("" + vl[t]); let i = I.append("g").attr("class", "softmax-detail-hover-annotation").style("opacity", 0); t = w + 50, a = Ll[e - 1][0].y + pl / 2, o < 3 && (a = Ll[e - 1][9].y + pl / 2); let d = i.append("text").attr("x", t).attr("y", a).attr("class", "annotation-text softmax-detail-text softmax-hover-text").style("text-anchor", "start").style("dominant-baseline", "baseline").append("tspan").style("font-weight", 700).style("dominant-baseline", "baseline").text("Hover over ").append("tspan").style("font-weight", 400).style("dominant-baseline", "baseline").text("to see"); d.append("tspan").style("dominant-baseline", "baseline").attr("x", t).attr("dy", "1em").text("its "), d.append("tspan").style("dominant-baseline", "baseline").attr("dx", 1).style("fill", "#E56014").text("logit"), d.append("tspan").style("dominant-baseline", "baseline").attr("dx", 1).text(" value"), Ra({ group: i, tx: w + 15, ty: a, sx: t - 8, sy: a + 2, dr: 60, hFlip: !1 }) } }), $l.select(".flatten-annotation").transition("softmax").duration(600).style("opacity", Rl ? 1 : 0).style("pointer-events", Rl ? "all" : "none"); let L = $l.select(".flatten-layer-left"); L.transition("softmax").duration(600).ease(d3.easeCubicInOut).attr("transform", `translate(${Rl ? 0 : -a}, 0)`).on("end", () => { if (!Rl) { (t => { let e = t.curLayerIndex, a = t.moveX, l = t.softmaxLeftMid, n = t.selectedI, s = t.intermediateX1, r = t.intermediateX2, i = t.pixelWidth, o = t.pixelHeight, d = t.topY, c = t.bottomY, g = t.softmaxX, u = t.middleGap, p = t.middleRectHeight, h = t.symbolGroup, y = t.symbolX, m = t.flattenRange, f = $l.select(".intermediate-layer").append("g").attr("class", "logit-layer").raise(), x = $l.select(".intermediate-layer").select(".flatten-layer").select(".plus-symbol").clone(!0).attr("class", "temp-clone-plus-symbol").attr("transform", `translate(${y - a},\n      ${Ll[e][n].y + pl / 2})`).style("pointer-events", "none").remove(), v = f.append(() => x.node()); $l.select(".softmax-symbol").raise(); let b = $l.select(".underneath").append("g").attr("class", "logit-layer-lower").lower(), $ = l - 4 * a / 5; Bl = []; for (let t = 0; t < Il[Pl].length; t++)Bl.push(Il[Pl][t].logit); let w = d3.scaleLinear().domain(d3.extent(Bl)).range([.2, 1]); f.append("circle").attr("class", "logit-circle").attr("id", "logit-circle-" + n).attr("cx", $).attr("cy", Ll[e - 1][n].y + pl / 2).attr("r", 8).style("fill", ul.logit(w(Bl[n]))).style("cursor", "crosshair").style("pointer-events", "all").style("stroke", yl).on("mouseover", () => Fl(n)).on("mouseleave", () => Gl(n)).on("click", () => { d3.event.stopPropagation() }); let k = $l.select(".intermediate-layer-annotation").select(".softmax-detail-annoataion"); k.select("#logit-text-" + n).style("opacity", 1), v.raise(), f.append("line").attr("class", "logit-output-edge-" + n).attr("x1", r - a + 2 * hl).attr("x2", g).attr("y1", Ll[e - 1][n].y + pl / 2).attr("y2", Ll[e - 1][n].y + pl / 2).style("fill", "none").style("stroke", "#EAEAEA").style("stroke-width", "1.2").lower(); let I = [], L = Il.flatten.length / Il[1].length, M = [...Array(Il[Pl].length).keys()].filter(t => t != n), A = 0, E = d3.linkHorizontal().x(t => t.x).y(t => t.y); const R = () => { if (!Sl) return void $l.select(".underneath").selectAll(".logit-lower").remove(); let t = M[A], l = $l.select(".underneath").select("#logit-lower-" + t); if (l.empty()) { l = $l.select(".underneath").append("g").attr("class", "logit-lower").attr("id", "logit-lower-" + t).style("opacity", 0); for (let l = 0; l < L; l += 3) { [0, 9].forEach(n => { let g = l + n * L; I.push({ source: { x: s + i + 3 - a, y: 0 === n ? d + l * o : c + l * o }, target: { x: r - a, y: Ll[e][t].y + pl / 2 }, index: g, weight: Il.flatten[g].outputLinks[t].weight, color: "#F1F1F1", width: .5, opacity: 1, class: "softmax-edge-" + t }) }) } for (let l = 0; l < Il[Pl].length - 2; l++)I.push({ source: { x: s + i + 3 - a, y: d + L * o + u * (l + 1) + p * (l + .5) }, target: { x: r - a, y: Ll[e][t].y + pl / 2 }, index: -1, color: "#EDEDED", width: .5, opacity: 1, class: "softmax-abstract-edge-" + t }); l.selectAll("path.softmax-edge-" + t).data(I).enter().append("path").attr("class", t => t.class).attr("id", t => "edge-" + t.name).attr("d", t => E({ source: t.source, target: t.target })).style("fill", "none").style("stroke-width", t => t.width).style("stroke", t => void 0 === t.color ? yl : t.color).style("opacity", t => t.opacity).style("pointer-events", "none") } let x = f.append("g").attr("class", "logit-layer-" + t).style("opacity", 0), v = h.clone(!0).style("opacity", 0); v.attr("class", "plus-symbol-clone").attr("id", "plus-symbol-clone-" + t).select("circle").datum({ fill: Ke(ul.weight, m, Il[Pl][t].bias, .35) }).style("pointer-events", "none").style("fill", "#E5E5E5"), v.attr("transform", `translate(${y},\n      ${Ll[e][t].y + pl / 2})`); let S = E({ source: { x: r - a + 2 * hl, y: Ll[e][t].y + pl / 2 }, target: { x: $ + 8, y: Ll[e][t].y + pl / 2 } }), C = E({ source: { x: $ + 8, y: Ll[e][t].y + pl / 2 }, target: { x: g, y: Ll[e][n].y + pl / 2 } }), N = b.append("path").attr("class", "logit-output-edge-" + t).attr("d", S).style("fill", "none").style("stroke", "#EAEAEA").style("stroke-width", "1.2"), H = b.append("path").attr("class", "logit-output-edge-" + t).attr("d", C).style("fill", "none").style("stroke", "#EAEAEA").style("stroke-width", "1.2"), _ = N.node().getTotalLength(), P = H.node().getTotalLength(), O = _ + P, B = Ol ? 500 : 800, X = Ol ? 400 : 600; N.attr("stroke-dasharray", _ + " " + _).attr("stroke-dashoffset", _), H.attr("stroke-dasharray", P + " " + P).attr("stroke-dashoffset", P), N.transition("softmax-output-edge").duration(_ / O * B).attr("stroke-dashoffset", 0), H.transition("softmax-output-edge").delay(_ / O * B).duration(P / O * B).attr("stroke-dashoffset", 0), x.append("circle").attr("class", "logit-circle").attr("id", "logit-circle-" + t).attr("cx", $).attr("cy", Ll[e - 1][t].y + pl / 2).attr("r", 7).style("fill", ul.logit(w(Bl[t]))).style("stroke", yl).style("cursor", "crosshair").on("mouseover", () => Fl(t)).on("mouseleave", () => Gl(t)).on("click", () => { d3.event.stopPropagation() }), Cl.startAnimation = { i: t, duration: X, hasInitialized: !1 }, dt.set(Cl), x.transition("softmax-edge").duration(X).style("opacity", 1), (n < 3 && 9 == t || n >= 3 && 0 == t) && k.select(".softmax-detail-hover-annotation").transition("softmax-edge").duration(X).style("opacity", 1), k.select("#logit-text-" + t).transition("softmax-edge").duration(X).style("opacity", 1), l.transition("softmax-edge").duration(X).style("opacity", 1).on("end", () => { A++, A < M.length ? (I = [], R()) : (Ol = !0, Cl.hasInitialized = !0, dt.set(Cl)) }), v.transition("softmax-edge").duration(X).style("opacity", .2) }; let S = $l.select(".intermediate-layer").select(".layer-label").node(), C = ((t, e) => { if (void 0 !== t) { let a = e; for (; null == a.getScreenCTM && null != a.parentNode;)a = a.parentNode; let l = t.node().ownerSVGElement.createSVGPoint(), n = a.getScreenCTM(), s = a.getBBox().height; l.x += 0, l.y -= s / 2; let r = l.matrixTransform(n); return { top: r.y, left: r.x } } })($l, S), N = 100 + +d3.select("#cnn-svg").style("height").replace("px", "") / 2 - 96; const H = document.getElementById("detailview"); H.style.top = N + "px", H.style.left = C.left - 490 - 50 + "px", H.style.position = "absolute", dt.set({ show: !0, logits: Bl, logitColors: Bl.map(t => ul.logit(w(t))), selectedI: n, highlightI: -1, outputName: vl[n], outputValue: Il[Pl][n].output, startAnimation: { i: -1, duration: 0, hasInitialized: Ol } }), R(), Ea({ legendHeight: 5, curLayerIndex: e, range: d3.extent(Bl)[1] - d3.extent(Bl)[0], minMax: { min: d3.extent(Bl)[0], max: d3.extent(Bl)[1] }, group: f, width: g - (r + 2 * hl - a + 5), gradientAppendingName: "flatten-logit-gradient", gradientGap: .1, colorScale: ul.logit, x: r + 2 * hl - a + 5, y: fl.top + 10 * wl + wl + 10 * pl }), f.append("g").attr("class", "layer-label").classed("hidden", Hl).attr("transform", () => `translate(${$}, ${(fl.top + wl) / 2 + 5})`).append("text").style("text-anchor", "middle").style("dominant-baseline", "middle").style("opacity", .8).style("font-weight", 800).text("logit") })({ curLayerIndex: e, moveX: a, softmaxLeftMid: i, selectedI: o, intermediateX1: d, intermediateX2: c, pixelWidth: g, pixelHeight: u, topY: p, bottomY: h, middleGap: y, middleRectHeight: m, softmaxX: f, symbolGroup: b, symbolX: l, flattenRange: $ }) } if (Rl) L.select(".symbol-output-line").remove(); else { L.select(".edge-group").append("line").attr("class", "symbol-output-line").attr("x1", l).attr("y1", n).attr("x2", s + a).attr("y2", r).style("stroke-width", 1.2).style("stroke", "#E5E5E5").style("opacity", 0).transition("softmax").delay(200).duration(400).style("opacity", 1) } Rl = !Rl, ot.set(Rl) }) }, jl = (t, e, a, l, n) => { $l.selectAll(".output-legend").classed("hidden", !1); let s = pl / 2, r = 2 * pl + 5.5 * kl * xl + s, i = Ll[t][0].x - r, o = kl * xl * 4 / 2; let d = d3.linkHorizontal().x(t => t.x).y(t => t.y); $l.select("g.edge-group").style("visibility", "hidden"), Ma({ layerIndex: t - 1, targetX: i, disable: !0, delay: 0 }), Ma({ layerIndex: t, targetX: Ll[t][0].x, disable: !0, delay: 0, opacity: .15, specialIndex: a }); let c = (i - kl - Ll[0][0].x - 10 * pl) / 10; if (c > 20) for (let e = 0; e < t - 1; e++) { let t = Ll[0][0].x + e * (pl + c); Ma({ layerIndex: e, targetX: t, disable: !0, delay: 0 }) } else { c = 20; let e = i - 2 * c - pl; for (let a = t - 2; a >= 0; a--)Ma({ layerIndex: a, targetX: e, disable: !0, delay: 0 }), e = e - c - pl } Aa("overlay-gradient-left", [{ offset: "0%", color: "rgb(250, 250, 250)", opacity: 1 }, { offset: "50%", color: "rgb(250, 250, 250)", opacity: .95 }, { offset: "100%", color: "rgb(250, 250, 250)", opacity: .85 }]); let g = $l.append("g").attr("class", "intermediate-layer-overlay"); g.append("rect").attr("class", "overlay").style("fill", "url(#overlay-gradient-left)").style("stroke", "none").attr("width", i + fl.left - 2 * c + 3).attr("height", n + fl.top + fl.bottom).attr("x", -fl.left).attr("y", 0).style("opacity", 0), g.selectAll("rect.overlay").transition("move").duration(800).ease(d3.easeCubicInOut).style("opacity", 1); let u = $l.append("g").attr("class", "intermediate-layer").style("opacity", 0), p = i + pl + o, h = p + o + s, y = Al[Ml][t - 1], m = ul.conv, f = Il.flatten.length / Il[1].length, x = [], v = u.append("g").attr("class", "flatten-layer").append("g").attr("class", "flatten-layer-left"), b = Ll[t - 1][0].y, $ = Ll[t - 1][9].y + pl - 1.1 * f, w = Il[t - 1][0].output.length, k = pl / (2 * w), I = pl / w, L = d3.extent(Il.flatten.slice(f).map(t => t.outputLinks[a].weight).concat(Il.flatten.slice(9 * f, 10 * f).map(t => t.outputLinks[a].weight))), M = Math.round(1e3 * Math.max(...L.map(Math.abs))) / 1e3 * 2, A = t => { let e = t.index; Nl = void 0 === t.weight ? { show: !0, text: "Pixel value: " + bl(Xl[e]) } : { show: !0, text: "Weight: " + bl(t.weight) }, gt.set(Nl), v.select("#edge-flatten-" + e).raise().style("stroke", yl).style("stroke-width", 1), v.select(`#edge-flatten-${e}-output`).raise().style("stroke-width", 1).style("stroke", t => Ke(ul.weight, M, t.weight, .1)), v.select("#bounding-" + e).raise().style("opacity", 1) }, E = t => { let e = t.index; Nl = void 0 === t.weight ? { show: !1, text: "Pixel value: " + bl(Xl[e]) } : { show: !1, text: "Weight: " + bl(t.weight) }, gt.set(Nl), v.select("#edge-flatten-" + e).style("stroke-width", .6).style("stroke", "#E5E5E5"), v.select(`#edge-flatten-${e}-output`).style("stroke-width", .6).style("stroke", t => Ke(ul.weight, M, t.weight, .35)), v.select("#bounding-" + e).raise().style("opacity", 0) }; Xl = {}; for (let e = 0; e < f; e++) { [0, 9].forEach(l => { let n = e + l * f; Xl[n] = Il.flatten[n].output, v.append("rect").attr("x", p).attr("y", 0 === l ? b + 1.1 * e : $ + 1.1 * e).attr("width", s).attr("height", 1.1).style("cursor", "crosshair").style("fill", m((Il.flatten[n].output + y / 2) / y)).on("mouseover", () => A({ index: n })).on("mouseleave", () => E({ index: n })).on("click", () => { d3.event.stopPropagation() }), x.push({ source: { x: p + s + 3, y: 0 === l ? b + 1.1 * e : $ + 1.1 * e }, target: { x: h, y: Ll[t][a].y + pl / 2 }, index: n, weight: Il.flatten[n].outputLinks[a].weight, name: `flatten-${n}-output`, color: Ke(ul.weight, M, Il.flatten[n].outputLinks[a].weight, .35), width: .6, opacity: 1, class: "flatten-output" }); let r = Math.floor(e / w); x.push({ target: { x: p - 3, y: 0 === l ? b + 1.1 * e : $ + 1.1 * e }, source: { x: i + pl + 3, y: Ll[t - 1][l].y + (2 * r + 1) * k }, index: n, name: "flatten-" + n, color: "#E5E5E5", width: .6, opacity: 1, class: "flatten" }); let o = Il.flatten[n].inputLinks[0].weight; v.append("rect").attr("id", "bounding-" + n).attr("class", "flatten-bounding").attr("x", i + o[1] * I).attr("y", Ll[t - 1][l].y + o[0] * I).attr("width", I).attr("height", I).style("fill", "none").style("stroke", yl).style("stroke-length", "0.5").style("pointer-events", "all").style("cursor", "crosshair").style("opacity", 0).on("mouseover", () => A({ index: n })).on("mouseleave", () => E({ index: n })).on("click", () => { d3.event.stopPropagation() }) }) } let R = []; for (let e = 1; e < Il[t - 1].length - 1; e++)R.push({ index: e }); let S = (10 * pl + 9 * wl - 1.1 * f * 2 - 45) / 8; R.forEach((e, l) => { v.append("rect").attr("x", p + s / 4).attr("y", b + 1.1 * f + 5 * (l + 1) + S * l).attr("width", s / 2).attr("height", S).style("fill", "#E5E5E5"), v.append("polyline").attr("points", `${i + pl + 3}\n        ${Ll[t - 1][e.index].y},\n        ${i + pl + 10}\n        ${Ll[t - 1][e.index].y + pl / 2},\n        ${i + pl + 3}\n        ${Ll[t - 1][e.index].y + pl}`).style("fill", "#E5E5E5").style("opacity", 1), x.push({ source: { x: i + pl + 10, y: Ll[t - 1][e.index].y + pl / 2 }, target: { x: p - 3, y: b + 1.1 * f + 5 * (l + 1) + S * (l + .5) }, index: -1, width: 1, opacity: 1, name: "flatten-abstract-" + e.index, color: "#E5E5E5", class: "flatten-abstract" }), x.push({ source: { x: p + s + 3, y: b + 1.1 * f + 5 * (l + 1) + S * (l + .5) }, target: { x: h, y: Ll[t][a].y + pl / 2 }, index: -1, name: `flatten-abstract-${e.index}-output`, color: "#E5E5E5", weight: e.weight, width: 1, opacity: 1, class: "flatten-abstract-output" }) }); let C = h + hl, N = Ll[t][a].y + pl / 2, H = v.append("g").attr("class", "plus-symbol").attr("transform", `translate(${C}, ${N})`); H.append("rect").attr("x", -hl).attr("y", -hl).attr("width", 2 * hl).attr("height", 2 * hl).attr("rx", 3).attr("ry", 3).style("fill", "none").style("stroke", yl), H.append("rect").attr("x", -(hl - 3)).attr("y", -.5).attr("width", 2 * (hl - 3)).attr("height", 1).style("fill", yl), H.append("rect").attr("x", -.5).attr("y", -(hl - 3)).attr("width", 1).attr("height", 2 * (hl - 3)).style("fill", yl), H.append("circle").attr("cx", 0).attr("cy", -pl / 2 - .5 * ml).attr("r", 1.5 * ml).style("stroke", yl).style("cursor", "crosshair").style("fill", Ke(ul.weight, M, e.bias, .35)).on("mouseover", () => { gt.set({ show: !0, text: "Bias: " + bl(e.bias) }) }).on("mouseleave", () => { gt.set({ show: !1, text: "Bias: " + bl(e.bias) }) }).on("click", () => { d3.event.stopPropagation() }), H.append("path").attr("d", d({ source: { x: 0, y: 0 }, target: { x: 0, y: -pl / 2 - .5 * ml } })).attr("id", "bias-plus").attr("stroke-width", 1.2).attr("stroke", "#E5E5E5").lower(), x.push({ source: De({ x: h + 2 * hl - pl, y: Ll[t][a].y }), target: We({ x: Ll[t][a].x - 3, y: Ll[t][a].y }), name: "symbol-output", width: 1.2, color: "#E5E5E5" }); let _ = (r - 2 * pl - 2 * o - 55) / 2, P = h + 2 * hl, O = _ + P, B = _ / 2 + P, X = Ll[t][a].y - 2 * ml - 6, z = { curLayerIndex: t, moveX: 2 * (h - (p + s + 3)) / 3, symbolX: C, symbolY: N, outputX: Ll[t][a].x, outputY: N, softmaxLeftMid: B, selectedI: a, intermediateX1: p, intermediateX2: h, pixelWidth: s, pixelHeight: 1.1, topY: b, bottomY: $, middleGap: 5, middleRectHeight: S, softmaxX: O, softmaxWidth: 55, softmaxTextY: X, symbolGroup: H, flattenRange: M }, F = u.append("g").attr("class", "softmax-symbol").attr("transform", `translate(${O}, ${N})`).style("pointer-event", "all").style("cursor", "pointer").on("click", () => ql(z)); F.append("rect").attr("x", 0).attr("y", -hl).attr("width", 55).attr("height", 2 * hl).attr("stroke", yl).attr("rx", 2).attr("ry", 2).attr("fill", "#FAFAFA"), F.append("text").attr("x", 5).attr("y", 1).style("dominant-baseline", "middle").style("font-size", "12px").style("opacity", .5).text("softmax"), u.append("g").attr("class", "layer-label").classed("hidden", Hl).attr("transform", () => `translate(${i + pl + (4 * kl * xl + s) / 2}, ${(fl.top + wl) / 2 + 5})`).style("cursor", "help").on("click", () => { d3.event.stopPropagation(), document.querySelector("#article-flatten").scrollIntoView({ behavior: "smooth" }) }).append("text").style("dominant-baseline", "middle").style("opacity", .8).style("font-weight", 800).text("flatten"); let G = Number(d3.select("#cnn-svg").style("height").replace("px", "")) + 150, T = new SmoothScroll('a[href*="#"]', { offset: -G }), V = u.append("g").attr("transform", () => `translate(${i + pl + (4 * kl * xl + s) / 2}, ${(fl.top + wl) / 2 - 5})`).attr("class", "layer-detailed-label").classed("hidden", !Hl).style("cursor", "help").on("click", () => { d3.event.stopPropagation(); let t = document.querySelector("#article-flatten"); T.animateScroll(t) }); V.append("title").text("Move to article section"); let q = V.append("text").style("text-anchor", "middle").style("dominant-baseline", "middle").style("opacity", "0.7").style("font-weight", 800).append("tspan").text("flatten"), j = Il[_l].length * Il[_l][0].output.length * Il[_l][0].output[0].length; q.append("tspan").attr("x", 0).attr("dy", "1.5em").style("font-size", "8px").style("font-weight", "normal").text(`(${j})`); let D = v.append("g").attr("class", "edge-group").lower(); D.selectAll("path").data(x).enter().append("path").attr("class", t => t.class).attr("id", t => "edge-" + t.name).attr("d", t => d({ source: t.source, target: t.target })).style("fill", "none").style("stroke-width", t => t.width).style("stroke", t => void 0 === t.color ? yl : t.color).style("opacity", t => t.opacity), D.selectAll("path.flatten-abstract-output").lower(), D.selectAll("path.flatten,path.flatten-output").style("cursor", "crosshair").style("pointer-events", "all").on("mouseover", A).on("mouseleave", E).on("click", () => { d3.event.stopPropagation() }), Ea({ legendHeight: 5, curLayerIndex: t, range: y, minMax: El[10], group: u, width: o + pl - 3, x: i, y: fl.top + 10 * wl + wl + 10 * pl }), Ea({ legendHeight: 5, curLayerIndex: t, range: M, minMax: { min: L[0], max: L[1] }, group: u, width: o - 3 - 5, gradientAppendingName: "flatten-weight-gradient", gradientGap: .1, colorScale: ul.weight, x: i + o + pl + s + 3, y: fl.top + 10 * wl + wl + 10 * pl }); let W = $l.append("g").attr("class", "intermediate-layer-annotation").style("opacity", 0), K = W.append("g").attr("class", "plus-annotation"), Y = h, U = Ll[t][a].y + pl + 3 * ml, J = Ll[t][a].y + pl + 2 * ml, Q = Ll[t][a].y + pl / 2 + hl; 9 == a && (U -= 110, J -= 70, Q -= 18); let Z = K.append("text").attr("x", Y).attr("y", U).attr("class", "annotation-text").style("dominant-baseline", "hanging").style("text-anchor", "middle"); Z.append("tspan").style("dominant-baseline", "hanging").text("Add up all products"), Z.append("tspan").attr("x", Y).attr("dy", "1em").style("dominant-baseline", "hanging").text("("), Z.append("tspan").style("fill", "#66a3c8").style("dominant-baseline", "hanging").text("element"), Z.append("tspan").style("dominant-baseline", "hanging").text(" × "), Z.append("tspan").style("dominant-baseline", "hanging").style("fill", "#b58946").text("weight"), Z.append("tspan").style("dominant-baseline", "hanging").text(")"), Z.append("tspan").attr("x", Y).attr("dy", "1em").style("dominant-baseline", "hanging").text("and then "), Z.append("tspan").style("dominant-baseline", "hanging").style("fill", "#479d94").text("bias"), Ra({ group: K, sx: h - 2 * hl - 3, sy: J, tx: h - 5, ty: Q, dr: 30, hFlip: 9 === a, marker: "marker-alt" }); let tt = Ll[t][a].y; tt -= 2 * ml + 4, v.append("text").attr("class", "annotation-text").attr("x", h + hl).attr("y", tt).style("text-anchor", "middle").style("dominant-baseline", "baseline").text("Bias"); let et = W.append("g").attr("class", "softmax-annotation"); et.append("text").attr("x", O + 27.5).attr("y", X).attr("class", "annotation-text").style("dominant-baseline", "baseline").style("text-anchor", "middle").style("font-weight", 700).text("Click ").append("tspan").attr("dx", 1).style("font-weight", 400).text("to learn more"), Ra({ group: et, sx: O + 27.5 - 5, sy: X + 4, tx: O + 27.5, ty: N - hl - 4, dr: 50, hFlip: !0 }); let at = W.append("g").attr("class", "flatten-annotation"); Y = i - 80, U = Ll[t - 1][0].y; let lt = at.append("text").attr("x", Y).attr("y", U).attr("class", "annotation-text").style("dominant-baseline", "hanging").style("text-anchor", "middle"); lt.append("tspan").style("dominant-baseline", "hanging").style("font-weight", 700).text("Hover over ").append("tspan").attr("dx", 1).style("font-weight", 400).style("dominant-baseline", "hanging").text("matrix to"), lt.append("tspan").style("dominant-baseline", "hanging").attr("x", Y).attr("dy", "1em").text("see how it is flattened"), lt.append("tspan").style("dominant-baseline", "hanging").attr("x", Y).attr("dy", "1em").text("into a 1D array!"), Ra({ group: at, sx: Y + 45, sy: U + .4 * pl + 12, tx: i - 10, ty: U + pl / 2, dr: 80, hFlip: !0 }), U = Ll[t - 1][1].y; let nt = at.append("text").attr("x", Y).attr("y", U).attr("class", "annotation-text").style("dominant-baseline", "hanging").style("text-anchor", "middle"); nt.append("tspan").style("dominant-baseline", "hanging").text("Same flattening"), nt.append("tspan").style("dominant-baseline", "hanging").attr("x", Y).attr("dy", "1em").text("operation for"), nt.append("tspan").style("dominant-baseline", "hanging").attr("x", Y).attr("dy", "1em").text("each neuron"), Ra({ group: at, sx: Y + 39, sy: U + 25, tx: i - 10, ty: U + pl / 2 - 2, dr: 80, hFlip: !0, marker: "marker-alt" }), W.append("g").attr("class", "output-annotation").append("text").attr("x", Ll[Pl][a].x).attr("y", Ll[Pl][a].y + 10).attr("class", "annotation-text").text(`(${d3.format(".4f")(Il[Pl][a].output)})`), $l.selectAll("g.intermediate-layer, g.intermediate-layer-annotation").transition().delay(500).duration(500).ease(d3.easeCubicInOut).style("opacity", 1) }; function Dl(t) { let e, a; return e = new ue({ props: { logits: t[0].logits, logitColors: t[0].logitColors, selectedI: t[0].selectedI, highlightI: t[0].highlightI, outputName: t[0].outputName, outputValue: t[0].outputValue, startAnimation: t[0].startAnimation } }), e.$on("xClicked", t[12]), e.$on("mouseOver", Tl), e.$on("mouseLeave", Vl), { c() { V(e.$$.fragment) }, m(t, l) { q(e, t, l), a = !0 }, p(t, a) { const l = {}; 1 & a[0] && (l.logits = t[0].logits), 1 & a[0] && (l.logitColors = t[0].logitColors), 1 & a[0] && (l.selectedI = t[0].selectedI), 1 & a[0] && (l.highlightI = t[0].highlightI), 1 & a[0] && (l.outputName = t[0].outputName), 1 & a[0] && (l.outputValue = t[0].outputValue), 1 & a[0] && (l.startAnimation = t[0].startAnimation), e.$set(l) }, i(t) { a || (G(e.$$.fragment, t), a = !0) }, o(t) { T(e.$$.fragment, t), a = !1 }, d(t) { j(e, t) } } } function Wl(t) { let e, a; return e = new oe({ props: { input: t[2][0].input, kernelLength: 2, dataRange: t[2].colorRange, isExited: t[4] } }), e.$on("message", t[10]), { c() { V(e.$$.fragment) }, m(t, l) { q(e, t, l), a = !0 }, p(t, a) { const l = {}; 4 & a[0] && (l.input = t[2][0].input), 4 & a[0] && (l.dataRange = t[2].colorRange), 16 & a[0] && (l.isExited = t[4]), e.$set(l) }, i(t) { a || (G(e.$$.fragment, t), a = !0) }, o(t) { T(e.$$.fragment, t), a = !1 }, d(t) { j(e, t) } } } function Kl(t) { let e, a; return e = new Qt({ props: { input: t[2][0].input, output: t[2][0].output, dataRange: t[2].colorRange, isExited: t[4] } }), e.$on("message", t[11]), { c() { V(e.$$.fragment) }, m(t, l) { q(e, t, l), a = !0 }, p(t, a) { const l = {}; 4 & a[0] && (l.input = t[2][0].input), 4 & a[0] && (l.output = t[2][0].output), 4 & a[0] && (l.dataRange = t[2].colorRange), 16 & a[0] && (l.isExited = t[4]), e.$set(l) }, i(t) { a || (G(e.$$.fragment, t), a = !0) }, o(t) { T(e.$$.fragment, t), a = !1 }, d(t) { j(e, t) } } } function Yl(t) { let e, a; return e = new qt({ props: { input: t[2][t[3]].input, kernel: t[2][t[3]].kernel, dataRange: t[2].colorRange, colorScale: t[2].inputIsInputLayer ? t[6].input[0] : t[6].conv, isInputInputLayer: t[2].inputIsInputLayer, isExited: t[5] } }), e.$on("message", t[9]), { c() { V(e.$$.fragment) }, m(t, l) { q(e, t, l), a = !0 }, p(t, a) { const l = {}; 12 & a[0] && (l.input = t[2][t[3]].input), 12 & a[0] && (l.kernel = t[2][t[3]].kernel), 4 & a[0] && (l.dataRange = t[2].colorRange), 4 & a[0] && (l.colorScale = t[2].inputIsInputLayer ? t[6].input[0] : t[6].conv), 4 & a[0] && (l.isInputInputLayer = t[2].inputIsInputLayer), 32 & a[0] && (l.isExited = t[5]), e.$set(l) }, i(t) { a || (G(e.$$.fragment, t), a = !0) }, o(t) { T(e.$$.fragment, t), a = !1 }, d(t) { j(e, t) } } } function Ul(t) { let e, a, l, n, s, r, c, u; e = new Ce({}); const p = [Yl, Kl, Wl, Dl], y = []; function m(t, e) { return t[1].data && "conv" === t[1].data.type && -1 != t[3] ? 0 : t[1].data && "relu" === t[1].data.type ? 1 : t[1].data && "pool" === t[1].data.type ? 2 : t[0].show ? 3 : -1 } return ~(n = m(t)) && (s = y[n] = p[n](t)), c = new ye({}), c.$on("xClicked", t[7]), c.$on("urlTyped", t[8]), { c() { V(e.$$.fragment), a = g(), l = d("div"), s && s.c(), r = g(), V(c.$$.fragment), h(l, "id", "detailview") }, m(t, s) { q(e, t, s), i(t, a, s), i(t, l, s), ~n && y[n].m(l, null), i(t, r, s), q(c, t, s), u = !0 }, p(t, e) { let a = n; n = m(t), n === a ? ~n && y[n].p(t, e) : (s && (z(), T(y[a], 1, 1, () => { y[a] = null }), F()), ~n ? (s = y[n], s ? s.p(t, e) : (s = y[n] = p[n](t), s.c()), G(s, 1), s.m(l, null)) : s = null) }, i(t) { u || (G(e.$$.fragment, t), G(s), G(c.$$.fragment, t), u = !0) }, o(t) { T(e.$$.fragment, t), T(s), T(c.$$.fragment, t), u = !1 }, d(t) { j(e, t), t && o(a), t && o(l), ~n && y[n].d(), t && o(r), j(c, t) } } } function Jl(t, e, a) { let l = new Set(["local", "module", "global"]); at.set("local"); let n = "local", s = void 0, r = void 0; const i = Ve.layerColorScales, o = Ve.nodeLength, d = Ve.numLayers, c = Ve.edgeOpacity, g = Ve.edgeInitColor, u = Ve.edgeHoverColor, p = Ve.edgeStrokeWidth, h = Ve.svgPaddings, y = Ve.overlayRectOffset; let m = [void 0, void 0]; st.subscribe(t => { m = t }); let f = void 0; et.subscribe(t => { f = t }); let x = void 0; lt.subscribe(t => { x = t }), nt.subscribe(t => { }); let v = void 0; rt.subscribe(t => { v = t }), it.subscribe(t => { }), Z.subscribe(t => { }); let b = void 0; tt.subscribe(t => { b = t }); let $ = void 0; ot.subscribe(t => { $ = t }); let w = void 0; dt.subscribe(t => { a(0, w = t) }), ut.subscribe(t => { }), gt.subscribe(t => { }); let I = void 0; pt.subscribe(t => { I = t }); let L = void 0, M = void 0, A = void 0, E = { layerName: "", index: -1, data: null }, R = !1, S = !1, C = -1, N = -1, H = void 0, _ = void 0; const P = { input: 0, conv_1_1: 1, relu_1_1: 2, conv_1_2: 3, relu_1_2: 4, max_pool_1: 5, conv_2_1: 6, relu_2_1: 7, conv_2_2: 8, relu_2_2: 9, max_pool_2: 10, output: 11 }, O = { 0: { local: "input-legend", module: "input-legend", global: "input-legend" }, 1: { local: "local-legend-0-1", module: "module-legend-0", global: "global-legend" }, 2: { local: "local-legend-0-1", module: "module-legend-0", global: "global-legend" }, 3: { local: "local-legend-0-2", module: "module-legend-0", global: "global-legend" }, 4: { local: "local-legend-0-2", module: "module-legend-0", global: "global-legend" }, 5: { local: "local-legend-0-2", module: "module-legend-0", global: "global-legend" }, 6: { local: "local-legend-1-1", module: "module-legend-1", global: "global-legend" }, 7: { local: "local-legend-1-1", module: "module-legend-1", global: "global-legend" }, 8: { local: "local-legend-1-2", module: "module-legend-1", global: "global-legend" }, 9: { local: "local-legend-1-2", module: "module-legend-1", global: "global-legend" }, 10: { local: "local-legend-1-2", module: "module-legend-1", global: "global-legend" }, 11: { local: "output-legend", module: "output-legend", global: "output-legend" } }; let B, X = "espresso_1.jpeg", z = -1, F = !0, G = !0, T = null; const V = (t, e, a) => { void 0 === H && r.select("rect#underneath-gateway-" + t.index).style("opacity", 1) }, q = (t, e, a) => { void 0 === H && r.select("rect#underneath-gateway-" + t.index).style("opacity", 0) }, j = (t, e, l, n, s) => { if (d3.event.stopPropagation(), a(5, G = !1), H === t.index) a(3, z = -1), H = void 0, r.select("rect#underneath-gateway-" + t.index).style("opacity", 0); else { a(3, z = t.index); t.output, t.outputLinks[n].weight; let e = x.local[s - 1], l = x.local[s], i = Math.max(e, l); void 0 !== H && (r.select("rect#underneath-gateway-" + H).style("opacity", 0), r.select("rect#underneath-gateway-" + t.index).style("opacity", 1)); let o = d3.select("#cnn-svg"), d = +o.style("height").replace("px", "") / 2, c = +o.style("width").replace("px", ""), g = 100 + d - 125, u = I[Object.keys(P)[s]], p = 0; s > 6 ? (p = (u - h.left) / 2, p = h.left + p - 243) : (p = (c + h.right - u) / 2, p = u + p - 243); const y = document.getElementById("detailview"); y.style.top = g + "px", y.style.left = p + "px", y.style.position = "absolute", H = t.index, a(2, B.colorRange = i, B), a(2, B.inputIsInputLayer = s <= 1, B) } }, D = () => { if (void 0 !== H) a(3, z = -1), r.select("rect#underneath-gateway-" + H).style("opacity", 0), H = void 0; else if ($) r.select(".softmax-symbol").dispatch("click"); else if (R) { let t = P[E.layerName]; ht(t, E.domG, E.domI), d3.select(E.domG[E.domI]).dispatch("mouseleave") } else S && W() }, W = () => { S = !1, C = -1; let t = P[E.layerName], e = E.index; r.select(`g#layer-${t}-node-${e}`).select("rect.bounding").classed("hidden", !0), E.data.inputLinks.forEach(t => { let e = P[t.source.layerName], a = t.source.index; r.select(`g#layer-${e}-node-${a}`).select("rect.bounding").classed("hidden", !0) }), r.select("g.underneath").selectAll("rect").remove(); r.select("g.edge-group").selectAll(".edge").filter(t => t.targetLayerIndex !== N).style("visibility", null); r.selectAll(".local-legend").classed("hidden", !v), r.selectAll(".input-legend").classed("hidden", !v), r.selectAll(".output-legend").classed("hidden", !v), r.select("g.cnn-group").select("g.edge-group").selectAll(`path.edge-${t}-${e}`).transition().ease(d3.easeCubicOut).duration(200).style("stroke", g).style("stroke-width", p).style("opacity", c), r.selectAll("g.intermediate-layer-overlay, g.intermediate-layer-annotation").transition("remove").duration(500).ease(d3.easeCubicInOut).style("opacity", 0).on("end", (t, e, a) => { r.selectAll("g.intermediate-layer-overlay, g.intermediate-layer-annotation").remove(), r.selectAll("defs.overlay-gradient").remove(), r.select(".input-annotation").classed("hidden", !1) }), r.select("g#cnn-layer-group-" + t).selectAll("g.node-group").each((t, e, a) => { d3.select(a[e]).style("pointer-events", "all") }), r.select("g#cnn-layer-group-" + (t - 1)).selectAll("g.node-group").each((t, e, a) => { d3.select(a[e]).style("pointer-events", "all").on("mouseover", mt).on("mouseleave", ft).on("click", yt) }), a(1, E.layerName = "", E), a(1, E.index = -1, E), a(1, E.data = null, E), N = -1 }, K = (t, e, a) => { let l = P[t.layerName], n = t.index; r.select("g.cnn-group").select("g.edge-group").selectAll(`path.edge-${N}-${n}`).raise().transition().ease(d3.easeCubicInOut).duration(400).style("stroke", u).style("stroke-width", "1").style("opacity", 1), d3.select(a[e]).select("rect.bounding").classed("hidden", !1); let s = l - 1; l === N - 1 && (s = l + 1), r.select(`g#layer-${s}-node-${n}`).select("rect.bounding").classed("hidden", !1) }, Y = (t, e, a) => { let l = P[t.layerName], n = t.index; r.select("g.cnn-group").select("g.edge-group").selectAll(`path.edge-${N}-${n}`).transition().ease(d3.easeCubicOut).duration(200).style("stroke", g).style("stroke-width", p).style("opacity", c), d3.select(a[e]).select("rect.bounding").classed("hidden", !0); let s = l - 1; l === N - 1 && (s = l + 1), r.select(`g#layer-${s}-node-${n}`).select("rect.bounding").classed("hidden", !0) }, U = (t, e, a) => { let l = P[t.layerName], n = t.index; r.select(`g#layer-${l + 1}-node-${n}`).node().dispatchEvent(new Event("click")) }, ht = (t, e, l) => { $ && (r.select(".logit-layer").remove(), r.select(".logit-layer-lower").remove(), r.selectAll(".plus-symbol-clone").remove(), r.select(".underneath").selectAll(".logit-lower").style("opacity", 0), dt.set({ show: !1, logits: [] }), ct.set(!1)), ot.set(!1), R = !1, r.selectAll(".local-legend").classed("hidden", !v), r.selectAll(".input-legend").classed("hidden", !v), r.selectAll(".output-legend").classed("hidden", !v); for (let e = 0; e < _[t - 1].length; e++)r.select(`g#layer-${t - 1}-node-${e}`).on("mouseover", mt).on("mouseleave", ft).on("click", yt); r.select("g.underneath").selectAll("rect").remove(), H = void 0, r.select("g#cnn-layer-group-" + (t - 1)).selectAll("rect.bounding").style("stroke-width", 1), d3.select(e[l]).select("rect.bounding").style("stroke-width", 1), r.selectAll(`g#layer-label-${t - 1},\n      g#layer-detailed-label-${t - 1},\n      g#layer-label-${t},\n      g#layer-detailed-label-${t}`).style("font-weight", "normal"), a(1, E.layerName = "", E), a(1, E.index = -1, E), a(1, E.data = null, E), a(5, G = !0); let n = r.select("g.intermediate-layer"); if (it.set(!1), n.transition("remove").duration(500).ease(d3.easeCubicInOut).style("opacity", 0).on("end", (t, e, a) => { d3.select(a[e]).remove() }), r.selectAll(".overlay-group").remove(), r.selectAll("g.intermediate-layer-overlay, g.intermediate-layer-annotation").transition("remove").duration(500).ease(d3.easeCubicInOut).style("opacity", 0).on("end", (t, e, a) => { r.selectAll("g.intermediate-layer-overlay, g.intermediate-layer-annotation").remove(), r.selectAll("defs.overlay-gradient").remove() }), void 0 !== m[0]) { let t = x.local[m[0]]; void 0 !== m[1] ? r.select(`g#layer-${m[0]}-node-${m[1]}`).select("image.node-image").each((e, a, l) => ha(e, a, l, t)) : r.select("g#cnn-layer-group-" + m[0]).selectAll("image.node-image").each((e, a, l) => ha(e, a, l, t)) } for (let t = 0; t < d; t++)Ma({ layerIndex: t, targetX: f[t][0].x, disable: !1, delay: 500, opacity: 1 }); Ma({ layerIndex: d - 2, targetX: f[d - 2][0].x, opacity: 1, disable: !1, delay: 500, onEndFunc: () => { r.select("g.edge-group").style("visibility", "visible"), r.select(".input-annotation").classed("hidden", !1) } }) }, yt = (t, e, l) => { d3.event.stopPropagation(); let n = t.index; if (a(1, E.layerName = t.layerName, E), a(1, E.index = t.index, E), a(1, E.data = t, E), a(1, E.domI = e, E), a(1, E.domG = l, E), "conv" === t.type || "relu" === t.type || "pool" === t.type) { let e = []; for (let a = 0; a < t.inputLinks.length; a++)e.push({ input: t.inputLinks[a].source.output, kernel: t.inputLinks[a].weight, output: t.inputLinks[a].dest.output }); let l = P[t.layerName]; e.colorRange = x.local[l], e.isInputInputLayer = l <= 1, a(2, B = e) } let s = P[t.layerName]; if ("relu" == t.type || "pool" == t.type) if (a(4, F = !1), S) if (t.index === C) W(); else { r.select(`g#layer-${s}-node-${C}`).select("rect.bounding").classed("hidden", !0), r.select(`g#layer-${s - 1}-node-${C}`).select("rect.bounding").classed("hidden", !0); let t = r.select("g.cnn-group").select("g.edge-group"); t.selectAll(`path.edge-${s}-${C}`).transition().ease(d3.easeCubicOut).duration(200).style("stroke", g).style("stroke-width", p).style("opacity", c); let e = r.select("g.underneath"); e.select("#underneath-gateway-" + C).style("opacity", 0), r.select(`g#layer-${s}-node-${n}`).select("rect.bounding").classed("hidden", !1), r.select(`g#layer-${s - 1}-node-${n}`).select("rect.bounding").classed("hidden", !1), t.selectAll(`path.edge-${s}-${n}`).raise().transition().ease(d3.easeCubicInOut).duration(400).style("stroke", u).style("stroke-width", "1").style("opacity", 1), e.select("#underneath-gateway-" + n).style("opacity", 1), C = n } else ((t, e) => { S = !0, C = e, N = t; let a = d3.select("#cnn-svg"), l = +a.style("height").replace("px", "") / 2, n = +a.style("width").replace("px", ""), s = 100 + l - 130, i = 0; t > 5 ? (i = f[t - 1][0].x + 50, i = i / 2 - 250) : (i = (n - f[t][0].x - o) / 2, i = f[t][0].x + o + i - 250); const d = document.getElementById("detailview"); d.style.top = s + "px", d.style.left = i + "px", d.style.position = "absolute"; r.select("g.edge-group").selectAll(".edge").filter(e => e.targetLayerIndex !== t).style("visibility", "hidden"); r.select(".input-annotation").classed("hidden", !0), r.selectAll(".local-legend").classed("hidden", !0), r.selectAll(".input-legend").classed("hidden", !0), r.selectAll(".output-legend").classed("hidden", !0), r.select("#" + O[t].local).classed("hidden", !1); let c = f[t - 1][e].x, g = f[t][e].x + o + 5, u = L - g - y / 2, p = c - f[0][0].x; if (u > p) { let t = [{ offset: "0%", color: "rgb(250, 250, 250)", opacity: .85 }, { offset: "50%", color: "rgb(250, 250, 250)", opacity: .9 }, { offset: "100%", color: "rgb(250, 250, 250)", opacity: 1 }]; Aa("overlay-gradient-right", t), t = [{ offset: "0%", color: "rgb(250, 250, 250)", opacity: .85 + p / u * (.95 - .85) }, { offset: "100%", color: "rgb(250, 250, 250)", opacity: .85 }], Aa("overlay-gradient-left", t) } else { let t = [{ offset: "0%", color: "rgb(250, 250, 250)", opacity: 1 }, { offset: "50%", color: "rgb(250, 250, 250)", opacity: .9 }, { offset: "100%", color: "rgb(250, 250, 250)", opacity: .85 }]; Aa("overlay-gradient-left", t), t = [{ offset: "0%", color: "rgb(250, 250, 250)", opacity: .85 }, { offset: "100%", color: "rgb(250, 250, 250)", opacity: .85 + u / p * (.95 - .85) }], Aa("overlay-gradient-right", t) } rl("overlay-gradient-right", g + y / 2 + .5, 0, u, M + h.top), rl("overlay-gradient-left", f[0][0].x - y / 2, 0, p, M + h.top), r.selectAll("rect.overlay").on("click", D); let m = r.select("g.underneath"); for (let e = 0; e < _[t - 1].length; e++)m.append("rect").attr("class", "underneath-gateway").attr("id", "underneath-gateway-" + e).attr("x", f[t - 1][e].x - 7).attr("y", f[t - 1][e].y - 7).attr("width", 2 * o + b + 14).attr("height", o + 14).attr("rx", 10).style("fill", "rgba(160, 160, 160, 0.3)").style("opacity", 0), r.select(`g#layer-${t - 1}-node-${e}`).style("pointer-events", "all").style("cursor", "pointer").on("mouseover", K).on("mouseleave", Y).on("click", U); m.lower(), m.select("#underneath-gateway-" + e).style("opacity", 1) })(s, t.index); "conv" !== t.type && "output" !== t.layerName || R ? "conv" !== t.type && "output" !== t.layerName || !R || ht(s, l, e) : (((t, e, a, l) => { R = !0, r.selectAll(".local-legend").classed("hidden", !0), r.selectAll(".input-legend").classed("hidden", !0), r.selectAll(".output-legend").classed("hidden", !0), r.select(".input-annotation").classed("hidden", !0), r.select("g#cnn-layer-group-" + (l - 1)).selectAll("rect.bounding").style("stroke-width", 2), d3.select(e[a]).select("rect.bounding").style("stroke-width", 2), it.set(!0), r.selectAll(`g#layer-label-${l - 1},\n      g#layer-detailed-label-${l - 1},\n      g#layer-label-${l},\n      g#layer-detailed-label-${l}`).style("font-weight", "800"), d3.select("#cnn-svg").on("click", D) })(0, l, n, s), "conv_1_1" === t.layerName ? ol(s, t, n, L, M, V, q, j) : "conv_1_2" === t.layerName ? dl(s, t, n, L, M, V, q, j) : "conv_2_1" === t.layerName ? cl(s, t, n, L, M, V, q, j) : "conv_2_2" === t.layerName ? gl(s, t, n, L, M, V, q, j) : "output" === t.layerName && jl(s, t, n, 0, M)) }, mt = (t, e, a) => { if (R) return; let l = P[t.layerName], n = t.index; if (r.select("g.cnn-group").select("g.edge-group").selectAll(`path.edge-${l}-${n}`).raise().transition().ease(d3.easeCubicInOut).duration(400).style("stroke", u).style("stroke-width", "1").style("opacity", 1), d3.select(a[e]).select("rect.bounding").classed("hidden", !1), 1 === t.inputLinks.length) { let e = t.inputLinks[0], a = P[e.source.layerName], l = e.source.index; r.select(`g#layer-${a}-node-${l}`).select("rect.bounding").classed("hidden", !1) } else r.select("g#cnn-layer-group-" + (l - 1)).selectAll("g.node-group").selectAll("rect.bounding").classed("hidden", !1); "output" === t.layerName && d3.select(a[e]).select(".output-text").style("opacity", .8).style("text-decoration", "underline") }, ft = (t, e, a) => { if (!R && (S || t.layerName !== E.layerName || t.index !== E.index)) { let l = P[t.layerName], n = t.index; if (r.select("g.cnn-group").select("g.edge-group").selectAll(`path.edge-${l}-${n}`).transition().ease(d3.easeCubicOut).duration(200).style("stroke", g).style("stroke-width", p).style("opacity", c), d3.select(a[e]).select("rect.bounding").classed("hidden", !0), 1 === t.inputLinks.length) { let e = t.inputLinks[0], a = P[e.source.layerName], l = e.source.index; r.select(`g#layer-${a}-node-${l}`).select("rect.bounding").classed("hidden", !0) } else r.select("g#cnn-layer-group-" + (l - 1)).selectAll("g.node-group").selectAll("rect.bounding").classed("hidden", t => t.layerName !== E.layerName || t.index !== E.index); "output" === t.layerName && d3.select(a[e]).select(".output-text").style("fill", "black").style("opacity", .5).style("text-decoration", "none") } }; k(async () => { s = d3.select(void 0).select("#cnn-svg"), r = s.append("g").attr("class", "main-svg").attr("transform", `translate(${h.left}, 0)`), Q.set(r), L = Number(s.style("width").replace("px", "")) - h.left - h.right, M = Number(s.style("height").replace("px", "")) - h.top - h.bottom; let t = r.append("g").attr("class", "cnn-group"); r.append("g").attr("class", "underneath"), s.style("height").replace("px", ""); var e; r.append("defs").append("marker").attr("id", "marker").attr("viewBox", "0 -5 10 10").attr("refX", 6).attr("refY", 0).attr("markerWidth", 6).attr("markerHeight", 6).attr("orient", "auto").append("path").style("stroke-width", 1.2).style("fill", "gray").style("stroke", "gray").attr("d", "M0,-5L10,0L0,5"), r.append("defs").append("marker").attr("id", "marker-alt").attr("viewBox", "0 -5 10 10").attr("refX", 6).attr("refY", 0).attr("markerWidth", 6).attr("markerHeight", 6).attr("orient", "auto").append("path").style("fill", "none").style("stroke", "gray").style("stroke-width", 2).attr("d", "M-5,-10L10,0L-5,10"), console.time("Construct cnn"), A = await (e = "./assets/data/model.json", tf.loadLayersModel(e)), _ = await Fe("./assets/img/" + X, A), console.timeEnd("Construct cnn"), J.set(_); let a = _[_.length - 2]; _.splice(_.length - 2, 1), _.flatten = a, console.log(_), va(), fa(L, M, t, mt, ft, yt) }); return (() => { if (void 0 !== r) { if (l.add("local") || console.error("Encounter unknown scale level!"), "local" != n) { ({ local: { module: [1, 2, 8, 9, 10], global: [1, 2, 3, 4, 5, 8, 9, 10] }, module: { local: [1, 2, 8, 9, 10], global: [1, 2, 3, 4, 5, 8, 9, 10] }, global: { local: [1, 2, 3, 4, 5, 8, 9, 10], module: [1, 2, 3, 4, 5] } })[n].local.forEach(t => { let e = x.local[t]; r.select("#cnn-layer-group-" + t).selectAll(".node-image").each((t, a, l) => ha(t, a, l, e)) }), r.selectAll(`.${n}-legend`).classed("hidden", !0), r.selectAll(".local-legend").classed("hidden", !v) } n = "local", at.set("local") } })(), [w, E, B, z, F, G, i, t => { X = t.detail.preImage }, async t => { T = t.detail.url, _ = await Fe(T, A); let e = _[_.length - 2]; _.splice(_.length - 2, 1), _.flatten = e, J.set(_), ((t, e) => { let a = t.width, l = e[0].output.length, n = document.createElement("canvas"), s = n.getContext("2d"); n.width = l, n.height = l; let r = s.getImageData(0, 0, l, l), i = r.data; for (let t = 0; t < i.length; t += 4) { let a = Math.floor(t / 4), n = Math.floor(a / l), s = a % l, r = e[0].output[n][s], o = e[1].output[n][s], d = e[2].output[n][s]; i[t] = 255 * r, i[t + 1] = 255 * o, i[t + 2] = 255 * d, i[t + 3] = 255 } let o = document.createElement("canvas"); o.width = 3 * a, o.height = 3 * a; let d = o.getContext("2d"); s.putImageData(r, 0, 0), d.drawImage(n, 0, 0, l, l, 0, 0, 3 * a, 3 * a); let c = o.toDataURL(); t.src = c, n.remove(), o.remove() })(d3.select(void 0).select(".custom-image").node(), _[0]), va(), xa() }, function (t) { t.detail.text && (H = void 0, r.select("rect#underneath-gateway-" + z).style("opacity", 0), a(3, z = -1)) }, function (t) { t.detail.text && (W(), a(4, F = !0)) }, function (t) { t.detail.text && (W(), a(4, F = !0)) }, function (t) { a(0, w.show = !1, w), dt.set(w) }] } class Ql extends K { constructor(t) { super(), W(this, t, Jl, Ul, s, {}, null, [-1, -1, -1]) } } function Zl(e) { let a, l, n; return l = new Ql({}), { c() { a = d("div"), V(l.$$.fragment), h(a, "id", "explainer"), h(a, "class", "svelte-1avhf6") }, m(t, e) { i(t, a, e), q(l, a, null), n = !0 }, p: t, i(t) { n || (G(l.$$.fragment, t), n = !0) }, o(t) { T(l.$$.fragment, t), n = !1 }, d(t) { t && o(a), j(l) } } } function tn(t) { return [] } class en extends K { constructor(t) { super(), W(this, t, tn, Zl, s, {}) } } function an(e) { let a, l, n; return l = new en({}), { c() { a = d("div"), V(l.$$.fragment), h(a, "id", "app-page") }, m(t, e) { i(t, a, e), q(l, a, null), n = !0 }, p: t, i(t) { n || (G(l.$$.fragment, t), n = !0) }, o(t) { T(l.$$.fragment, t), n = !1 }, d(t) { t && o(a), j(l) } } } return new class extends K { constructor(t) { super(), W(this, t, null, an, s, {}) } }({ target: document.body, props: {} }) }();
//# sourceMappingURL=bundle.js.map
